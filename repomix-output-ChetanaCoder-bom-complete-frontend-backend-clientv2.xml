This file is a merged representation of the entire codebase, combined into a single document by Repomix.
The content has been processed where security check has been disabled.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Security check has been disabled - content may contain sensitive information
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
backend/
  agents/
    agent_orchestrator.py
    comparison_agent.py
    extraction_agent.py
    supplier_bom_agent.py
    translation_agent.py
  database/
    item_matcher.py
    knowledge_base.py
  models/
    __init__.py
    schemas.py
  routers/
    __init__.py
    autonomous.py
    knowledge_base.py
  services/
    __init__.py
  utils/
    __init__.py
    document_reader.py
    gemini_client.py
  main.py
  requirements.txt
frontend/
  dist/
    assets/
      index-1389506b.css
      index-7d3f69a4.js
    index.html
  src/
    components/
      LanguageSwitcher.jsx
      Layout.jsx
      UI.jsx
    hooks/
      useTranslation.jsx
    pages/
      Dashboard.jsx
      KnowledgeBase.jsx
      Processing.jsx
      Results.jsx
      Settings.jsx
      Upload.jsx
    services/
      translation.js
    styles/
      globals.css
    App.jsx
    main.jsx
  index.html
  package.json
  postcss.config.js
  tailwind.config.js
  vite.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="backend/agents/agent_orchestrator.py">
"""
Enhanced Autonomous Agent Orchestrator - Coordinates document-handling agents with QA classification
"""
import asyncio
import json
import logging
from datetime import datetime
from pathlib import Path
from typing import Callable, Dict, List, Optional
from ..models.schemas import BOMComparisonResult, QAClassificationSummary, MaterialMatch
from ..database.knowledge_base import KnowledgeBase
from ..database.item_matcher import ItemMatcher
from .translation_agent import TranslationAgent
from .extraction_agent import ExtractionAgent  
from .supplier_bom_agent import SupplierBOMAgent
from .comparison_agent import ComparisonAgent

logger = logging.getLogger(__name__)

class AgentOrchestrator:
    def __init__(self, gemini_client):
        self.gemini_client = gemini_client
        # Initialize autonomous agents
        self.translation_agent = TranslationAgent(gemini_client)
        self.extraction_agent = ExtractionAgent(gemini_client)
        self.supplier_bom_agent = SupplierBOMAgent(gemini_client)
        self.comparison_agent = ComparisonAgent(gemini_client)

        # Initialize knowledge base and matcher
        try:
            self.knowledge_base = KnowledgeBase()
            self.item_matcher = ItemMatcher(self.knowledge_base)
        except Exception as e:
            logger.warning(f"Failed to initialize knowledge base: {e}")
            self.knowledge_base = None
            self.item_matcher = None

        logger.info("Enhanced Autonomous Agent Orchestrator initialized with QA classification and Knowledge Base")

    async def process_documents_enhanced(
        self,
        qa_document_path: str,
        supplier_bom_path: str,
        workflow_id: str,
        progress_callback: Optional[Callable] = None
    ) -> Dict:
        logger.info(f"Starting enhanced autonomous workflow for {workflow_id}")
        try:
            # Stage 1: Translation Agent
            if progress_callback:
                if asyncio.iscoroutinefunction(progress_callback):
                    await progress_callback("translation", 5.0, "Translation agent processing QA document...")
                else:
                    progress_callback("translation", 5.0, "Translation agent processing QA document...")
            
            translation_result = await self.translation_agent.process_document(
                qa_document_path,
                source_language="ja",
                target_language="en"
            )
            await self._save_stage_result(workflow_id, "translation", translation_result)
            
            if not translation_result or not translation_result.get('translated_content'):
                raise Exception("Translation failed - no translated content received")
            
            if progress_callback:
                if asyncio.iscoroutinefunction(progress_callback):
                    await progress_callback("translation", 30.0, "Translation completed successfully")
                else:
                    progress_callback("translation", 30.0, "Translation completed successfully")

            # Stage 2: Extraction Agent
            if progress_callback:
                if asyncio.iscoroutinefunction(progress_callback):
                    await progress_callback("extraction", 35.0, "Extraction agent processing materials with QA classification...")
                else:
                    progress_callback("extraction", 35.0, "Extraction agent processing materials with QA classification...")
            
            extraction_result = await self.extraction_agent.process_translated_content(
                translation_result['translated_content']
            )
            await self._save_stage_result(workflow_id, "extraction", extraction_result)
            
            if not extraction_result or not extraction_result.get('materials'):
                raise Exception("Material extraction failed - no materials extracted")
            
            extracted_materials_raw = extraction_result['materials']
            logger.info(f"Extracted {len(extracted_materials_raw)} materials with QA classification")

            # FIXED: Consistent data handling - convert ExtractedMaterial models to dicts for processing
            extracted_materials_dicts = []
            for material in extracted_materials_raw:
                if hasattr(material, 'dict'):
                    material_dict = material.dict()
                else:
                    material_dict = material
                extracted_materials_dicts.append(material_dict)

            if progress_callback:
                if asyncio.iscoroutinefunction(progress_callback):
                    await progress_callback("extraction", 60.0, f"Extracted {len(extracted_materials_dicts)} materials with QA classification")
                else:
                    progress_callback("extraction", 60.0, f"Extracted {len(extracted_materials_dicts)} materials with QA classification")

            # Stage 3: Supplier BOM Agent
            if progress_callback:
                if asyncio.iscoroutinefunction(progress_callback):
                    await progress_callback("supplier_bom", 65.0, "Supplier BOM agent processing Excel data...")
                else:
                    progress_callback("supplier_bom", 65.0, "Supplier BOM agent processing Excel data...")
            
            supplier_result = await self.supplier_bom_agent.process_supplier_bom(
                supplier_bom_path
            )
            await self._save_stage_result(workflow_id, "supplier_bom", supplier_result)
            
            if not supplier_result or not supplier_result.get('items'):
                raise Exception("Supplier BOM processing failed - no items extracted")
            
            supplier_items = supplier_result['items']
            logger.info(f"Processed {len(supplier_items)} supplier BOM items")
            
            if progress_callback:
                if asyncio.iscoroutinefunction(progress_callback):
                    await progress_callback("supplier_bom", 80.0, f"Processed {len(supplier_items)} supplier BOM items")
                else:
                    progress_callback("supplier_bom", 80.0, f"Processed {len(supplier_items)} supplier BOM items")

            # Stage 4: Comparison and Knowledge Base
            if progress_callback:
                if asyncio.iscoroutinefunction(progress_callback):
                    await progress_callback("comparison", 85.0, "Enhanced comparison using knowledge base...")
                else:
                    progress_callback("comparison", 85.0, "Enhanced comparison using knowledge base...")

            # FIXED: Consistent data passing to item matcher
            if self.item_matcher:
                try:
                    # Pass the dictionary representations to item matcher
                    enhanced_matches_raw = self.item_matcher.match_items_with_knowledge_base(
                        extracted_materials_dicts,  # FIXED: Pass dict format
                        supplier_items,
                        workflow_id
                    )
                    
                    # Convert to MaterialMatch objects for consistent output
                    enhanced_matches = []
                    for match in enhanced_matches_raw:
                        try:
                            # Create MaterialMatch object with proper field mapping
                            material_match = MaterialMatch(
                                qa_material_name=match.get('qa_material_name', match.get('name', '')),
                                qa_excerpt=match.get('qa_excerpt', ''),
                                qc_process_step=match.get('qc_process_step'),
                                part_number=match.get('part_number'),
                                qa_classification_label=match.get('qa_classification_label', 13),
                                qa_confidence_level=match.get('qa_confidence_level', 'medium'),
                                confidence_score=match.get('confidence_score', 0.0),
                                supplier_description=match.get('supplier_description', ''),
                                supplier_part_number=match.get('supplier_part_number', ''),
                                match_source=match.get('match_source', 'no_match'),
                                reasoning=match.get('reasoning', ''),
                                has_previous_match=match.get('has_previous_match', False),
                                category=match.get('category', ''),
                                specifications=match.get('specifications', {}),
                                context=match.get('context', '')
                            )
                            enhanced_matches.append(material_match.dict())
                        except Exception as e:
                            logger.warning(f"Failed to create MaterialMatch object: {e}")
                            # Fallback to original match dict
                            enhanced_matches.append(match)
                            
                except Exception as e:
                    logger.warning(f"Item matcher failed, falling back to comparison agent: {e}")
                    enhanced_matches = await self.comparison_agent.compare_materials(
                        extracted_materials_dicts,
                        supplier_items
                    )
            else:
                enhanced_matches = await self.comparison_agent.compare_materials(
                    extracted_materials_dicts,
                    supplier_items
                )

            if progress_callback:
                if asyncio.iscoroutinefunction(progress_callback):
                    await progress_callback("comparison", 95.0, "Knowledge base matching completed")
                else:
                    progress_callback("comparison", 95.0, "Knowledge base matching completed")

            # FIXED: Ensure enhanced_matches are in dict format for final result
            if enhanced_matches and hasattr(enhanced_matches[0], 'dict'):
                enhanced_matches = [match.dict() for match in enhanced_matches]

            final_result = {
                "workflow_id": workflow_id,
                "matches": enhanced_matches,
                "summary": {
                    "total_materials": len(extracted_materials_dicts),
                    "total_supplier_items": len(supplier_items),
                    "successful_matches": sum(1 for m in enhanced_matches if m.get('confidence_score', 0) > 0.5),
                    "knowledge_base_matches": sum(1 for m in enhanced_matches if m.get('has_previous_match', False)),
                    "processing_date": datetime.utcnow().isoformat(),
                    "enhanced_matching": True
                },
                "knowledge_stats": self.knowledge_base.get_processing_stats() if self.knowledge_base else {},
                "qa_classification_summary": self._generate_qa_classification_summary(enhanced_matches)
            }
            await self._save_stage_result(workflow_id, "final", final_result)

            if progress_callback:
                if asyncio.iscoroutinefunction(progress_callback):
                    await progress_callback("completed", 100.0, "Processing completed successfully")
                else:
                    progress_callback("completed", 100.0, "Processing completed successfully")

            logger.info(f"Enhanced workflow {workflow_id} completed successfully")
            return final_result

        except Exception as e:
            logger.error(f"Enhanced workflow failed for {workflow_id}: {str(e)}")
            if progress_callback:
                if asyncio.iscoroutinefunction(progress_callback):
                    await progress_callback("error", 0.0, f"Processing failed: {str(e)}")
                else:
                    progress_callback("error", 0.0, f"Processing failed: {str(e)}")
            raise

    async def process_documents(self, qa_document_path, supplier_bom_path, workflow_id, progress_callback=None):
        """Legacy method that returns BOMComparisonResult object"""
        result = await self.process_documents_enhanced(
            qa_document_path, supplier_bom_path, workflow_id, progress_callback
        )
        return BOMComparisonResult(
            workflow_id=result['workflow_id'],
            matches=result['matches'],
            summary=result['summary']
        )

    def _generate_qa_classification_summary(self, matches: List[Dict]) -> Dict:
        """Generate summary of QA classifications"""
        classification_counts = {}
        confidence_distribution = {"high": 0, "medium": 0, "low": 0}
        
        for m in matches:
            label = m.get('qa_classification_label', 13)  # Default to REQUIRES_MANUAL_REVIEW
            classification_counts[label] = classification_counts.get(label, 0) + 1
            
            conf_level = m.get('qa_confidence_level', 'medium').lower()
            if conf_level in confidence_distribution:
                confidence_distribution[conf_level] += 1
        
        return {
            "classification_counts": classification_counts,
            "confidence_distribution": confidence_distribution,
            "total_items": len(matches)
        }

    async def _save_stage_result(self, workflow_id: str, stage: str, result: Dict):
        """Save stage results to file"""
        try:
            stage_dir = Path(f"results/{workflow_id}")
            stage_dir.mkdir(parents=True, exist_ok=True)
            stage_file = stage_dir / f"{stage}_result.json"
            
            # Convert any pydantic models to dicts for JSON serialization
            serializable_result = self._make_json_serializable(result)
            
            with open(stage_file, "w", encoding="utf-8") as f:
                json.dump(serializable_result, f, ensure_ascii=False, indent=2, default=str)
            logger.info(f"Saved {stage} results for workflow {workflow_id}")
        except Exception as e:
            logger.warning(f"Failed to save {stage} results for workflow {workflow_id}: {e}")

    def _make_json_serializable(self, obj):
        """Convert pydantic models and other non-serializable objects to serializable format"""
        if hasattr(obj, 'dict'):
            return obj.dict()
        elif isinstance(obj, list):
            return [self._make_json_serializable(item) for item in obj]
        elif isinstance(obj, dict):
            return {key: self._make_json_serializable(value) for key, value in obj.items()}
        else:
            return obj
</file>

<file path="backend/agents/comparison_agent.py">
"""
Comparison Agent - Compares materials with supplier BOM
"""

import logging
from typing import Dict, List

logger = logging.getLogger(__name__)

class ComparisonAgent:
    def __init__(self, gemini_client):
        self.gemini_client = gemini_client

    async def compare_materials(self, materials: List[Dict], supplier_items: List[Dict]) -> List[Dict]:
        """Compare materials with supplier BOM"""
        try:
            matched_materials = []

            for material in materials:
                # Simple matching logic for demo
                material_copy = material.copy()
                material_copy.update({
                    'confidence_score': 0.8,
                    'supplier_description': 'Matched supplier item',
                    'supplier_part_number': 'SP001',
                    'match_source': 'supplier_bom',
                    'reasoning': 'Matched based on material name similarity'
                })
                matched_materials.append(material_copy)

            return matched_materials
        except Exception as e:
            logger.error(f"Comparison failed: {e}")
            raise
</file>

<file path="backend/agents/extraction_agent.py">
"""
Enhanced Autonomous Extraction Agent - Parallel Processing with Failsafe JSON parsing and Enum handling
"""

import logging
import json
import re
import asyncio
from typing import List, Dict
from ..models.schemas import ExtractedMaterial, QAClassificationLabel, ActionPathRAG, ConfidenceLevel

logger = logging.getLogger(__name__)

class ExtractionAgent:
    def __init__(self, gemini_client):
        self.gemini_client = gemini_client
        self.stats = {
            "extractions_performed": 0,
            "materials_extracted": 0,
            "chunks_processed": 0,
            "errors": 0
        }
        logger.info("Enhanced Autonomous Extraction Agent initialized with QA classification")

    async def process_translated_content(self, translated_content: str, focus_categories: List[str] = None) -> dict:
        """Process translated content and extract materials with parallel chunk processing"""
        try:
            if not focus_categories:
                focus_categories = [
                    "fasteners", "adhesives", "seals", "gaskets",
                    "electrical", "connectors", "hardware", "consumables", "jigs", "tools"
                ]

            logger.info(f"Processing translated content ({len(translated_content)} characters)")

            # Split into smaller chunks for better processing
            chunks = self._split_into_extraction_chunks(translated_content, max_chunk_size=1500)
            logger.info(f"Split content into {len(chunks)} chunks for parallel extraction")

            # Process all chunks in parallel using asyncio.gather
            extract_tasks = [
                self._extract_from_chunk_enhanced(chunk, focus_categories, i+1, len(chunks))
                for i, chunk in enumerate(chunks)
            ]
            
            logger.info(f"Starting parallel extraction for {len(extract_tasks)} chunks...")
            chunk_results = await asyncio.gather(*extract_tasks, return_exceptions=True)

            # Combine results from all chunks
            all_materials = []
            successful_chunks = 0
            
            for i, chunk_result in enumerate(chunk_results):
                if isinstance(chunk_result, Exception):
                    logger.error(f"Chunk {i+1} extraction failed: {chunk_result}")
                    continue
                
                if chunk_result and isinstance(chunk_result, list):
                    all_materials.extend(chunk_result)
                    successful_chunks += 1
                    logger.info(f"Chunk {i+1} extracted {len(chunk_result)} materials")

            logger.info(f"Parallel extraction completed: {successful_chunks}/{len(chunks)} chunks successful")

            if not all_materials:
                logger.warning("No materials extracted from any chunk, returning demo materials")
                all_materials = self._create_demo_materials_chunk_enhanced()

            # Deduplicate across all chunks
            unique_materials = self._deduplicate_materials(all_materials)
            classification_summary = self._generate_classification_summary(unique_materials)

            # Update statistics
            self.stats["extractions_performed"] += 1
            self.stats["materials_extracted"] += len(unique_materials)
            self.stats["chunks_processed"] += len(chunks)

            logger.info(f"Successfully extracted {len(unique_materials)} unique materials from {len(chunks)} chunks")

            return {
                "success": True,
                "materials": unique_materials,
                "total_materials": len(unique_materials),
                "chunks_processed": len(chunks),
                "successful_chunks": successful_chunks,
                "focus_categories": focus_categories,
                "confidence_distribution": self._calculate_confidence_distribution(unique_materials),
                "qa_classification_summary": classification_summary,
                "processing_stats": self.stats.copy()
            }

        except Exception as e:
            self.stats["errors"] += 1
            logger.error(f"Extraction processing error: {e}")

            demo_materials = self._create_demo_materials_chunk_enhanced()
            return {
                "success": True,  # Demo mode success
                "materials": demo_materials,
                "total_materials": len(demo_materials),
                "chunks_processed": 1,
                "successful_chunks": 0,
                "focus_categories": focus_categories or [],
                "confidence_distribution": self._calculate_confidence_distribution(demo_materials),
                "qa_classification_summary": self._generate_classification_summary(demo_materials),
                "processing_stats": self.stats.copy(),
                "error": str(e),
                "demo_mode": True
            }

    def _split_into_extraction_chunks(self, text: str, max_chunk_size: int = 1500) -> List[str]:
        """Split text into smaller chunks for parallel processing"""
        if len(text) <= max_chunk_size:
            return [text]

        chunks = []
        
        # First, try splitting by double newlines (paragraphs)
        sections = text.split('\n\n')
        current_chunk = []
        current_length = 0

        for section in sections:
            section_length = len(section)
            
            # If adding this section would exceed limit and we have content, save current chunk
            if current_length + section_length > max_chunk_size and current_chunk:
                chunks.append('\n\n'.join(current_chunk))
                current_chunk = [section]
                current_length = section_length
            else:
                current_chunk.append(section)
                current_length += section_length

        # Add remaining content
        if current_chunk:
            chunks.append('\n\n'.join(current_chunk))

        # If we still have very large chunks, split them further by single newlines
        final_chunks = []
        for chunk in chunks:
            if len(chunk) > max_chunk_size:
                sub_chunks = self._split_large_chunk(chunk, max_chunk_size)
                final_chunks.extend(sub_chunks)
            else:
                final_chunks.append(chunk)

        return final_chunks

    def _split_large_chunk(self, chunk: str, max_size: int) -> List[str]:
        """Split a large chunk by sentences or lines"""
        if len(chunk) <= max_size:
            return [chunk]
        
        # Try splitting by single newlines
        lines = chunk.split('\n')
        sub_chunks = []
        current_sub_chunk = []
        current_length = 0
        
        for line in lines:
            line_length = len(line)
            if current_length + line_length > max_size and current_sub_chunk:
                sub_chunks.append('\n'.join(current_sub_chunk))
                current_sub_chunk = [line]
                current_length = line_length
            else:
                current_sub_chunk.append(line)
                current_length += line_length
        
        if current_sub_chunk:
            sub_chunks.append('\n'.join(current_sub_chunk))
        
        return sub_chunks

    async def _extract_from_chunk_enhanced(self, text: str, categories: List[str], chunk_idx: int = None, total_chunks: int = None) -> List[ExtractedMaterial]:
        """Extract materials from one chunk with enhanced prompting"""
        if not self.gemini_client or not self.gemini_client.is_available():
            logger.info(f"Gemini client not available for chunk {chunk_idx}, returning demo materials")
            return self._create_demo_materials_chunk_enhanced()

        extraction_prompt = f"""Extract ALL distinct materials, consumables, fasteners, adhesives, jigs, tools, electrical components, gaskets, connectors, hardware, and any other physical items mentioned in this technical Work Instruction text section.

FOCUS CATEGORIES: {', '.join(categories)}

For each item found, create a JSON object with these fields:
{{
    "name": "exact material name from text",
    "category": "one of: {', '.join(categories)}",
    "specifications": {{"key": "value pairs of any specs mentioned"}},
    "context": "surrounding text explaining usage",
    "confidence_score": 0.8,
    "qc_process_step": "QC step or work instruction step if mentioned or null",
    "consumable_jigs_tools": true,
    "name_mismatch": false,
    "part_number": "part number if available or null",
    "pn_mismatch": false,
    "quantity": 4,
    "unit_of_measure": "pieces",
    "obsolete_pn": false,
    "vendor_name": "vendor if mentioned or null",
    "kit_available": false,
    "ai_engine_processing": "extraction notes"
}}

IMPORTANT INSTRUCTIONS:
- Extract EVERY physical item, material, part, tool, or consumable mentioned
- If the text mentions multiple quantities or variations of the same item, create separate entries
- Include fasteners (bolts, screws, nuts), adhesives (tapes, glues), seals, gaskets, electrical components, tools, jigs
- Return ONLY a valid JSON array containing ALL found items
- Do NOT provide commentary or explanations, ONLY the JSON array

Text section to analyze (chunk {chunk_idx}/{total_chunks}):
{text}

Return JSON array:"""

        try:
            logger.info(f"Processing chunk {chunk_idx}/{total_chunks} ({len(text)} characters)")
            
            response = await self.gemini_client.generate_content(
                extraction_prompt,
                temperature=0.2,
                max_tokens=4000
            )

            logger.info(f"Chunk {chunk_idx}: Received {len(response)} characters from Gemini")
            
            # Parse the response
            materials_data = self._parse_json_response(response, chunk_idx)
            
            if not materials_data:
                logger.warning(f"No valid JSON materials found in chunk {chunk_idx}")
                return []

            logger.info(f"Chunk {chunk_idx}: Parsed {len(materials_data)} material objects from JSON")

            # Create ExtractedMaterial objects
            materials = []
            for j, material_data in enumerate(materials_data):
                try:
                    material = self._create_enhanced_material(material_data, text)
                    materials.append(material)
                    logger.debug(f"Chunk {chunk_idx}: Created material {j+1}: {material.name}")
                except Exception as ex:
                    logger.warning(f"Chunk {chunk_idx}: Error creating material {j+1}: {ex}")
                    continue

            logger.info(f"Chunk {chunk_idx}: Successfully created {len(materials)} ExtractedMaterial objects")
            return materials

        except Exception as e:
            logger.error(f"Chunk {chunk_idx} extraction failed: {e}")
            return []

    def _parse_json_response(self, response: str, chunk_idx: int = None) -> List[Dict]:
        """Robustly parse JSON response from AI with multiple fallback strategies"""
        try:
            # Log raw response for debugging
            logger.debug(f"Chunk {chunk_idx}: Raw response preview: {response[:200]}...")
            
            cleaned = response.strip()

            # Remove markdown code blocks
            cleaned = re.sub(r"^```json", "", cleaned)
            cleaned = re.sub(r"\s*```$", "", cleaned)
            cleaned = cleaned.strip()

            # Strategy 1: Direct JSON parse
            try:
                data = json.loads(cleaned)
                if isinstance(data, list):
                    logger.info(f"Chunk {chunk_idx}: Direct JSON parse successful, found {len(data)} items")
                    return data
                elif isinstance(data, dict):
                    logger.info(f"Chunk {chunk_idx}: Single object parsed, converting to list")
                    return [data]
            except json.JSONDecodeError as e:
                logger.debug(f"Chunk {chunk_idx}: Direct JSON parse failed: {e}")

            # Strategy 2: Extract JSON array using regex
            array_pattern = r'$$\s*\{.*?\}\s*(?:,\s*\{.*?\}\s*)*$$'
            array_matches = re.findall(array_pattern, cleaned, re.DOTALL)
            
            for match in array_matches:
                try:
                    data = json.loads(match)
                    if isinstance(data, list) and len(data) > 0:
                        logger.info(f"Chunk {chunk_idx}: Regex array extraction successful, found {len(data)} items")
                        return data
                except json.JSONDecodeError:
                    continue

            # Strategy 3: Extract individual JSON objects and combine
            object_pattern = r'\{[^{}]*(?:\{[^{}]*\}[^{}]*)*\}'
            object_matches = re.findall(object_pattern, cleaned, re.DOTALL)
            
            objects = []
            for match in object_matches:
                try:
                    obj = json.loads(match)
                    if isinstance(obj, dict) and obj.get('name'):  # Must have a name field
                        objects.append(obj)
                except json.JSONDecodeError:
                    continue
            
            if objects:
                logger.info(f"Chunk {chunk_idx}: Individual object extraction successful, found {len(objects)} items")
                return objects

            # Strategy 4: Try to clean up common JSON issues
            # Remove trailing commas
            cleaned = re.sub(r',\s*}', '}', cleaned)
            cleaned = re.sub(r',\s*]', ']', cleaned)
            
            try:
                data = json.loads(cleaned)
                if isinstance(data, list):
                    logger.info(f"Chunk {chunk_idx}: Cleaned JSON parse successful, found {len(data)} items")
                    return data
            except json.JSONDecodeError:
                pass

            logger.warning(f"Chunk {chunk_idx}: All JSON parsing strategies failed")
            return []

        except Exception as e:
            logger.error(f"Chunk {chunk_idx}: JSON parsing error: {e}")
            return []

    def _create_enhanced_material(self, material_data: dict, source_text: str) -> ExtractedMaterial:
        """Create enhanced material with QA classification, safely handling enums"""
        try:
            classification_result = self._classify_material(material_data)
            material_name = material_data.get("name", "Unknown Material")
            excerpt = self._extract_excerpt(material_name, source_text)

            # Safely handle quantity conversion
            quantity = material_data.get("quantity")
            if quantity is not None:
                try:
                    quantity = float(quantity)
                except (ValueError, TypeError):
                    quantity = None

            material_dict = {
                "name": material_name,
                "qa_material_name": material_name,
                "category": material_data.get("category", "uncategorized"),
                "specifications": material_data.get("specifications", {}),
                "context": material_data.get("context", ""),
                "confidence_score": float(material_data.get("confidence_score", 0.5)),
                "source_section": source_text[:200] + "..." if len(source_text) > 200 else source_text,
                "qa_excerpt": excerpt,

                "qc_process_step": material_data.get("qc_process_step"),
                "consumable_jigs_tools": bool(material_data.get("consumable_jigs_tools", False)),
                "name_mismatch": bool(material_data.get("name_mismatch", False)),
                "part_number": material_data.get("part_number"),
                "pn_mismatch": bool(material_data.get("pn_mismatch", False)),
                "quantity": quantity,
                "unit_of_measure": material_data.get("unit_of_measure"),
                "obsolete_pn": bool(material_data.get("obsolete_pn", False)),
                "vendor_name": material_data.get("vendor_name"),
                "kit_available": bool(material_data.get("kit_available", False)),
                "ai_engine_processing": material_data.get("ai_engine_processing", "AI processed"),

                # Safe enum handling - use .value if enum, else use the value directly
                "confidence_level": getattr(classification_result["confidence_level"], "value", classification_result["confidence_level"]),
                "action_path_rag": getattr(classification_result["action_path"], "value", classification_result["action_path"]),
                "classification_label": getattr(classification_result["label"], "value", classification_result["label"]),
                "classification_reasoning": classification_result["reasoning"]
            }

            return ExtractedMaterial(**material_dict)

        except Exception as e:
            logger.error(f"Error creating enhanced material: {e}")
            # Return a basic demo material on error
            return ExtractedMaterial(
                name=material_data.get("name", "Error Material"),
                qa_material_name=material_data.get("name", "Error Material"),
                category="uncategorized",
                confidence_score=0.3
            )

    def _extract_excerpt(self, material_name: str, source_text: str) -> str:
        """Extract relevant excerpt around material mention"""
        try:
            if material_name and material_name.lower() in source_text.lower():
                start_idx = source_text.lower().find(material_name.lower())
                excerpt_start = max(0, start_idx - 50)
                excerpt_end = min(len(source_text), start_idx + len(material_name) + 50)
                return source_text[excerpt_start:excerpt_end].strip()
        except Exception:
            pass
        return ""

    def _classify_material(self, material_data: dict) -> dict:
        """Classify material based on QA rules safely, returning enum members"""
        try:
            has_consumable = bool(material_data.get("consumable_jigs_tools", False))
            has_pn = bool(material_data.get("part_number"))
            has_qty = bool(material_data.get("quantity"))
            has_specs = bool(material_data.get("specifications"))
            has_vendor = bool(material_data.get("vendor_name"))
            has_kit = bool(material_data.get("kit_available", False))
            pn_mismatch = bool(material_data.get("pn_mismatch", False))
            obsolete_pn = bool(material_data.get("obsolete_pn", False))

            # Apply classification rules
            if has_consumable and has_pn and has_qty and has_specs:
                return {
                    "label": QAClassificationLabel.CONSUMABLE_WITH_PN_SPEC_QTY,
                    "confidence_level": ConfidenceLevel.HIGH,
                    "action_path": ActionPathRAG.GREEN,
                    "reasoning": "Consumable with PN, specifications, and quantity - Auto-Register"
                }
            elif has_consumable and has_pn and has_qty:
                return {
                    "label": QAClassificationLabel.CONSUMABLE_WITH_PN_QTY,
                    "confidence_level": ConfidenceLevel.HIGH,
                    "action_path": ActionPathRAG.GREEN,
                    "reasoning": "Consumable with PN and quantity - Auto-Register"
                }
            elif has_consumable and has_pn and not has_qty:
                return {
                    "label": QAClassificationLabel.CONSUMABLE_NO_QTY,
                    "confidence_level": ConfidenceLevel.MEDIUM,
                    "action_path": ActionPathRAG.AMBER,
                    "reasoning": "Consumable with PN but no quantity - Auto with Flag"
                }
            elif has_consumable and not has_pn:
                return {
                    "label": QAClassificationLabel.CONSUMABLE_NO_PN,
                    "confidence_level": ConfidenceLevel.LOW,
                    "action_path": ActionPathRAG.RED,
                    "reasoning": "Consumable mentioned but no part number - Human Intervention Required"
                }
            elif obsolete_pn:
                return {
                    "label": QAClassificationLabel.CONSUMABLE_OBSOLETE_PN,
                    "confidence_level": ConfidenceLevel.LOW,
                    "action_path": ActionPathRAG.RED,
                    "reasoning": "Obsolete part number detected - Human Intervention Required"
                }
            elif pn_mismatch:
                return {
                    "label": QAClassificationLabel.CONSUMABLE_PN_MISMATCH,
                    "confidence_level": ConfidenceLevel.LOW,
                    "action_path": ActionPathRAG.RED,
                    "reasoning": "Part number mismatch detected - Human Intervention Required"
                }
            elif has_vendor and has_kit and not has_pn:
                return {
                    "label": QAClassificationLabel.VENDOR_KIT_NO_PN,
                    "confidence_level": ConfidenceLevel.LOW,
                    "action_path": ActionPathRAG.RED,
                    "reasoning": "Vendor and kit mentioned but no PN - Human Intervention Required"
                }
            elif has_vendor and not has_consumable:
                return {
                    "label": QAClassificationLabel.VENDOR_NAME_ONLY,
                    "confidence_level": ConfidenceLevel.MEDIUM,
                    "action_path": ActionPathRAG.AMBER,
                    "reasoning": "Only vendor name mentioned - Auto with Flag"
                }
            elif has_kit:
                return {
                    "label": QAClassificationLabel.PRE_ASSEMBLED_KIT,
                    "confidence_level": ConfidenceLevel.MEDIUM,
                    "action_path": ActionPathRAG.AMBER,
                    "reasoning": "Pre-assembled kit mentioned - Auto with Flag"
                }
            else:
                return {
                    "label": QAClassificationLabel.NO_CONSUMABLE_MENTIONED,
                    "confidence_level": ConfidenceLevel.LOW,
                    "action_path": ActionPathRAG.RED,
                    "reasoning": "No clear consumable/jigs/tools mentioned - Human Intervention Required"
                }
        except Exception as e:
            logger.error(f"Error in material classification: {e}")
            return {
                "label": QAClassificationLabel.REQUIRES_MANUAL_REVIEW,
                "confidence_level": ConfidenceLevel.LOW,
                "action_path": ActionPathRAG.RED,
                "reasoning": "Classification error - Manual review required"
            }

    def _create_demo_materials_chunk_enhanced(self) -> List[ExtractedMaterial]:
        """Create demo materials with enhanced classification for fallback"""
        try:
            materials = []

            material1 = ExtractedMaterial(
                name="M6x20mm Hex Bolt",
                qa_material_name="M6x20mm Hex Bolt",
                category="fasteners",
                specifications={"size": "M6x20mm", "type": "hex bolt", "material": "stainless steel"},
                context="Use M6×20 hex bolts for chassis mounting",
                confidence_score=0.95,
                source_section="Demo content - Step 2: Chassis Assembly",
                qa_excerpt="M6×20mm bolts to secure the chassis",
                qc_process_step="Assembly Step 2",
                consumable_jigs_tools=True,
                part_number="BOLT-M6-20-SS",
                quantity=4,
                unit_of_measure="pieces",
                ai_engine_processing="Demo mode - AI classification",
                confidence_level=ConfidenceLevel.HIGH.value,
                action_path_rag=ActionPathRAG.GREEN.value,
                classification_label=QAClassificationLabel.CONSUMABLE_WITH_PN_QTY.value,
                classification_reasoning="Demo: Consumable with PN and quantity - Auto-Register"
            )
            materials.append(material1)

            material2 = ExtractedMaterial(
                name="Industrial Adhesive Tape 25mm",
                qa_material_name="Industrial Adhesive Tape 25mm",
                category="adhesives",
                specifications={"width": "25mm", "type": "double-sided", "length": "50mm"},
                context="Use adhesive tape to secure cable harnesses",
                confidence_score=0.88,
                source_section="Demo content - Step 3: Wiring Work",
                qa_excerpt="adhesive tape to secure cable harnesses",
                qc_process_step="Wiring Step 3",
                consumable_jigs_tools=True,
                part_number="TAPE-ADH-25",
                quantity=2,
                unit_of_measure="rolls",
                ai_engine_processing="Demo mode - AI classification",
                confidence_level=ConfidenceLevel.HIGH.value,
                action_path_rag=ActionPathRAG.GREEN.value,
                classification_label=QAClassificationLabel.CONSUMABLE_WITH_PN_QTY.value,
                classification_reasoning="Demo: Consumable with PN and quantity - Auto-Register"
            )
            materials.append(material2)

            material3 = ExtractedMaterial(
                name="Silicone Sealing Compound",
                qa_material_name="Silicone Sealing Compound",
                category="seals",
                specifications={"type": "silicone", "application": "joint sealing"},
                context="Apply sealing compound to joint areas",
                confidence_score=0.85,
                source_section="Demo content - Step 4: Sealing Process",
                qa_excerpt="silicone sealing material to joint areas",
                qc_process_step="Sealing Step 4",
                consumable_jigs_tools=True,
                part_number="SEAL-SIL-01",
                quantity=1,
                unit_of_measure="tube",
                ai_engine_processing="Demo mode - AI classification",
                confidence_level=ConfidenceLevel.HIGH.value,
                action_path_rag=ActionPathRAG.GREEN.value,
                classification_label=QAClassificationLabel.CONSUMABLE_WITH_PN_QTY.value,
                classification_reasoning="Demo: Consumable with PN and quantity - Auto-Register"
            )
            materials.append(material3)

            return materials

        except Exception as e:
            logger.error(f"Error creating demo materials: {e}")
            return [ExtractedMaterial(
                name="Demo Material",
                qa_material_name="Demo Material",
                category="consumables",
                confidence_score=0.5
            )]

    def _generate_classification_summary(self, materials: List[ExtractedMaterial]) -> dict:
        """Generate summary of QA classifications"""
        try:
            if not materials:
                return {
                    "total_materials": 0,
                    "green_materials": 0,
                    "amber_materials": 0,
                    "red_materials": 0,
                    "classification_breakdown": {}
                }

            green_count = 0
            amber_count = 0
            red_count = 0

            for m in materials:
                try:
                    action_path = getattr(m.action_path_rag, "value", str(m.action_path_rag))
                    if action_path == ActionPathRAG.GREEN.value or action_path == "green":
                        green_count += 1
                    elif action_path == ActionPathRAG.AMBER.value or action_path == "amber":
                        amber_count += 1
                    elif action_path == ActionPathRAG.RED.value or action_path == "red":
                        red_count += 1
                except Exception as e:
                    logger.debug(f"Error processing action path for material: {e}")
                    red_count += 1  # Default to red on error

            # Classification breakdown by label
            breakdown = {}
            for material in materials:
                try:
                    label = material.classification_label
                    label_val = getattr(label, "value", label)
                    label_name = f"Label {label_val}"
                    breakdown[label_name] = breakdown.get(label_name, 0) + 1
                except Exception as e:
                    logger.debug(f"Error processing classification label: {e}")
                    breakdown["Label 13"] = breakdown.get("Label 13", 0) + 1

            return {
                "total_materials": len(materials),
                "green_materials": green_count,
                "amber_materials": amber_count,
                "red_materials": red_count,
                "classification_breakdown": breakdown
            }
        except Exception as e:
            logger.error(f"Error generating classification summary: {e}")
            return {
                "total_materials": len(materials) if materials else 0,
                "green_materials": 0,
                "amber_materials": 0,
                "red_materials": 0,
                "classification_breakdown": {}
            }

    def _deduplicate_materials(self, materials: List[ExtractedMaterial]) -> List[ExtractedMaterial]:
        """Remove duplicate materials based on name and part number"""
        if not materials:
            return []

        unique_materials = []
        seen_keys = set()

        for material in materials:
            try:
                # Create a unique key based on name and part number
                name_key = material.name.lower().strip()
                part_key = (material.part_number or "").lower().strip()
                unique_key = f"{name_key}|{part_key}"
                
                if unique_key not in seen_keys:
                    seen_keys.add(unique_key)
                    unique_materials.append(material)
                else:
                    logger.debug(f"Skipping duplicate material: {material.name}")
            except Exception as e:
                logger.debug(f"Error processing material for deduplication: {e}")
                unique_materials.append(material)

        logger.info(f"Deduplication: {len(materials)} -> {len(unique_materials)} materials")
        return unique_materials

    def _calculate_confidence_distribution(self, materials: List[ExtractedMaterial]) -> Dict:
        """Calculate distribution of confidence scores categorized as high, medium, low"""
        if not materials:
            return {"high": 0, "medium": 0, "low": 0}

        high = medium = low = 0

        for m in materials:
            try:
                score = float(m.confidence_score)
                if score >= 0.8:
                    high += 1
                elif score >= 0.6:
                    medium += 1
                else:
                    low += 1
            except Exception:
                low += 1

        return {"high": high, "medium": medium, "low": low}

    def get_stats(self) -> Dict:
        """Returns the extraction process statistics"""
        return self.stats.copy()
</file>

<file path="backend/agents/supplier_bom_agent.py">
"""
Supplier BOM Agent - Processes Excel/CSV supplier BOM files
"""

import logging
import pandas as pd
from typing import Dict, List
from pathlib import Path

logger = logging.getLogger(__name__)

class SupplierBOMAgent:
    def __init__(self, gemini_client):
        self.gemini_client = gemini_client
        self.stats = {"files_processed": 0, "items_extracted": 0, "errors": 0}
        logger.info("Supplier BOM Agent initialized")

    async def process_supplier_bom(self, file_path: str) -> Dict:
        """Process supplier BOM file (Excel or CSV)"""
        try:
            logger.info(f"Processing supplier BOM: {file_path}")

            # Read the file
            if file_path.endswith(('.xlsx', '.xls')):
                df = pd.read_excel(file_path)
            elif file_path.endswith('.csv'):
                df = pd.read_csv(file_path)
            else:
                raise Exception(f"Unsupported file format: {file_path}")

            # Process the data
            items = self._extract_bom_items(df)

            # Update statistics
            self.stats["files_processed"] += 1
            self.stats["items_extracted"] += len(items)

            return {
                "success": True,
                "items": items,
                "total_items": len(items),
                "columns": list(df.columns),
                "processing_stats": self.stats.copy()
            }

        except Exception as e:
            self.stats["errors"] += 1
            logger.error(f"Supplier BOM processing error: {e}")
            
            # Return demo data on error
            demo_items = self._create_demo_supplier_items()
            return {
                "success": False,
                "error": str(e),
                "items": demo_items,
                "total_items": len(demo_items),
                "processing_stats": self.stats.copy()
            }

    def _extract_bom_items(self, df: pd.DataFrame) -> List[Dict]:
        """Extract items from DataFrame"""
        items = []
        
        # Common column mappings
        column_mappings = {
            'description': ['description', 'item_description', 'product_name', 'name'],
            'part_number': ['part_number', 'part_no', 'item_code', 'sku'],
            'quantity': ['quantity', 'qty', 'amount'],
            'unit_price': ['unit_price', 'price', 'cost'],
            'supplier_name': ['supplier', 'vendor', 'manufacturer'],
            'category': ['category', 'type', 'class']
        }

        # Find actual column names
        actual_columns = {}
        for field, possible_names in column_mappings.items():
            for col_name in df.columns:
                if col_name.lower() in [name.lower() for name in possible_names]:
                    actual_columns[field] = col_name
                    break

        # Extract data
        for _, row in df.iterrows():
            item = {
                'description': str(row.get(actual_columns.get('description', ''), '')),
                'part_number': str(row.get(actual_columns.get('part_number', ''), '')),
                'quantity': self._safe_float(row.get(actual_columns.get('quantity', ''), 0)),
                'unit_price': self._safe_float(row.get(actual_columns.get('unit_price', ''), 0)),
                'supplier_name': str(row.get(actual_columns.get('supplier_name', ''), '')),
                'category': str(row.get(actual_columns.get('category', ''), ''))
            }
            
            # Only add items with at least a description
            if item['description'].strip():
                items.append(item)

        return items

    def _safe_float(self, value) -> float:
        """Safely convert value to float"""
        try:
            if pd.isna(value):
                return 0.0
            return float(value)
        except:
            return 0.0

    def _create_demo_supplier_items(self) -> List[Dict]:
        """Create demo supplier items"""
        return [
            {
                'description': 'M6x20mm Stainless Steel Hex Bolt',
                'part_number': 'BOLT-M6-20-SS',
                'quantity': 100.0,
                'unit_price': 0.25,
                'supplier_name': 'FastenerCorp',
                'category': 'fasteners'
            },
            {
                'description': 'Industrial Adhesive Tape 25mm',
                'part_number': 'TAPE-ADH-25',
                'quantity': 50.0,
                'unit_price': 3.50,
                'supplier_name': 'AdhesivePlus',
                'category': 'adhesives'
            }
        ]

    def get_stats(self) -> Dict:
        """Get processing statistics"""
        return self.stats.copy()
</file>

<file path="backend/agents/translation_agent.py">
"""
Translation Agent - Handles document translation using Gemini
"""

import logging
from typing import Dict, Optional
import asyncio

logger = logging.getLogger(__name__)

# Import the DocumentReader
from ..utils.document_reader import DocumentReader

class TranslationAgent:
    def __init__(self, gemini_client):
        self.gemini_client = gemini_client
        self.stats = {"translations_performed": 0, "characters_translated": 0, "errors": 0}
        logger.info("Translation Agent initialized")

    async def process_document(self, document_path: str, source_language: str = "ja", target_language: str = "en") -> Dict:
        """Process and translate document - FIXED VERSION"""
        try:
            # Use DocumentReader to properly read different file formats
            document_content = DocumentReader.read_document(document_path)
            
            if not document_content:
                logger.warning(f"No content extracted from document: {document_path}")
                document_content = DocumentReader._get_demo_content()

            logger.info(f"Processing document: {document_path} ({len(document_content)} characters)")

            # Translate content
            translated_content = await self._translate_content(
                document_content, source_language, target_language
            )

            # Update statistics
            self.stats["translations_performed"] += 1
            self.stats["characters_translated"] += len(document_content)

            return {
                "success": True,
                "original_content": document_content,
                "translated_content": translated_content,
                "source_language": source_language,
                "target_language": target_language,
                "character_count": len(document_content),
                "processing_stats": self.stats.copy()
            }

        except Exception as e:
            self.stats["errors"] += 1
            logger.error(f"Translation processing error: {e}")
            
            # Return demo content on error
            demo_content = DocumentReader._get_demo_content()
            demo_translation = await self._translate_content(demo_content, source_language, target_language)
            
            return {
                "success": True,  # Mark as success with demo content
                "original_content": demo_content,
                "translated_content": demo_translation,
                "source_language": source_language,
                "target_language": target_language,
                "character_count": len(demo_content),
                "processing_stats": self.stats.copy(),
                "error": str(e),
                "demo_mode": True
            }

    async def _translate_content(self, content: str, source_lang: str, target_lang: str) -> str:
        """Translate content using Gemini - ENHANCED VERSION"""
        if not self.gemini_client or not self.gemini_client.is_available():
            logger.info("Using demo translation - Gemini client not available")
            return self._get_demo_translation(content)

        translation_prompt = f"""
Please translate the following {source_lang} technical work instruction document to {target_lang}.

IMPORTANT INSTRUCTIONS:
- Maintain technical accuracy and preserve any part numbers, measurements, or technical specifications EXACTLY
- Keep numerical values unchanged (e.g., M6×20mm, 8-10 N·m, 25mm, etc.)
- Preserve part numbers and model codes exactly as written
- Translate procedural steps clearly while maintaining technical precision
- Keep quality control terminology consistent

Text to translate:
{content}

Provide only the translated text without any additional commentary.
"""

        try:
            response = await self.gemini_client.generate_content(
                translation_prompt,
                temperature=0.1,  # Low temperature for consistency
                max_tokens=4000
            )
            
            # Clean and validate response
            translated = response.strip()
            if len(translated) > 10:  # Basic validation
                logger.info(f"Successfully translated {len(content)} -> {len(translated)} characters")
                return translated
            else:
                logger.warning("Translation response too short, using demo translation")
                return self._get_demo_translation(content)
                
        except Exception as e:
            logger.warning(f"Translation failed: {e}")
            return self._get_demo_translation(content)

    def _get_demo_translation(self, content: str) -> str:
        """Get demo English translation"""
        return """Work Instruction - Assembly Procedure

Step 1: Part Preparation
- M6×20mm hex bolts x 4 pieces  
- Industrial adhesive tape 25mm width x 2 rolls
- Sealing material (silicone type) x 1 tube

Step 2: Chassis Assembly
Use M6×20mm bolts to secure the chassis.
Tightening torque: 8-10 N·m

Step 3: Wiring Work
Use adhesive tape to secure cable harnesses.
Wrap with tape width 25mm, length 50mm.

Step 4: Sealing Process
Apply silicone sealing material to joint areas.
Curing time: 24 hours

Quality Control Checkpoints:
- Verify bolt tightening
- Confirm wiring securing condition
- Check sealing material application condition

Tools Used:
- Torque wrench (10N·m compatible)
- Cable cutter
- Sealing material application gun"""

    def get_stats(self) -> Dict:
        """Get processing statistics"""
        return self.stats.copy()
</file>

<file path="backend/database/item_matcher.py">
import logging
from typing import List, Dict, Tuple
from .knowledge_base import KnowledgeBase

logger = logging.getLogger(__name__)

class ItemMatcher:
    def __init__(self, knowledge_base: KnowledgeBase):
        self.kb = knowledge_base

    def match_items_with_knowledge_base(self, extracted_items: List[Dict], 
                                      supplier_bom: List[Dict], 
                                      workflow_id: str) -> List[Dict]:
        """
        Enhanced matching that leverages knowledge base for better accuracy
        """
        enhanced_matches = []

        # First, add new items to knowledge base
        try:
            new_item_ids = self.kb.add_items(extracted_items, workflow_id)
            logger.info(f"Added {len(new_item_ids)} items to knowledge base for workflow {workflow_id}")
        except Exception as e:
            logger.error(f"Failed to add items to knowledge base: {e}")
            new_item_ids = []

        for i, item in enumerate(extracted_items):
            # FIXED: Use consistent field names - try qa_material_name first, then name
            material_name = item.get('qa_material_name', item.get('name', ''))
            part_number = item.get('part_number', '')

            # Check knowledge base for previous matches
            try:
                kb_matches = self.kb.find_similar_items(material_name, part_number)
            except Exception as e:
                logger.error(f"Failed to find similar items: {e}")
                kb_matches = []

            # Find matches in current supplier BOM
            supplier_matches = self._find_supplier_matches(item, supplier_bom)

            # Combine and rank matches
            best_match = self._select_best_match(item, kb_matches, supplier_matches)

            # Generate reasoning for the match
            reasoning = self._generate_match_reasoning(kb_matches, supplier_matches, best_match)

            # FIXED: Create enhanced match result with consistent field mapping
            match_result = {
                # Preserve all original fields from extracted item
                **item,
                
                # Ensure qa_material_name is always set
                'qa_material_name': material_name,
                
                # Enhanced matching fields
                'knowledge_base_matches': len(kb_matches),
                'supplier_matches': len(supplier_matches),
                'has_previous_match': len(kb_matches) > 0,
                'match_source': self._determine_match_source(kb_matches, supplier_matches),
                'confidence_score': best_match.get('confidence_score', 0.0) if best_match else 0.0,
                'supplier_description': best_match.get('supplier_description', '') if best_match else '',
                'supplier_part_number': best_match.get('supplier_part_number', '') if best_match else '',
                'reasoning': reasoning,
                
                # Additional metadata
                'processing_timestamp': self._get_timestamp(),
                'matcher_version': '2.0',
                'workflow_id': workflow_id
            }

            enhanced_matches.append(match_result)

        logger.info(f"Enhanced matching completed for workflow {workflow_id}: {len(enhanced_matches)} matches")
        return enhanced_matches

    def _find_supplier_matches(self, item: Dict, supplier_bom: List[Dict]) -> List[Dict]:
        """Find matches in current supplier BOM"""
        # FIXED: Use consistent field names
        material_name = item.get('qa_material_name', item.get('name', '')).lower()
        part_number = item.get('part_number', '')

        matches = []

        for supplier_item in supplier_bom:
            supplier_desc = supplier_item.get('description', '').lower()
            supplier_part = supplier_item.get('part_number', '')

            confidence = 0.0

            # Exact part number match
            if part_number and supplier_part and part_number.strip() == supplier_part.strip():
                confidence = 0.95
            # Partial part number match
            elif part_number and supplier_part and (
                part_number.strip() in supplier_part.strip() or 
                supplier_part.strip() in part_number.strip()
            ):
                confidence = 0.8
            # Name similarity (improved word matching)
            elif material_name and supplier_desc:
                common_words = set(material_name.split()) & set(supplier_desc.split())
                if common_words:
                    # Calculate similarity ratio
                    material_words = set(material_name.split())
                    supplier_words = set(supplier_desc.split())
                    jaccard_similarity = len(common_words) / len(material_words | supplier_words)
                    confidence = min(0.85, jaccard_similarity * 0.9)

            if confidence > 0.3:  # Minimum threshold
                matches.append({
                    'supplier_description': supplier_item.get('description', ''),
                    'supplier_part_number': supplier_item.get('part_number', ''),
                    'confidence_score': confidence,
                    'match_type': 'part_number' if confidence > 0.85 else 'description',
                    'supplier_data': supplier_item  # Include full supplier item data
                })

        return sorted(matches, key=lambda x: x['confidence_score'], reverse=True)

    def _select_best_match(self, item: Dict, kb_matches: List[Dict], 
                          supplier_matches: List[Dict]) -> Dict:
        """Select the best match from knowledge base and supplier matches"""

        # Prioritize knowledge base exact matches with high confidence
        for kb_match in kb_matches:
            if kb_match.get('match_type') == 'exact' and kb_match.get('confidence_score', 0) > 0.8:
                return {
                    'id': kb_match.get('id'),
                    'supplier_description': kb_match.get('material_name', ''),
                    'supplier_part_number': kb_match.get('part_number', ''),
                    'confidence_score': min(0.95, kb_match.get('confidence_score', 0.9)),
                    'match_type': 'exact',
                    'match_source': 'knowledge_base'
                }

        # Then prioritize high-confidence supplier matches
        if supplier_matches:
            best_supplier = supplier_matches[0]  # Already sorted by confidence
            if best_supplier.get('confidence_score', 0) > 0.7:
                return {
                    **best_supplier,
                    'match_source': 'supplier_bom'
                }

        # Fall back to knowledge base fuzzy matches
        if kb_matches:
            best_kb = max(kb_matches, key=lambda x: x.get('confidence_score', 0))
            if best_kb.get('confidence_score', 0) > 0.5:
                return {
                    'id': best_kb.get('id'),
                    'supplier_description': best_kb.get('material_name', ''),
                    'supplier_part_number': best_kb.get('part_number', ''),
                    'confidence_score': max(0.6, best_kb.get('confidence_score', 0.6)),
                    'match_type': 'fuzzy',
                    'match_source': 'knowledge_base'
                }

        # Final fallback - try lower confidence supplier matches
        if supplier_matches:
            best_supplier = supplier_matches[0]
            return {
                **best_supplier,
                'match_source': 'supplier_bom_low_confidence'
            }

        return {}

    def _determine_match_source(self, kb_matches: List[Dict], 
                               supplier_matches: List[Dict]) -> str:
        """Determine the primary source of the match"""
        if kb_matches and supplier_matches:
            return 'hybrid'
        elif kb_matches:
            return 'knowledge_base'
        elif supplier_matches:
            return 'supplier_bom'
        else:
            return 'no_match'

    def _generate_match_reasoning(self, kb_matches: List[Dict], 
                                 supplier_matches: List[Dict], 
                                 best_match: Dict) -> str:
        """Generate human-readable reasoning for the match"""
        if not best_match:
            if not kb_matches and not supplier_matches:
                return "No matches found in knowledge base or supplier BOM"
            else:
                return "Matches found but confidence scores below minimum threshold"

        match_source = best_match.get('match_source', 'unknown')
        confidence = best_match.get('confidence_score', 0)
        match_type = best_match.get('match_type', 'unknown')

        if match_source == 'knowledge_base':
            if match_type == 'exact':
                return f"Exact match found in knowledge base from previous workflow (confidence: {confidence:.1%})"
            else:
                return f"Similar item found in knowledge base based on name similarity (confidence: {confidence:.1%})"
        elif match_source == 'supplier_bom':
            if match_type == 'part_number':
                return f"Part number match found in current supplier BOM (confidence: {confidence:.1%})"
            else:
                return f"Description match found in current supplier BOM (confidence: {confidence:.1%})"
        elif match_source == 'supplier_bom_low_confidence':
            return f"Low confidence match found in supplier BOM - requires review (confidence: {confidence:.1%})"
        elif match_source == 'hybrid':
            return f"Match verified through both knowledge base and supplier BOM (confidence: {confidence:.1%})"

        return f"Match found with {confidence:.1%} confidence via {match_source}"

    def _get_timestamp(self) -> str:
        """Get current timestamp for logging"""
        from datetime import datetime
        return datetime.utcnow().isoformat()
</file>

<file path="backend/database/knowledge_base.py">
import sqlite3
import json
from typing import List, Dict, Optional, Tuple
from datetime import datetime
import logging

logger = logging.getLogger(__name__)

class KnowledgeBase:
    def __init__(self, db_path: str = "knowledge_base.db"):
        self.db_path = db_path
        self.init_database()

    def init_database(self):
        """Initialize the knowledge base database with required tables"""
        try:
            conn = sqlite3.connect(self.db_path)
            cursor = conn.cursor()

            # Items table for storing previously processed items
            cursor.execute('''
                CREATE TABLE IF NOT EXISTS items (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    material_name TEXT NOT NULL,
                    normalized_name TEXT NOT NULL,
                    part_number TEXT,
                    vendor_name TEXT,
                    classification_label INTEGER,
                    classification_confidence TEXT,
                    qc_process_step TEXT,
                    unit_of_measure TEXT,
                    quantity TEXT,
                    consumable_jigs_tools BOOLEAN DEFAULT FALSE,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    workflow_id TEXT,
                    source_document TEXT,
                    qa_excerpt TEXT,
                    category TEXT
                )
            ''')

            # Item matches table for storing successful matches
            cursor.execute('''
                CREATE TABLE IF NOT EXISTS item_matches (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    original_item_id INTEGER,
                    matched_item_id INTEGER,
                    confidence_score REAL,
                    match_type TEXT,
                    supplier_description TEXT,
                    supplier_part_number TEXT,
                    reasoning TEXT,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    workflow_id TEXT,
                    FOREIGN KEY (original_item_id) REFERENCES items (id),
                    FOREIGN KEY (matched_item_id) REFERENCES items (id)
                )
            ''')

            # Create indexes for faster queries
            cursor.execute('CREATE INDEX IF NOT EXISTS idx_material_name ON items(normalized_name)')
            cursor.execute('CREATE INDEX IF NOT EXISTS idx_part_number ON items(part_number)')
            cursor.execute('CREATE INDEX IF NOT EXISTS idx_workflow_id ON items(workflow_id)')

            conn.commit()
            conn.close()
            logger.info("Knowledge base database initialized successfully")
        except Exception as e:
            logger.error(f"Failed to initialize knowledge base: {e}")

    def normalize_material_name(self, material_name: str) -> str:
        """Normalize material name for better matching"""
        if not material_name:
            return ""

        # Convert to lowercase, remove extra spaces, remove special characters
        normalized = material_name.lower().strip()
        # Add more normalization rules as needed
        normalized = ''.join(char for char in normalized if char.isalnum() or char.isspace())
        normalized = ' '.join(normalized.split())  # Remove multiple spaces

        return normalized

    def add_items(self, items: List[Dict], workflow_id: str, source_document: str = None) -> List[int]:
        """Add new items to the knowledge base"""
        if not items:
            return []

        try:
            conn = sqlite3.connect(self.db_path)
            cursor = conn.cursor()

            added_ids = []

            for item in items:
                normalized_name = self.normalize_material_name(item.get('qa_material_name', ''))

                cursor.execute('''
                    INSERT INTO items (
                        material_name, normalized_name, part_number, vendor_name,
                        classification_label, classification_confidence, qc_process_step,
                        unit_of_measure, quantity, consumable_jigs_tools, workflow_id, 
                        source_document, qa_excerpt, category
                    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                ''', (
                    item.get('qa_material_name', ''),
                    normalized_name,
                    item.get('part_number'),
                    item.get('vendor_name'),
                    item.get('qa_classification_label'),
                    item.get('qa_confidence_level'),
                    item.get('qc_process_step'),
                    item.get('unit_of_measure'),
                    item.get('quantity'),
                    item.get('consumable_jigs_tools', False),
                    workflow_id,
                    source_document,
                    item.get('qa_excerpt', ''),
                    item.get('category', '')
                ))

                added_ids.append(cursor.lastrowid)

            conn.commit()
            conn.close()

            return added_ids
        except Exception as e:
            logger.error(f"Failed to add items to knowledge base: {e}")
            return []

    def find_similar_items(self, material_name: str, part_number: str = None, threshold: float = 0.7) -> List[Dict]:
        """Find similar items in the knowledge base"""
        try:
            conn = sqlite3.connect(self.db_path)
            cursor = conn.cursor()

            normalized_query = self.normalize_material_name(material_name)

            # Try exact match first
            results = []
            if normalized_query:
                cursor.execute('''
                    SELECT * FROM items 
                    WHERE normalized_name = ? 
                    ORDER BY created_at DESC
                    LIMIT 5
                ''', (normalized_query,))
                exact_matches = cursor.fetchall()

                # Convert to dictionaries
                columns = [
                    'id', 'material_name', 'normalized_name', 'part_number', 'vendor_name',
                    'classification_label', 'classification_confidence', 'qc_process_step',
                    'unit_of_measure', 'quantity', 'consumable_jigs_tools', 'created_at', 'updated_at',
                    'workflow_id', 'source_document', 'qa_excerpt', 'category'
                ]

                for match in exact_matches:
                    item_dict = dict(zip(columns, match))
                    item_dict['match_type'] = 'exact'
                    item_dict['confidence_score'] = 1.0
                    results.append(item_dict)

            conn.close()
            return results

        except Exception as e:
            logger.error(f"Failed to find similar items: {e}")
            return []

    def get_processing_stats(self) -> Dict:
        """Get statistics about items processed"""
        try:
            conn = sqlite3.connect(self.db_path)
            cursor = conn.cursor()

            cursor.execute('SELECT COUNT(*) FROM items')
            total_items = cursor.fetchone()[0]

            cursor.execute('SELECT COUNT(DISTINCT workflow_id) FROM items WHERE workflow_id IS NOT NULL')
            total_workflows = cursor.fetchone()[0]

            cursor.execute('SELECT COUNT(*) FROM item_matches')
            total_matches = cursor.fetchone()[0]

            cursor.execute('SELECT COUNT(DISTINCT original_item_id) FROM item_matches')
            unique_matched_items = cursor.fetchone()[0]

            conn.close()

            return {
                'total_items': total_items,
                'total_workflows': total_workflows,
                'total_matches': total_matches,
                'unique_matched_items': unique_matched_items,
                'match_rate': (unique_matched_items / total_items * 100) if total_items > 0 else 0
            }
        except Exception as e:
            logger.error(f"Error getting stats: {e}")
            return {
                'total_items': 0,
                'total_workflows': 0,
                'total_matches': 0,
                'unique_matched_items': 0,
                'match_rate': 0
            }

    def clear_all_data(self):
        """Clear all data from knowledge base"""
        try:
            conn = sqlite3.connect(self.db_path)
            cursor = conn.cursor()

            cursor.execute('DELETE FROM item_matches')
            cursor.execute('DELETE FROM items')

            conn.commit()
            conn.close()
            logger.info("Knowledge base cleared successfully")
        except Exception as e:
            logger.error(f"Failed to clear knowledge base: {e}")
</file>

<file path="backend/models/__init__.py">
"""
BOM Analysis Models Package
"""
from .schemas import (
    ExtractedMaterial,
    SupplierBOMItem,
    MaterialMatch,
    BOMComparisonResult,
    QAClassificationSummary,
    WorkflowStatus,
    QAClassificationLabel,
    ConfidenceLevel,
    ActionPathRAG
)

__all__ = [
    'ExtractedMaterial',
    'SupplierBOMItem', 
    'MaterialMatch',
    'BOMComparisonResult',
    'QAClassificationSummary',
    'WorkflowStatus',
    'QAClassificationLabel',
    'ConfidenceLevel',
    'ActionPathRAG'
]
</file>

<file path="backend/models/schemas.py">
"""
Enhanced BOM Analysis Models and Schemas - FIXED VERSION
"""
from pydantic import BaseModel, Field, validator
from typing import List, Dict, Optional, Union, Any
from enum import IntEnum, Enum
from datetime import datetime

class QAClassificationLabel(IntEnum):
    """QA Classification labels (1-13) based on processing rules"""
    CONSUMABLE_WITH_PN_SPEC_QTY = 1
    CONSUMABLE_WITH_PN_QTY = 2
    CONSUMABLE_NO_QTY = 3
    CONSUMABLE_NO_PN = 4
    CONSUMABLE_OBSOLETE_PN = 5
    CONSUMABLE_PN_MISMATCH = 6
    VENDOR_KIT_NO_PN = 7
    VENDOR_NAME_ONLY = 8
    PRE_ASSEMBLED_KIT = 9
    NO_CONSUMABLE_MENTIONED = 10
    JIGS_TOOLS_IDENTIFIED = 11
    PARTIAL_INFO_AVAILABLE = 12
    REQUIRES_MANUAL_REVIEW = 13

class ConfidenceLevel(str, Enum):
    """Confidence levels for QA processing"""
    HIGH = "high"
    MEDIUM = "medium" 
    LOW = "low"

class ActionPathRAG(str, Enum):
    """Action path based on RAG (Red, Amber, Green) classification"""
    GREEN = "green"   # Auto-register
    AMBER = "amber"   # Auto with flag  
    RED = "red"       # Human intervention required

class ExtractedMaterial(BaseModel):
    """Enhanced extracted material with QA classification - FIXED VERSION"""
    # Original fields
    name: str = Field(..., description="Material name/description")
    qa_material_name: Optional[str] = Field(None, description="QA material name (alias for name)")
    category: str = Field(default="uncategorized", description="Material category")
    specifications: Dict[str, Any] = Field(default_factory=dict, description="Material specifications")
    context: str = Field(default="", description="Context from document")
    confidence_score: float = Field(default=0.5, ge=0.0, le=1.0, description="Extraction confidence")
    source_section: str = Field(default="", description="Source document section")
    qa_excerpt: Optional[str] = Field(None, description="Excerpt from QA document")

    # Enhanced QA fields
    qc_process_step: Optional[str] = Field(None, description="QC process step if mentioned")
    consumable_jigs_tools: bool = Field(default=False, description="Is consumable/jigs/tools")
    name_mismatch: bool = Field(default=False, description="Name mismatch detected")
    part_number: Optional[str] = Field(None, description="Part number if available")
    pn_mismatch: bool = Field(default=False, description="Part number mismatch")
    quantity: Optional[Union[float, int]] = Field(None, description="Quantity if specified")
    unit_of_measure: Optional[str] = Field(None, description="Unit of measure")
    obsolete_pn: bool = Field(default=False, description="Obsolete part number")
    vendor_name: Optional[str] = Field(None, description="Vendor name if mentioned")
    kit_available: bool = Field(default=False, description="Kit availability")
    ai_engine_processing: str = Field(default="AI processed", description="AI processing notes")

    # Classification results - FIXED: Handle both enum and int values
    confidence_level: Union[ConfidenceLevel, str] = Field(default=ConfidenceLevel.MEDIUM)
    action_path_rag: Union[ActionPathRAG, str] = Field(default=ActionPathRAG.AMBER)
    classification_label: Union[QAClassificationLabel, int] = Field(default=QAClassificationLabel.REQUIRES_MANUAL_REVIEW)
    classification_reasoning: str = Field(default="", description="Reasoning for classification")
    
    # Additional fields for compatibility
    qa_classification_label: Optional[int] = Field(None, description="QA classification label as int")
    qa_confidence_level: Optional[str] = Field(None, description="QA confidence level as string")

    @validator('qa_material_name', pre=True, always=True)
    def set_qa_material_name(cls, v, values):
        """Ensure qa_material_name is set from name if not provided"""
        if v is None and 'name' in values:
            return values['name']
        return v or ""

    @validator('qa_classification_label', pre=True, always=True)
    def set_qa_classification_label(cls, v, values):
        """Set qa_classification_label from classification_label"""
        if v is None and 'classification_label' in values:
            label = values['classification_label']
            # FIXED: Handle both enum and int values
            if isinstance(label, QAClassificationLabel):
                return label.value
            elif isinstance(label, int):
                return label
            else:
                return QAClassificationLabel.REQUIRES_MANUAL_REVIEW.value
        return v or QAClassificationLabel.REQUIRES_MANUAL_REVIEW.value

    @validator('qa_confidence_level', pre=True, always=True)
    def set_qa_confidence_level(cls, v, values):
        """Set qa_confidence_level from confidence_level"""
        if v is None and 'confidence_level' in values:
            level = values['confidence_level']
            if isinstance(level, ConfidenceLevel):
                return level.value
            elif isinstance(level, str):
                return level
            else:
                return ConfidenceLevel.MEDIUM.value
        return v or ConfidenceLevel.MEDIUM.value

    class Config:
        use_enum_values = True
        # Allow extra fields for flexibility
        extra = "allow"

class SupplierBOMItem(BaseModel):
    """Supplier BOM item model"""
    description: str = Field(..., description="Item description")
    part_number: str = Field(default="", description="Supplier part number")
    quantity: Optional[Union[float, int]] = Field(None, description="Quantity")
    unit_price: Optional[float] = Field(None, description="Unit price")
    category: str = Field(default="", description="Item category")
    supplier_name: str = Field(default="", description="Supplier name")

class MaterialMatch(BaseModel):
    """Enhanced material match result"""
    # Original material fields
    qa_material_name: str = Field(..., description="QA material name")
    qa_excerpt: Optional[str] = Field(None, description="QA excerpt")
    qc_process_step: Optional[str] = Field(None, description="QC process step")
    part_number: Optional[str] = Field(None, description="Part number")
    
    # Classification fields
    qa_classification_label: int = Field(..., description="QA classification label")
    qa_confidence_level: str = Field(..., description="QA confidence level")
    
    # Match information
    confidence_score: float = Field(default=0.0, description="Match confidence score")
    supplier_description: str = Field(default="", description="Supplier description")
    supplier_part_number: str = Field(default="", description="Supplier part number")
    match_source: str = Field(default="no_match", description="Source of match")
    reasoning: str = Field(default="", description="Match reasoning")
    has_previous_match: bool = Field(default=False, description="Has knowledge base match")
    
    # Additional fields
    category: str = Field(default="", description="Material category")
    specifications: Dict[str, Any] = Field(default_factory=dict)
    context: str = Field(default="", description="Context")

    class Config:
        extra = "allow"  # Allow extra fields

class QAClassificationSummary(BaseModel):
    """QA Classification summary"""
    total_materials: int = Field(default=0)
    green_materials: int = Field(default=0)
    amber_materials: int = Field(default=0)
    red_materials: int = Field(default=0)
    classification_breakdown: Dict[str, int] = Field(default_factory=dict)

class BOMComparisonResult(BaseModel):
    """BOM comparison result model"""
    workflow_id: str = Field(..., description="Workflow identifier")
    matches: List[Union[MaterialMatch, Dict]] = Field(default_factory=list, description="Material matches")
    summary: Dict = Field(default_factory=dict, description="Comparison summary")

class WorkflowStatus(BaseModel):
    """Workflow status model"""
    workflow_id: str
    status: str = Field(default="initializing")
    current_stage: str = Field(default="starting")
    progress: float = Field(default=0.0, ge=0.0, le=100.0)
    message: str = Field(default="")
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
</file>

<file path="backend/routers/__init__.py">
# Routers package initialization
</file>

<file path="backend/routers/autonomous.py">
"""
Autonomous Processing Router - FIXED VERSION
"""

import logging
import uuid
import asyncio
from pathlib import Path
from typing import Optional
from fastapi import APIRouter, UploadFile, File, Form, HTTPException, BackgroundTasks
from fastapi.responses import JSONResponse

from ..agents.agent_orchestrator import AgentOrchestrator
from ..utils.gemini_client import GeminiClient

logger = logging.getLogger(__name__)
router = APIRouter()

# Global variables (will be set by main.py)
orchestrator: Optional[AgentOrchestrator] = None
active_workflows = {}

def set_orchestrator(orch: AgentOrchestrator):
    """Set the orchestrator instance"""
    global orchestrator
    orchestrator = orch

async def update_workflow_progress(workflow_id: str, stage: str, progress: float, message: str):
    """Update workflow progress"""
    if workflow_id in active_workflows:
        active_workflows[workflow_id].update({
            "current_stage": stage,
            "progress": progress,
            "message": message,
            "status": "processing" if progress < 100 else "completed"
        })
        logger.info(f"Workflow {workflow_id}: {stage} - {progress}% - {message}")

@router.post("/upload")
async def upload_documents(
    background_tasks: BackgroundTasks,
    wi_document: UploadFile = File(...),
    item_master: UploadFile = File(...)
):
    """Upload and process documents"""
    try:
        # Generate workflow ID
        workflow_id = str(uuid.uuid4())
        
        # Initialize workflow tracking
        active_workflows[workflow_id] = {
            "workflow_id": workflow_id,
            "status": "initializing",
            "current_stage": "upload",
            "progress": 0.0,
            "message": "Processing upload...",
            "wi_document": wi_document.filename,
            "item_master": item_master.filename
        }
        
        # Create uploads directory
        upload_dir = Path("uploads")
        upload_dir.mkdir(exist_ok=True)
        
        # Save uploaded files
        wi_path = upload_dir / wi_document.filename
        item_path = upload_dir / item_master.filename
        
        with open(wi_path, "wb") as f:
            content = await wi_document.read()
            f.write(content)
            
        with open(item_path, "wb") as f:
            content = await item_master.read()
            f.write(content)
        
        logger.info(f"Files uploaded for workflow {workflow_id}: {wi_document.filename}, {item_master.filename}")
        
        # Start background processing
        background_tasks.add_task(
            process_workflow_background,
            workflow_id,
            str(wi_path),
            str(item_path)
        )
        
        return JSONResponse({
            "success": True,
            "workflow_id": workflow_id,
            "message": "Documents uploaded successfully. Processing started.",
            "wi_document": wi_document.filename,
            "item_master": item_master.filename
        })
        
    except Exception as e:
        logger.error(f"Upload error: {e}")
        raise HTTPException(status_code=500, detail=f"Upload failed: {str(e)}")

async def process_workflow_background(workflow_id: str, wi_path: str, item_path: str):
    """Process workflow in background"""
    try:
        if not orchestrator:
            raise Exception("Orchestrator not initialized")
            
        # Update progress callback
        async def progress_callback(stage: str, progress: float, message: str):
            await update_workflow_progress(workflow_id, stage, progress, message)
        
        logger.info(f"Starting background processing for workflow {workflow_id}")
        
        # Process documents
        result = await orchestrator.process_documents_enhanced(
            wi_path,
            item_path, 
            workflow_id,
            progress_callback
        )
        
        # Update final status
        active_workflows[workflow_id].update({
            "status": "completed",
            "progress": 100.0,
            "message": "Processing completed successfully",
            "result": result
        })
        
        logger.info(f"Workflow {workflow_id} completed successfully")
        
    except Exception as e:
        logger.error(f"Background processing failed for workflow {workflow_id}: {e}")
        active_workflows[workflow_id].update({
            "status": "error", 
            "progress": 0.0,
            "message": f"Processing failed: {str(e)}",
            "error": str(e)
        })

@router.get("/workflow/{workflow_id}/status")
async def get_workflow_status(workflow_id: str):
    """Get workflow processing status"""
    try:
        if workflow_id not in active_workflows:
            raise HTTPException(status_code=404, detail="Workflow not found")
        
        status = active_workflows[workflow_id]
        return JSONResponse(status)
        
    except HTTPException:
        raise
    except Exception as e:
        logger.error(f"Status check error: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@router.get("/workflow/{workflow_id}/results")
async def get_workflow_results(workflow_id: str):
    """Get workflow results"""
    try:
        if workflow_id not in active_workflows:
            raise HTTPException(status_code=404, detail="Workflow not found")
        
        workflow = active_workflows[workflow_id]
        
        if workflow["status"] != "completed":
            raise HTTPException(status_code=400, detail="Workflow not completed yet")
        
        if "result" not in workflow:
            raise HTTPException(status_code=404, detail="Results not found")
        
        return JSONResponse(workflow["result"])
        
    except HTTPException:
        raise
    except Exception as e:
        logger.error(f"Results retrieval error: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@router.get("/workflows")
async def list_workflows():
    """List all workflows"""
    try:
        workflows = []
        for workflow_id, workflow in active_workflows.items():
            workflows.append({
                "workflow_id": workflow_id,
                "status": workflow.get("status", "unknown"),
                "progress": workflow.get("progress", 0.0),
                "message": workflow.get("message", ""),
                "wi_document": workflow.get("wi_document", ""),
                "item_master": workflow.get("item_master", "")
            })
        
        return JSONResponse({"workflows": workflows})
        
    except Exception as e:
        logger.error(f"Workflow listing error: {e}")
        raise HTTPException(status_code=500, detail=str(e))
</file>

<file path="backend/routers/knowledge_base.py">
"""
Knowledge Base Router - FIXED VERSION
"""

import logging
from fastapi import APIRouter, HTTPException
from fastapi.responses import JSONResponse

from ..database.knowledge_base import KnowledgeBase

logger = logging.getLogger(__name__)
router = APIRouter()

# Initialize knowledge base
try:
    kb = KnowledgeBase()
except Exception as e:
    logger.error(f"Failed to initialize knowledge base: {e}")
    kb = None

@router.get("/stats")
async def get_knowledge_base_stats():
    """Get knowledge base statistics"""
    try:
        if not kb:
            raise HTTPException(status_code=503, detail="Knowledge base not available")
        
        stats = kb.get_processing_stats()
        return JSONResponse(stats)
        
    except HTTPException:
        raise
    except Exception as e:
        logger.error(f"Stats retrieval error: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@router.post("/clear")
async def clear_knowledge_base():
    """Clear all data from knowledge base"""
    try:
        if not kb:
            raise HTTPException(status_code=503, detail="Knowledge base not available")
        
        kb.clear_all_data()
        return JSONResponse({"success": True, "message": "Knowledge base cleared successfully"})
        
    except HTTPException:
        raise
    except Exception as e:
        logger.error(f"Clear operation error: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@router.get("/items")
async def search_items(query: str = "", limit: int = 50):
    """Search items in knowledge base"""
    try:
        if not kb:
            raise HTTPException(status_code=503, detail="Knowledge base not available")
        
        # For now, return empty results - can be enhanced later
        return JSONResponse({
            "items": [],
            "total": 0,
            "query": query,
            "limit": limit
        })
        
    except HTTPException:
        raise
    except Exception as e:
        logger.error(f"Search error: {e}")
        raise HTTPException(status_code=500, detail=str(e))
</file>

<file path="backend/services/__init__.py">
# Services package initialization
</file>

<file path="backend/utils/__init__.py">
# Utils package initialization
</file>

<file path="backend/utils/document_reader.py">
"""
Document Reader with support for various file formats
"""

import logging
import os
from pathlib import Path
from typing import Optional
import zipfile
import xml.etree.ElementTree as ET

logger = logging.getLogger(__name__)

class DocumentReader:
    """Handles reading various document formats"""
    
    @staticmethod
    def read_document(file_path: str) -> Optional[str]:
        """Read document content from various file formats"""
        try:
            path = Path(file_path)
            
            if not path.exists():
                logger.error(f"File not found: {file_path}")
                return DocumentReader._get_demo_content()
            
            file_extension = path.suffix.lower()
            
            if file_extension == '.txt':
                return DocumentReader._read_txt(file_path)
            elif file_extension in ['.docx']:
                return DocumentReader._read_docx(file_path)
            elif file_extension in ['.doc']:
                logger.warning(f"Legacy .doc format not fully supported: {file_path}")
                return DocumentReader._get_demo_content()
            elif file_extension == '.pdf':
                logger.warning(f"PDF format requires additional libraries: {file_path}")
                return DocumentReader._get_demo_content()
            else:
                logger.warning(f"Unsupported file format: {file_extension}")
                return DocumentReader._get_demo_content()
                
        except Exception as e:
            logger.error(f"Error reading document {file_path}: {e}")
            return DocumentReader._get_demo_content()
    
    @staticmethod
    def _read_txt(file_path: str) -> str:
        """Read plain text file"""
        try:
            with open(file_path, 'r', encoding='utf-8') as file:
                return file.read()
        except UnicodeDecodeError:
            # Try different encodings
            encodings = ['utf-8', 'latin-1', 'cp1252', 'shift_jis', 'utf-16']
            for encoding in encodings:
                try:
                    with open(file_path, 'r', encoding=encoding) as file:
                        content = file.read()
                        logger.info(f"Successfully read file with encoding: {encoding}")
                        return content
                except UnicodeDecodeError:
                    continue
            
            logger.error(f"Could not decode file with any standard encoding: {file_path}")
            return DocumentReader._get_demo_content()
    
    @staticmethod
    def _read_docx(file_path: str) -> str:
        """Read DOCX file by extracting text from XML"""
        try:
            # DOCX files are ZIP archives containing XML
            with zipfile.ZipFile(file_path, 'r') as zip_file:
                # Read the main document content
                with zip_file.open('word/document.xml') as doc_xml:
                    tree = ET.parse(doc_xml)
                    root = tree.getroot()
                    
                    # Extract text from all text nodes
                    # DOCX uses namespace, so we need to find text elements
                    text_content = []
                    
                    # Find all text elements (namespace-aware)
                    for elem in root.iter():
                        if elem.text and elem.text.strip():
                            text_content.append(elem.text.strip())
                    
                    extracted_text = ' '.join(text_content)
                    
                    if extracted_text:
                        logger.info(f"Successfully extracted {len(extracted_text)} characters from DOCX")
                        return extracted_text
                    else:
                        logger.warning("No text content found in DOCX file")
                        return DocumentReader._get_demo_content()
                        
        except zipfile.BadZipFile:
            logger.error(f"Invalid DOCX file (not a valid ZIP): {file_path}")
            return DocumentReader._get_demo_content()
        except KeyError as e:
            logger.error(f"DOCX structure error - missing {e}: {file_path}")
            return DocumentReader._get_demo_content()
        except Exception as e:
            logger.error(f"Error reading DOCX file: {e}")
            return DocumentReader._get_demo_content()
    
    @staticmethod
    def _get_demo_content() -> str:
        """Return demo Japanese content for testing"""
        return """作業指示書 - 組み立て手順

ステップ1: 部品の準備
- M6×20mmボルト（六角）x 4個
- 工業用接着テープ 25mm幅 x 2ロール
- シール材 (シリコン系) x 1本

ステップ2: シャーシ組み立て
M6×20mmボルトを使用してシャーシを固定する。
締め付けトルク: 8-10 N·m

ステップ3: 配線作業  
接着テープを使用してケーブルハーネスを固定する。
テープ幅25mm、長さ50mmで巻き付ける。

ステップ4: シール処理
シリコン系シール材を継ぎ目部分に塗布する。
硬化時間: 24時間

品質管理チェックポイント:
- ボルト締め付け確認
- 配線固定状態確認  
- シール材塗布状態確認

使用工具:
- トルクレンチ (10N·m対応)
- ケーブルカッター
- シール材塗布用ガン"""
</file>

<file path="backend/utils/gemini_client.py">
"""
Enhanced Gemini AI Client with real API integration
"""

import logging
import os
import json
import asyncio
import aiohttp
from typing import Optional

logger = logging.getLogger(__name__)

class GeminiClient:
    def __init__(self, api_key: Optional[str] = None):
        self.api_key = api_key or os.getenv('GEMINI_API_KEY')
        self.base_url = "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent"
        self.available = bool(self.api_key)
        
        if not self.available:
            logger.warning("Gemini API key not found - running in demo mode")
        else:
            logger.info("Gemini client initialized successfully")
            # Set the API key as environment variable for use
            os.environ['GEMINI_API_KEY'] = self.api_key

    def is_available(self) -> bool:
        """Check if Gemini client is available"""
        return self.available

    async def generate_content(self, prompt: str, temperature: float = 0.7, max_tokens: int = 1000) -> str:
        """Generate content using Gemini API"""
        if not self.is_available():
            logger.warning("Gemini API not available, returning demo response")
            return self._get_demo_response(prompt)
        
        try:
            url = f"{self.base_url}?key={self.api_key}"
            
            payload = {
                "contents": [{
                    "parts": [{
                        "text": prompt
                    }]
                }],
                "generationConfig": {
                    "temperature": temperature,
                    "maxOutputTokens": max_tokens,
                    "topP": 0.8,
                    "topK": 10
                }
            }
            
            headers = {
                "Content-Type": "application/json"
            }
            
            async with aiohttp.ClientSession() as session:
                async with session.post(url, json=payload, headers=headers, timeout=30) as response:
                    if response.status == 200:
                        result = await response.json()
                        
                        # Extract text from Gemini response
                        if 'candidates' in result and len(result['candidates']) > 0:
                            candidate = result['candidates'][0]
                            if 'content' in candidate and 'parts' in candidate['content']:
                                parts = candidate['content']['parts']
                                if len(parts) > 0 and 'text' in parts[0]:
                                    generated_text = parts[0]['text'].strip()
                                    logger.info(f"Successfully generated {len(generated_text)} characters from Gemini")
                                    return generated_text
                        
                        logger.warning("Unexpected response format from Gemini API")
                        return self._get_demo_response(prompt)
                    else:
                        error_text = await response.text()
                        logger.error(f"Gemini API error {response.status}: {error_text}")
                        return self._get_demo_response(prompt)
                        
        except asyncio.TimeoutError:
            logger.error("Gemini API request timed out")
            return self._get_demo_response(prompt)
        except Exception as e:
            logger.error(f"Gemini API error: {e}")
            return self._get_demo_response(prompt)

    def _get_demo_response(self, prompt: str) -> str:
        """Generate demo response when API is not available"""
        if "translate" in prompt.lower():
            return "Demo English translation: This is a technical work instruction document containing assembly steps, material specifications, and quality control procedures."
        elif "extract materials" in prompt.lower():
            demo_json = [
                {
                    "name": "M6x20mm Hex Bolt",
                    "category": "fasteners",
                    "specifications": {"size": "M6x20mm", "type": "hex bolt", "material": "stainless steel"},
                    "context": "Use M6×20 hex bolts for chassis assembly in step 3",
                    "confidence_score": 0.95,
                    "qc_process_step": "Assembly Step 3",
                    "consumable_jigs_tools": True,
                    "name_mismatch": False,
                    "part_number": "BOLT-M6-20-SS",
                    "pn_mismatch": False,
                    "quantity": 4,
                    "unit_of_measure": "pieces",
                    "obsolete_pn": False,
                    "vendor_name": "FastenerCorp",
                    "kit_available": False,
                    "ai_engine_processing": "Demo mode - AI classification"
                }
            ]
            return json.dumps(demo_json, indent=2)
        else:
            return f"Demo AI response for: {prompt[:100]}..."
</file>

<file path="backend/main.py">
"""
FastAPI Backend for BOM Analysis System - FIXED VERSION
"""

import logging
import os
from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from contextlib import asynccontextmanager

from .utils.gemini_client import GeminiClient
from .agents.agent_orchestrator import AgentOrchestrator
from .routers import autonomous, knowledge_base

# Setup logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# Global variables
gemini_client = None
orchestrator = None

@asynccontextmanager
async def lifespan(app: FastAPI):
    # Startup
    global gemini_client, orchestrator
    try:
        # Set the Gemini API key
        gemini_api_key = "AIzaSyAmpbcqcghKn-IjkhBvdJU-LLfaf4JFEx4"
        os.environ['GEMINI_API_KEY'] = gemini_api_key
        
        # Initialize Gemini client with the API key
        gemini_client = GeminiClient(api_key=gemini_api_key)
        
        # Initialize orchestrator
        orchestrator = AgentOrchestrator(gemini_client)
        
        # Set orchestrator in router
        autonomous.set_orchestrator(orchestrator)
        
        logger.info("Backend initialized successfully")
        logger.info(f"Gemini client available: {gemini_client.is_available()}")
        
    except Exception as e:
        logger.error(f"Failed to initialize backend: {e}")
        # Continue anyway for debugging
    
    yield
    
    # Shutdown
    logger.info("Backend shutting down")

app = FastAPI(
    title="BOM Analysis API",
    description="Enhanced BOM Analysis with QA Classification - FIXED VERSION",
    version="2.1.0",
    lifespan=lifespan
)

# Add CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # Configure appropriately for production
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Include routers
app.include_router(autonomous.router, prefix="/api/autonomous", tags=["autonomous"])
app.include_router(knowledge_base.router, prefix="/api/knowledge-base", tags=["knowledge"])

@app.get("/")
async def root():
    return {
        "message": "BOM Analysis API v2.1 - Enhanced with QA Classification",
        "status": "running",
        "gemini_available": gemini_client.is_available() if gemini_client else False
    }

@app.get("/health")
async def health_check():
    return {
        "status": "healthy",
        "version": "2.1.0",
        "gemini_available": gemini_client.is_available() if gemini_client else False,
        "orchestrator_ready": orchestrator is not None,
        "api_key_configured": bool(os.getenv('GEMINI_API_KEY'))
    }

@app.get("/test")
async def test_endpoint():
    """Test endpoint to verify basic functionality"""
    try:
        return {
            "message": "Test successful",
            "gemini_client": gemini_client is not None,
            "gemini_available": gemini_client.is_available() if gemini_client else False,
            "orchestrator": orchestrator is not None,
            "api_key_length": len(os.getenv('GEMINI_API_KEY', '')) if os.getenv('GEMINI_API_KEY') else 0
        }
    except Exception as e:
        logger.error(f"Test endpoint error: {e}")
        return {"error": str(e)}
</file>

<file path="backend/requirements.txt">
fastapi==0.104.1
uvicorn[standard]==0.24.0
pydantic==2.5.0
pandas==2.1.4
openpyxl==3.1.2
python-multipart==0.0.6
aiofiles==23.2.1
sqlalchemy==2.0.23
aiohttp==3.9.1
</file>

<file path="frontend/dist/assets/index-1389506b.css">
*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}html{font-family:Inter,system-ui,sans-serif}.btn-primary{border-radius:.5rem;--tw-bg-opacity: 1;background-color:rgb(37 99 235 / var(--tw-bg-opacity, 1));padding:.5rem 1rem;--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.btn-primary:hover{--tw-bg-opacity: 1;background-color:rgb(29 78 216 / var(--tw-bg-opacity, 1))}.btn-primary:focus{outline:2px solid transparent;outline-offset:2px;--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000);--tw-ring-opacity: 1;--tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity, 1));--tw-ring-offset-width: 2px}.pointer-events-none{pointer-events:none}.static{position:static}.absolute{position:absolute}.relative{position:relative}.inset-y-0{top:0;bottom:0}.right-0{right:0}.mx-auto{margin-left:auto;margin-right:auto}.mb-2{margin-bottom:.5rem}.mb-3{margin-bottom:.75rem}.mb-4{margin-bottom:1rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.ml-2{margin-left:.5rem}.ml-4{margin-left:1rem}.mr-1{margin-right:.25rem}.mr-2{margin-right:.5rem}.mr-4{margin-right:1rem}.mt-1{margin-top:.25rem}.mt-2{margin-top:.5rem}.mt-4{margin-top:1rem}.mt-8{margin-top:2rem}.block{display:block}.inline-block{display:inline-block}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.grid{display:grid}.hidden{display:none}.h-12{height:3rem}.h-16{height:4rem}.h-2{height:.5rem}.h-4{height:1rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-8{height:2rem}.min-h-screen{min-height:100vh}.w-12{width:3rem}.w-16{width:4rem}.w-4{width:1rem}.w-5{width:1.25rem}.w-6{width:1.5rem}.w-8{width:2rem}.min-w-full{min-width:100%}.max-w-4xl{max-width:56rem}.max-w-7xl{max-width:80rem}.flex-shrink-0{flex-shrink:0}@keyframes spin{to{transform:rotate(360deg)}}.animate-spin{animation:spin 1s linear infinite}.cursor-not-allowed{cursor:not-allowed}.cursor-pointer{cursor:pointer}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.items-center{align-items:center}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.75rem * var(--tw-space-x-reverse));margin-left:calc(.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse: 0;border-top-width:calc(1px * calc(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px * var(--tw-divide-y-reverse))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity: 1;border-color:rgb(229 231 235 / var(--tw-divide-opacity, 1))}.overflow-hidden{overflow:hidden}.overflow-x-auto{overflow-x:auto}.whitespace-nowrap{white-space:nowrap}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.rounded-md{border-radius:.375rem}.border{border-width:1px}.border-2{border-width:2px}.border-b{border-bottom-width:1px}.border-b-2{border-bottom-width:2px}.border-gray-200{--tw-border-opacity: 1;border-color:rgb(229 231 235 / var(--tw-border-opacity, 1))}.border-gray-300{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity, 1))}.border-primary-500{--tw-border-opacity: 1;border-color:rgb(59 130 246 / var(--tw-border-opacity, 1))}.border-primary-600{--tw-border-opacity: 1;border-color:rgb(37 99 235 / var(--tw-border-opacity, 1))}.border-transparent{border-color:transparent}.border-t-transparent{border-top-color:transparent}.bg-blue-100{--tw-bg-opacity: 1;background-color:rgb(219 234 254 / var(--tw-bg-opacity, 1))}.bg-gray-100{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity, 1))}.bg-gray-200{--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity, 1))}.bg-gray-50{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity, 1))}.bg-green-100{--tw-bg-opacity: 1;background-color:rgb(220 252 231 / var(--tw-bg-opacity, 1))}.bg-primary-600{--tw-bg-opacity: 1;background-color:rgb(37 99 235 / var(--tw-bg-opacity, 1))}.bg-purple-100{--tw-bg-opacity: 1;background-color:rgb(243 232 255 / var(--tw-bg-opacity, 1))}.bg-red-100{--tw-bg-opacity: 1;background-color:rgb(254 226 226 / var(--tw-bg-opacity, 1))}.bg-red-600{--tw-bg-opacity: 1;background-color:rgb(220 38 38 / var(--tw-bg-opacity, 1))}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity, 1))}.bg-yellow-100{--tw-bg-opacity: 1;background-color:rgb(254 249 195 / var(--tw-bg-opacity, 1))}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-8{padding:2rem}.px-1{padding-left:.25rem;padding-right:.25rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-2\.5{padding-left:.625rem;padding-right:.625rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-0\.5{padding-top:.125rem;padding-bottom:.125rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.py-4{padding-top:1rem;padding-bottom:1rem}.py-8{padding-top:2rem;padding-bottom:2rem}.pl-3{padding-left:.75rem}.pr-2{padding-right:.5rem}.pr-8{padding-right:2rem}.pt-1{padding-top:.25rem}.text-left{text-align:left}.text-center{text-align:center}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-semibold{font-weight:600}.uppercase{text-transform:uppercase}.leading-5{line-height:1.25rem}.tracking-wider{letter-spacing:.05em}.text-blue-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity, 1))}.text-blue-800{--tw-text-opacity: 1;color:rgb(30 64 175 / var(--tw-text-opacity, 1))}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity, 1))}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity, 1))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity, 1))}.text-gray-700{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity, 1))}.text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity, 1))}.text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity, 1))}.text-green-500{--tw-text-opacity: 1;color:rgb(34 197 94 / var(--tw-text-opacity, 1))}.text-green-600{--tw-text-opacity: 1;color:rgb(22 163 74 / var(--tw-text-opacity, 1))}.text-green-800{--tw-text-opacity: 1;color:rgb(22 101 52 / var(--tw-text-opacity, 1))}.text-primary-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity, 1))}.text-purple-600{--tw-text-opacity: 1;color:rgb(147 51 234 / var(--tw-text-opacity, 1))}.text-red-500{--tw-text-opacity: 1;color:rgb(239 68 68 / var(--tw-text-opacity, 1))}.text-red-600{--tw-text-opacity: 1;color:rgb(220 38 38 / var(--tw-text-opacity, 1))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity, 1))}.text-yellow-600{--tw-text-opacity: 1;color:rgb(202 138 4 / var(--tw-text-opacity, 1))}.text-yellow-800{--tw-text-opacity: 1;color:rgb(133 77 14 / var(--tw-text-opacity, 1))}.opacity-50{opacity:.5}.shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.outline{outline-style:solid}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-colors{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.duration-300{transition-duration:.3s}.hover\:border-gray-300:hover{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity, 1))}.hover\:bg-gray-300:hover{--tw-bg-opacity: 1;background-color:rgb(209 213 219 / var(--tw-bg-opacity, 1))}.hover\:bg-gray-50:hover{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity, 1))}.hover\:bg-primary-700:hover{--tw-bg-opacity: 1;background-color:rgb(29 78 216 / var(--tw-bg-opacity, 1))}.hover\:bg-red-700:hover{--tw-bg-opacity: 1;background-color:rgb(185 28 28 / var(--tw-bg-opacity, 1))}.hover\:text-gray-700:hover{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity, 1))}.focus\:border-primary-500:focus{--tw-border-opacity: 1;border-color:rgb(59 130 246 / var(--tw-border-opacity, 1))}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\:ring-1:focus{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus\:ring-2:focus{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus\:ring-gray-500:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(107 114 128 / var(--tw-ring-opacity, 1))}.focus\:ring-primary-500:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity, 1))}.focus\:ring-red-500:focus{--tw-ring-opacity: 1;--tw-ring-color: rgb(239 68 68 / var(--tw-ring-opacity, 1))}.focus\:ring-offset-2:focus{--tw-ring-offset-width: 2px}@media (min-width: 640px){.sm\:ml-6{margin-left:1.5rem}.sm\:flex{display:flex}.sm\:space-x-8>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(2rem * var(--tw-space-x-reverse));margin-left:calc(2rem * calc(1 - var(--tw-space-x-reverse)))}.sm\:px-6{padding-left:1.5rem;padding-right:1.5rem}}@media (min-width: 768px){.md\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}}@media (min-width: 1024px){.lg\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.lg\:px-8{padding-left:2rem;padding-right:2rem}}
</file>

<file path="frontend/dist/assets/index-7d3f69a4.js">
function zd(e,t){for(var n=0;n<t.length;n++){const r=t[n];if(typeof r!="string"&&!Array.isArray(r)){for(const l in r)if(l!=="default"&&!(l in e)){const i=Object.getOwnPropertyDescriptor(r,l);i&&Object.defineProperty(e,l,i.get?i:{enumerable:!0,get:()=>r[l]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))r(l);new MutationObserver(l=>{for(const i of l)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function n(l){const i={};return l.integrity&&(i.integrity=l.integrity),l.referrerPolicy&&(i.referrerPolicy=l.referrerPolicy),l.crossOrigin==="use-credentials"?i.credentials="include":l.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(l){if(l.ep)return;l.ep=!0;const i=n(l);fetch(l.href,i)}})();function Md(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Ja={exports:{}},Ol={},Za={exports:{}},M={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var yr=Symbol.for("react.element"),Od=Symbol.for("react.portal"),Id=Symbol.for("react.fragment"),$d=Symbol.for("react.strict_mode"),Dd=Symbol.for("react.profiler"),Fd=Symbol.for("react.provider"),Ud=Symbol.for("react.context"),Bd=Symbol.for("react.forward_ref"),Ad=Symbol.for("react.suspense"),Wd=Symbol.for("react.memo"),Vd=Symbol.for("react.lazy"),Rs=Symbol.iterator;function Hd(e){return e===null||typeof e!="object"?null:(e=Rs&&e[Rs]||e["@@iterator"],typeof e=="function"?e:null)}var qa={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},ba=Object.assign,eu={};function jn(e,t,n){this.props=e,this.context=t,this.refs=eu,this.updater=n||qa}jn.prototype.isReactComponent={};jn.prototype.setState=function(e,t){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")};jn.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function tu(){}tu.prototype=jn.prototype;function zo(e,t,n){this.props=e,this.context=t,this.refs=eu,this.updater=n||qa}var Mo=zo.prototype=new tu;Mo.constructor=zo;ba(Mo,jn.prototype);Mo.isPureReactComponent=!0;var Ts=Array.isArray,nu=Object.prototype.hasOwnProperty,Oo={current:null},ru={key:!0,ref:!0,__self:!0,__source:!0};function lu(e,t,n){var r,l={},i=null,o=null;if(t!=null)for(r in t.ref!==void 0&&(o=t.ref),t.key!==void 0&&(i=""+t.key),t)nu.call(t,r)&&!ru.hasOwnProperty(r)&&(l[r]=t[r]);var s=arguments.length-2;if(s===1)l.children=n;else if(1<s){for(var a=Array(s),c=0;c<s;c++)a[c]=arguments[c+2];l.children=a}if(e&&e.defaultProps)for(r in s=e.defaultProps,s)l[r]===void 0&&(l[r]=s[r]);return{$$typeof:yr,type:e,key:i,ref:o,props:l,_owner:Oo.current}}function Qd(e,t){return{$$typeof:yr,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function Io(e){return typeof e=="object"&&e!==null&&e.$$typeof===yr}function Kd(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(n){return t[n]})}var zs=/\/+/g;function ii(e,t){return typeof e=="object"&&e!==null&&e.key!=null?Kd(""+e.key):t.toString(36)}function Qr(e,t,n,r,l){var i=typeof e;(i==="undefined"||i==="boolean")&&(e=null);var o=!1;if(e===null)o=!0;else switch(i){case"string":case"number":o=!0;break;case"object":switch(e.$$typeof){case yr:case Od:o=!0}}if(o)return o=e,l=l(o),e=r===""?"."+ii(o,0):r,Ts(l)?(n="",e!=null&&(n=e.replace(zs,"$&/")+"/"),Qr(l,t,n,"",function(c){return c})):l!=null&&(Io(l)&&(l=Qd(l,n+(!l.key||o&&o.key===l.key?"":(""+l.key).replace(zs,"$&/")+"/")+e)),t.push(l)),1;if(o=0,r=r===""?".":r+":",Ts(e))for(var s=0;s<e.length;s++){i=e[s];var a=r+ii(i,s);o+=Qr(i,t,n,a,l)}else if(a=Hd(e),typeof a=="function")for(e=a.call(e),s=0;!(i=e.next()).done;)i=i.value,a=r+ii(i,s++),o+=Qr(i,t,n,a,l);else if(i==="object")throw t=String(e),Error("Objects are not valid as a React child (found: "+(t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return o}function Er(e,t,n){if(e==null)return e;var r=[],l=0;return Qr(e,r,"","",function(i){return t.call(n,i,l++)}),r}function Yd(e){if(e._status===-1){var t=e._result;t=t(),t.then(function(n){(e._status===0||e._status===-1)&&(e._status=1,e._result=n)},function(n){(e._status===0||e._status===-1)&&(e._status=2,e._result=n)}),e._status===-1&&(e._status=0,e._result=t)}if(e._status===1)return e._result.default;throw e._result}var de={current:null},Kr={transition:null},Xd={ReactCurrentDispatcher:de,ReactCurrentBatchConfig:Kr,ReactCurrentOwner:Oo};function iu(){throw Error("act(...) is not supported in production builds of React.")}M.Children={map:Er,forEach:function(e,t,n){Er(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return Er(e,function(){t++}),t},toArray:function(e){return Er(e,function(t){return t})||[]},only:function(e){if(!Io(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};M.Component=jn;M.Fragment=Id;M.Profiler=Dd;M.PureComponent=zo;M.StrictMode=$d;M.Suspense=Ad;M.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Xd;M.act=iu;M.cloneElement=function(e,t,n){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=ba({},e.props),l=e.key,i=e.ref,o=e._owner;if(t!=null){if(t.ref!==void 0&&(i=t.ref,o=Oo.current),t.key!==void 0&&(l=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(a in t)nu.call(t,a)&&!ru.hasOwnProperty(a)&&(r[a]=t[a]===void 0&&s!==void 0?s[a]:t[a])}var a=arguments.length-2;if(a===1)r.children=n;else if(1<a){s=Array(a);for(var c=0;c<a;c++)s[c]=arguments[c+2];r.children=s}return{$$typeof:yr,type:e.type,key:l,ref:i,props:r,_owner:o}};M.createContext=function(e){return e={$$typeof:Ud,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:Fd,_context:e},e.Consumer=e};M.createElement=lu;M.createFactory=function(e){var t=lu.bind(null,e);return t.type=e,t};M.createRef=function(){return{current:null}};M.forwardRef=function(e){return{$$typeof:Bd,render:e}};M.isValidElement=Io;M.lazy=function(e){return{$$typeof:Vd,_payload:{_status:-1,_result:e},_init:Yd}};M.memo=function(e,t){return{$$typeof:Wd,type:e,compare:t===void 0?null:t}};M.startTransition=function(e){var t=Kr.transition;Kr.transition={};try{e()}finally{Kr.transition=t}};M.unstable_act=iu;M.useCallback=function(e,t){return de.current.useCallback(e,t)};M.useContext=function(e){return de.current.useContext(e)};M.useDebugValue=function(){};M.useDeferredValue=function(e){return de.current.useDeferredValue(e)};M.useEffect=function(e,t){return de.current.useEffect(e,t)};M.useId=function(){return de.current.useId()};M.useImperativeHandle=function(e,t,n){return de.current.useImperativeHandle(e,t,n)};M.useInsertionEffect=function(e,t){return de.current.useInsertionEffect(e,t)};M.useLayoutEffect=function(e,t){return de.current.useLayoutEffect(e,t)};M.useMemo=function(e,t){return de.current.useMemo(e,t)};M.useReducer=function(e,t,n){return de.current.useReducer(e,t,n)};M.useRef=function(e){return de.current.useRef(e)};M.useState=function(e){return de.current.useState(e)};M.useSyncExternalStore=function(e,t,n){return de.current.useSyncExternalStore(e,t,n)};M.useTransition=function(){return de.current.useTransition()};M.version="18.3.1";Za.exports=M;var v=Za.exports;const ou=Md(v),Gd=zd({__proto__:null,default:ou},[v]);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Jd=v,Zd=Symbol.for("react.element"),qd=Symbol.for("react.fragment"),bd=Object.prototype.hasOwnProperty,ef=Jd.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,tf={key:!0,ref:!0,__self:!0,__source:!0};function su(e,t,n){var r,l={},i=null,o=null;n!==void 0&&(i=""+n),t.key!==void 0&&(i=""+t.key),t.ref!==void 0&&(o=t.ref);for(r in t)bd.call(t,r)&&!tf.hasOwnProperty(r)&&(l[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps,t)l[r]===void 0&&(l[r]=t[r]);return{$$typeof:Zd,type:e,key:i,ref:o,props:l,_owner:ef.current}}Ol.Fragment=qd;Ol.jsx=su;Ol.jsxs=su;Ja.exports=Ol;var u=Ja.exports,zi={},au={exports:{}},Ne={},uu={exports:{}},cu={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function t(E,R){var z=E.length;E.push(R);e:for(;0<z;){var K=z-1>>>1,b=E[K];if(0<l(b,R))E[K]=R,E[z]=b,z=K;else break e}}function n(E){return E.length===0?null:E[0]}function r(E){if(E.length===0)return null;var R=E[0],z=E.pop();if(z!==R){E[0]=z;e:for(var K=0,b=E.length,jr=b>>>1;K<jr;){var zt=2*(K+1)-1,li=E[zt],Mt=zt+1,Cr=E[Mt];if(0>l(li,z))Mt<b&&0>l(Cr,li)?(E[K]=Cr,E[Mt]=z,K=Mt):(E[K]=li,E[zt]=z,K=zt);else if(Mt<b&&0>l(Cr,z))E[K]=Cr,E[Mt]=z,K=Mt;else break e}}return R}function l(E,R){var z=E.sortIndex-R.sortIndex;return z!==0?z:E.id-R.id}if(typeof performance=="object"&&typeof performance.now=="function"){var i=performance;e.unstable_now=function(){return i.now()}}else{var o=Date,s=o.now();e.unstable_now=function(){return o.now()-s}}var a=[],c=[],m=1,f=null,g=3,y=!1,k=!1,S=!1,w=typeof setTimeout=="function"?setTimeout:null,p=typeof clearTimeout=="function"?clearTimeout:null,d=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function h(E){for(var R=n(c);R!==null;){if(R.callback===null)r(c);else if(R.startTime<=E)r(c),R.sortIndex=R.expirationTime,t(a,R);else break;R=n(c)}}function x(E){if(S=!1,h(E),!k)if(n(a)!==null)k=!0,ni(j);else{var R=n(c);R!==null&&ri(x,R.startTime-E)}}function j(E,R){k=!1,S&&(S=!1,p(L),L=-1),y=!0;var z=g;try{for(h(R),f=n(a);f!==null&&(!(f.expirationTime>R)||E&&!ye());){var K=f.callback;if(typeof K=="function"){f.callback=null,g=f.priorityLevel;var b=K(f.expirationTime<=R);R=e.unstable_now(),typeof b=="function"?f.callback=b:f===n(a)&&r(a),h(R)}else r(a);f=n(a)}if(f!==null)var jr=!0;else{var zt=n(c);zt!==null&&ri(x,zt.startTime-R),jr=!1}return jr}finally{f=null,g=z,y=!1}}var _=!1,P=null,L=-1,B=5,T=-1;function ye(){return!(e.unstable_now()-T<B)}function Ln(){if(P!==null){var E=e.unstable_now();T=E;var R=!0;try{R=P(!0,E)}finally{R?Rn():(_=!1,P=null)}}else _=!1}var Rn;if(typeof d=="function")Rn=function(){d(Ln)};else if(typeof MessageChannel<"u"){var Ls=new MessageChannel,Td=Ls.port2;Ls.port1.onmessage=Ln,Rn=function(){Td.postMessage(null)}}else Rn=function(){w(Ln,0)};function ni(E){P=E,_||(_=!0,Rn())}function ri(E,R){L=w(function(){E(e.unstable_now())},R)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(E){E.callback=null},e.unstable_continueExecution=function(){k||y||(k=!0,ni(j))},e.unstable_forceFrameRate=function(E){0>E||125<E?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):B=0<E?Math.floor(1e3/E):5},e.unstable_getCurrentPriorityLevel=function(){return g},e.unstable_getFirstCallbackNode=function(){return n(a)},e.unstable_next=function(E){switch(g){case 1:case 2:case 3:var R=3;break;default:R=g}var z=g;g=R;try{return E()}finally{g=z}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(E,R){switch(E){case 1:case 2:case 3:case 4:case 5:break;default:E=3}var z=g;g=E;try{return R()}finally{g=z}},e.unstable_scheduleCallback=function(E,R,z){var K=e.unstable_now();switch(typeof z=="object"&&z!==null?(z=z.delay,z=typeof z=="number"&&0<z?K+z:K):z=K,E){case 1:var b=-1;break;case 2:b=250;break;case 5:b=1073741823;break;case 4:b=1e4;break;default:b=5e3}return b=z+b,E={id:m++,callback:R,priorityLevel:E,startTime:z,expirationTime:b,sortIndex:-1},z>K?(E.sortIndex=z,t(c,E),n(a)===null&&E===n(c)&&(S?(p(L),L=-1):S=!0,ri(x,z-K))):(E.sortIndex=b,t(a,E),k||y||(k=!0,ni(j))),E},e.unstable_shouldYield=ye,e.unstable_wrapCallback=function(E){var R=g;return function(){var z=g;g=R;try{return E.apply(this,arguments)}finally{g=z}}}})(cu);uu.exports=cu;var nf=uu.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var rf=v,Se=nf;function N(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var du=new Set,bn={};function Kt(e,t){hn(e,t),hn(e+"Capture",t)}function hn(e,t){for(bn[e]=t,e=0;e<t.length;e++)du.add(t[e])}var Ze=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Mi=Object.prototype.hasOwnProperty,lf=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Ms={},Os={};function of(e){return Mi.call(Os,e)?!0:Mi.call(Ms,e)?!1:lf.test(e)?Os[e]=!0:(Ms[e]=!0,!1)}function sf(e,t,n,r){if(n!==null&&n.type===0)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return r?!1:n!==null?!n.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function af(e,t,n,r){if(t===null||typeof t>"u"||sf(e,t,n,r))return!0;if(r)return!1;if(n!==null)switch(n.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function fe(e,t,n,r,l,i,o){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=r,this.attributeNamespace=l,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=o}var le={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){le[e]=new fe(e,0,!1,e,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];le[t]=new fe(t,1,!1,e[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(e){le[e]=new fe(e,2,!1,e.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){le[e]=new fe(e,2,!1,e,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){le[e]=new fe(e,3,!1,e.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(e){le[e]=new fe(e,3,!0,e,null,!1,!1)});["capture","download"].forEach(function(e){le[e]=new fe(e,4,!1,e,null,!1,!1)});["cols","rows","size","span"].forEach(function(e){le[e]=new fe(e,6,!1,e,null,!1,!1)});["rowSpan","start"].forEach(function(e){le[e]=new fe(e,5,!1,e.toLowerCase(),null,!1,!1)});var $o=/[\-:]([a-z])/g;function Do(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace($o,Do);le[t]=new fe(t,1,!1,e,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace($o,Do);le[t]=new fe(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace($o,Do);le[t]=new fe(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(e){le[e]=new fe(e,1,!1,e.toLowerCase(),null,!1,!1)});le.xlinkHref=new fe("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(e){le[e]=new fe(e,1,!1,e.toLowerCase(),null,!0,!0)});function Fo(e,t,n,r){var l=le.hasOwnProperty(t)?le[t]:null;(l!==null?l.type!==0:r||!(2<t.length)||t[0]!=="o"&&t[0]!=="O"||t[1]!=="n"&&t[1]!=="N")&&(af(t,n,l,r)&&(n=null),r||l===null?of(t)&&(n===null?e.removeAttribute(t):e.setAttribute(t,""+n)):l.mustUseProperty?e[l.propertyName]=n===null?l.type===3?!1:"":n:(t=l.attributeName,r=l.attributeNamespace,n===null?e.removeAttribute(t):(l=l.type,n=l===3||l===4&&n===!0?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}var nt=rf.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_r=Symbol.for("react.element"),Jt=Symbol.for("react.portal"),Zt=Symbol.for("react.fragment"),Uo=Symbol.for("react.strict_mode"),Oi=Symbol.for("react.profiler"),fu=Symbol.for("react.provider"),pu=Symbol.for("react.context"),Bo=Symbol.for("react.forward_ref"),Ii=Symbol.for("react.suspense"),$i=Symbol.for("react.suspense_list"),Ao=Symbol.for("react.memo"),st=Symbol.for("react.lazy"),mu=Symbol.for("react.offscreen"),Is=Symbol.iterator;function Tn(e){return e===null||typeof e!="object"?null:(e=Is&&e[Is]||e["@@iterator"],typeof e=="function"?e:null)}var H=Object.assign,oi;function Un(e){if(oi===void 0)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);oi=t&&t[1]||""}return`
`+oi+e}var si=!1;function ai(e,t){if(!e||si)return"";si=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(t,[])}catch(c){var r=c}Reflect.construct(e,[],t)}else{try{t.call()}catch(c){r=c}e.call(t.prototype)}else{try{throw Error()}catch(c){r=c}e()}}catch(c){if(c&&r&&typeof c.stack=="string"){for(var l=c.stack.split(`
`),i=r.stack.split(`
`),o=l.length-1,s=i.length-1;1<=o&&0<=s&&l[o]!==i[s];)s--;for(;1<=o&&0<=s;o--,s--)if(l[o]!==i[s]){if(o!==1||s!==1)do if(o--,s--,0>s||l[o]!==i[s]){var a=`
`+l[o].replace(" at new "," at ");return e.displayName&&a.includes("<anonymous>")&&(a=a.replace("<anonymous>",e.displayName)),a}while(1<=o&&0<=s);break}}}finally{si=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?Un(e):""}function uf(e){switch(e.tag){case 5:return Un(e.type);case 16:return Un("Lazy");case 13:return Un("Suspense");case 19:return Un("SuspenseList");case 0:case 2:case 15:return e=ai(e.type,!1),e;case 11:return e=ai(e.type.render,!1),e;case 1:return e=ai(e.type,!0),e;default:return""}}function Di(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case Zt:return"Fragment";case Jt:return"Portal";case Oi:return"Profiler";case Uo:return"StrictMode";case Ii:return"Suspense";case $i:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case pu:return(e.displayName||"Context")+".Consumer";case fu:return(e._context.displayName||"Context")+".Provider";case Bo:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case Ao:return t=e.displayName||null,t!==null?t:Di(e.type)||"Memo";case st:t=e._payload,e=e._init;try{return Di(e(t))}catch{}}return null}function cf(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=t.render,e=e.displayName||e.name||"",t.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Di(t);case 8:return t===Uo?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t}return null}function jt(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function hu(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function df(e){var t=hu(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var l=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return l.call(this)},set:function(o){r=""+o,i.call(this,o)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(o){r=""+o},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function Pr(e){e._valueTracker||(e._valueTracker=df(e))}function gu(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=hu(e)?e.checked?"true":"false":e.value),e=r,e!==n?(t.setValue(e),!0):!1}function ll(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function Fi(e,t){var n=t.checked;return H({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n??e._wrapperState.initialChecked})}function $s(e,t){var n=t.defaultValue==null?"":t.defaultValue,r=t.checked!=null?t.checked:t.defaultChecked;n=jt(t.value!=null?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:t.type==="checkbox"||t.type==="radio"?t.checked!=null:t.value!=null}}function vu(e,t){t=t.checked,t!=null&&Fo(e,"checked",t,!1)}function Ui(e,t){vu(e,t);var n=jt(t.value),r=t.type;if(n!=null)r==="number"?(n===0&&e.value===""||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if(r==="submit"||r==="reset"){e.removeAttribute("value");return}t.hasOwnProperty("value")?Bi(e,t.type,n):t.hasOwnProperty("defaultValue")&&Bi(e,t.type,jt(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function Ds(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!(r!=="submit"&&r!=="reset"||t.value!==void 0&&t.value!==null))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}n=e.name,n!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,n!==""&&(e.name=n)}function Bi(e,t,n){(t!=="number"||ll(e.ownerDocument)!==e)&&(n==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var Bn=Array.isArray;function un(e,t,n,r){if(e=e.options,t){t={};for(var l=0;l<n.length;l++)t["$"+n[l]]=!0;for(n=0;n<e.length;n++)l=t.hasOwnProperty("$"+e[n].value),e[n].selected!==l&&(e[n].selected=l),l&&r&&(e[n].defaultSelected=!0)}else{for(n=""+jt(n),t=null,l=0;l<e.length;l++){if(e[l].value===n){e[l].selected=!0,r&&(e[l].defaultSelected=!0);return}t!==null||e[l].disabled||(t=e[l])}t!==null&&(t.selected=!0)}}function Ai(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error(N(91));return H({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Fs(e,t){var n=t.value;if(n==null){if(n=t.children,t=t.defaultValue,n!=null){if(t!=null)throw Error(N(92));if(Bn(n)){if(1<n.length)throw Error(N(93));n=n[0]}t=n}t==null&&(t=""),n=t}e._wrapperState={initialValue:jt(n)}}function yu(e,t){var n=jt(t.value),r=jt(t.defaultValue);n!=null&&(n=""+n,n!==e.value&&(e.value=n),t.defaultValue==null&&e.defaultValue!==n&&(e.defaultValue=n)),r!=null&&(e.defaultValue=""+r)}function Us(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==""&&t!==null&&(e.value=t)}function xu(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Wi(e,t){return e==null||e==="http://www.w3.org/1999/xhtml"?xu(t):e==="http://www.w3.org/2000/svg"&&t==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var Lr,wu=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(t,n,r,l){MSApp.execUnsafeLocalFunction(function(){return e(t,n,r,l)})}:e}(function(e,t){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=t;else{for(Lr=Lr||document.createElement("div"),Lr.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Lr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function er(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===3){n.nodeValue=t;return}}e.textContent=t}var Vn={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ff=["Webkit","ms","Moz","O"];Object.keys(Vn).forEach(function(e){ff.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Vn[t]=Vn[e]})});function ku(e,t,n){return t==null||typeof t=="boolean"||t===""?"":n||typeof t!="number"||t===0||Vn.hasOwnProperty(e)&&Vn[e]?(""+t).trim():t+"px"}function Su(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=n.indexOf("--")===0,l=ku(n,t[n],r);n==="float"&&(n="cssFloat"),r?e.setProperty(n,l):e[n]=l}}var pf=H({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Vi(e,t){if(t){if(pf[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error(N(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error(N(60));if(typeof t.dangerouslySetInnerHTML!="object"||!("__html"in t.dangerouslySetInnerHTML))throw Error(N(61))}if(t.style!=null&&typeof t.style!="object")throw Error(N(62))}}function Hi(e,t){if(e.indexOf("-")===-1)return typeof t.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Qi=null;function Wo(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var Ki=null,cn=null,dn=null;function Bs(e){if(e=kr(e)){if(typeof Ki!="function")throw Error(N(280));var t=e.stateNode;t&&(t=Ul(t),Ki(e.stateNode,e.type,t))}}function Nu(e){cn?dn?dn.push(e):dn=[e]:cn=e}function ju(){if(cn){var e=cn,t=dn;if(dn=cn=null,Bs(e),t)for(e=0;e<t.length;e++)Bs(t[e])}}function Cu(e,t){return e(t)}function Eu(){}var ui=!1;function _u(e,t,n){if(ui)return e(t,n);ui=!0;try{return Cu(e,t,n)}finally{ui=!1,(cn!==null||dn!==null)&&(Eu(),ju())}}function tr(e,t){var n=e.stateNode;if(n===null)return null;var r=Ul(n);if(r===null)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(e=e.type,r=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!r;break e;default:e=!1}if(e)return null;if(n&&typeof n!="function")throw Error(N(231,t,typeof n));return n}var Yi=!1;if(Ze)try{var zn={};Object.defineProperty(zn,"passive",{get:function(){Yi=!0}}),window.addEventListener("test",zn,zn),window.removeEventListener("test",zn,zn)}catch{Yi=!1}function mf(e,t,n,r,l,i,o,s,a){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(m){this.onError(m)}}var Hn=!1,il=null,ol=!1,Xi=null,hf={onError:function(e){Hn=!0,il=e}};function gf(e,t,n,r,l,i,o,s,a){Hn=!1,il=null,mf.apply(hf,arguments)}function vf(e,t,n,r,l,i,o,s,a){if(gf.apply(this,arguments),Hn){if(Hn){var c=il;Hn=!1,il=null}else throw Error(N(198));ol||(ol=!0,Xi=c)}}function Yt(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,t.flags&4098&&(n=t.return),e=t.return;while(e)}return t.tag===3?n:null}function Pu(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function As(e){if(Yt(e)!==e)throw Error(N(188))}function yf(e){var t=e.alternate;if(!t){if(t=Yt(e),t===null)throw Error(N(188));return t!==e?null:e}for(var n=e,r=t;;){var l=n.return;if(l===null)break;var i=l.alternate;if(i===null){if(r=l.return,r!==null){n=r;continue}break}if(l.child===i.child){for(i=l.child;i;){if(i===n)return As(l),e;if(i===r)return As(l),t;i=i.sibling}throw Error(N(188))}if(n.return!==r.return)n=l,r=i;else{for(var o=!1,s=l.child;s;){if(s===n){o=!0,n=l,r=i;break}if(s===r){o=!0,r=l,n=i;break}s=s.sibling}if(!o){for(s=i.child;s;){if(s===n){o=!0,n=i,r=l;break}if(s===r){o=!0,r=i,n=l;break}s=s.sibling}if(!o)throw Error(N(189))}}if(n.alternate!==r)throw Error(N(190))}if(n.tag!==3)throw Error(N(188));return n.stateNode.current===n?e:t}function Lu(e){return e=yf(e),e!==null?Ru(e):null}function Ru(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=Ru(e);if(t!==null)return t;e=e.sibling}return null}var Tu=Se.unstable_scheduleCallback,Ws=Se.unstable_cancelCallback,xf=Se.unstable_shouldYield,wf=Se.unstable_requestPaint,Y=Se.unstable_now,kf=Se.unstable_getCurrentPriorityLevel,Vo=Se.unstable_ImmediatePriority,zu=Se.unstable_UserBlockingPriority,sl=Se.unstable_NormalPriority,Sf=Se.unstable_LowPriority,Mu=Se.unstable_IdlePriority,Il=null,Ve=null;function Nf(e){if(Ve&&typeof Ve.onCommitFiberRoot=="function")try{Ve.onCommitFiberRoot(Il,e,void 0,(e.current.flags&128)===128)}catch{}}var $e=Math.clz32?Math.clz32:Ef,jf=Math.log,Cf=Math.LN2;function Ef(e){return e>>>=0,e===0?32:31-(jf(e)/Cf|0)|0}var Rr=64,Tr=4194304;function An(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function al(e,t){var n=e.pendingLanes;if(n===0)return 0;var r=0,l=e.suspendedLanes,i=e.pingedLanes,o=n&268435455;if(o!==0){var s=o&~l;s!==0?r=An(s):(i&=o,i!==0&&(r=An(i)))}else o=n&~l,o!==0?r=An(o):i!==0&&(r=An(i));if(r===0)return 0;if(t!==0&&t!==r&&!(t&l)&&(l=r&-r,i=t&-t,l>=i||l===16&&(i&4194240)!==0))return t;if(r&4&&(r|=n&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=r;0<t;)n=31-$e(t),l=1<<n,r|=e[n],t&=~l;return r}function _f(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Pf(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,l=e.expirationTimes,i=e.pendingLanes;0<i;){var o=31-$e(i),s=1<<o,a=l[o];a===-1?(!(s&n)||s&r)&&(l[o]=_f(s,t)):a<=t&&(e.expiredLanes|=s),i&=~s}}function Gi(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function Ou(){var e=Rr;return Rr<<=1,!(Rr&4194240)&&(Rr=64),e}function ci(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function xr(e,t,n){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-$e(t),e[t]=n}function Lf(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var l=31-$e(n),i=1<<l;t[l]=0,r[l]=-1,e[l]=-1,n&=~i}}function Ho(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-$e(n),l=1<<r;l&t|e[r]&t&&(e[r]|=t),n&=~l}}var I=0;function Iu(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var $u,Qo,Du,Fu,Uu,Ji=!1,zr=[],ht=null,gt=null,vt=null,nr=new Map,rr=new Map,ut=[],Rf="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Vs(e,t){switch(e){case"focusin":case"focusout":ht=null;break;case"dragenter":case"dragleave":gt=null;break;case"mouseover":case"mouseout":vt=null;break;case"pointerover":case"pointerout":nr.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":rr.delete(t.pointerId)}}function Mn(e,t,n,r,l,i){return e===null||e.nativeEvent!==i?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:i,targetContainers:[l]},t!==null&&(t=kr(t),t!==null&&Qo(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,l!==null&&t.indexOf(l)===-1&&t.push(l),e)}function Tf(e,t,n,r,l){switch(t){case"focusin":return ht=Mn(ht,e,t,n,r,l),!0;case"dragenter":return gt=Mn(gt,e,t,n,r,l),!0;case"mouseover":return vt=Mn(vt,e,t,n,r,l),!0;case"pointerover":var i=l.pointerId;return nr.set(i,Mn(nr.get(i)||null,e,t,n,r,l)),!0;case"gotpointercapture":return i=l.pointerId,rr.set(i,Mn(rr.get(i)||null,e,t,n,r,l)),!0}return!1}function Bu(e){var t=$t(e.target);if(t!==null){var n=Yt(t);if(n!==null){if(t=n.tag,t===13){if(t=Pu(n),t!==null){e.blockedOn=t,Uu(e.priority,function(){Du(n)});return}}else if(t===3&&n.stateNode.current.memoizedState.isDehydrated){e.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}e.blockedOn=null}function Yr(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zi(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(n===null){n=e.nativeEvent;var r=new n.constructor(n.type,n);Qi=r,n.target.dispatchEvent(r),Qi=null}else return t=kr(n),t!==null&&Qo(t),e.blockedOn=n,!1;t.shift()}return!0}function Hs(e,t,n){Yr(e)&&n.delete(t)}function zf(){Ji=!1,ht!==null&&Yr(ht)&&(ht=null),gt!==null&&Yr(gt)&&(gt=null),vt!==null&&Yr(vt)&&(vt=null),nr.forEach(Hs),rr.forEach(Hs)}function On(e,t){e.blockedOn===t&&(e.blockedOn=null,Ji||(Ji=!0,Se.unstable_scheduleCallback(Se.unstable_NormalPriority,zf)))}function lr(e){function t(l){return On(l,e)}if(0<zr.length){On(zr[0],e);for(var n=1;n<zr.length;n++){var r=zr[n];r.blockedOn===e&&(r.blockedOn=null)}}for(ht!==null&&On(ht,e),gt!==null&&On(gt,e),vt!==null&&On(vt,e),nr.forEach(t),rr.forEach(t),n=0;n<ut.length;n++)r=ut[n],r.blockedOn===e&&(r.blockedOn=null);for(;0<ut.length&&(n=ut[0],n.blockedOn===null);)Bu(n),n.blockedOn===null&&ut.shift()}var fn=nt.ReactCurrentBatchConfig,ul=!0;function Mf(e,t,n,r){var l=I,i=fn.transition;fn.transition=null;try{I=1,Ko(e,t,n,r)}finally{I=l,fn.transition=i}}function Of(e,t,n,r){var l=I,i=fn.transition;fn.transition=null;try{I=4,Ko(e,t,n,r)}finally{I=l,fn.transition=i}}function Ko(e,t,n,r){if(ul){var l=Zi(e,t,n,r);if(l===null)wi(e,t,r,cl,n),Vs(e,r);else if(Tf(l,e,t,n,r))r.stopPropagation();else if(Vs(e,r),t&4&&-1<Rf.indexOf(e)){for(;l!==null;){var i=kr(l);if(i!==null&&$u(i),i=Zi(e,t,n,r),i===null&&wi(e,t,r,cl,n),i===l)break;l=i}l!==null&&r.stopPropagation()}else wi(e,t,r,null,n)}}var cl=null;function Zi(e,t,n,r){if(cl=null,e=Wo(r),e=$t(e),e!==null)if(t=Yt(e),t===null)e=null;else if(n=t.tag,n===13){if(e=Pu(t),e!==null)return e;e=null}else if(n===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return cl=e,null}function Au(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(kf()){case Vo:return 1;case zu:return 4;case sl:case Sf:return 16;case Mu:return 536870912;default:return 16}default:return 16}}var ft=null,Yo=null,Xr=null;function Wu(){if(Xr)return Xr;var e,t=Yo,n=t.length,r,l="value"in ft?ft.value:ft.textContent,i=l.length;for(e=0;e<n&&t[e]===l[e];e++);var o=n-e;for(r=1;r<=o&&t[n-r]===l[i-r];r++);return Xr=l.slice(e,1<r?1-r:void 0)}function Gr(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function Mr(){return!0}function Qs(){return!1}function je(e){function t(n,r,l,i,o){this._reactName=n,this._targetInst=l,this.type=r,this.nativeEvent=i,this.target=o,this.currentTarget=null;for(var s in e)e.hasOwnProperty(s)&&(n=e[s],this[s]=n?n(i):i[s]);return this.isDefaultPrevented=(i.defaultPrevented!=null?i.defaultPrevented:i.returnValue===!1)?Mr:Qs,this.isPropagationStopped=Qs,this}return H(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=Mr)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=Mr)},persist:function(){},isPersistent:Mr}),t}var Cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Xo=je(Cn),wr=H({},Cn,{view:0,detail:0}),If=je(wr),di,fi,In,$l=H({},wr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Go,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==In&&(In&&e.type==="mousemove"?(di=e.screenX-In.screenX,fi=e.screenY-In.screenY):fi=di=0,In=e),di)},movementY:function(e){return"movementY"in e?e.movementY:fi}}),Ks=je($l),$f=H({},$l,{dataTransfer:0}),Df=je($f),Ff=H({},wr,{relatedTarget:0}),pi=je(Ff),Uf=H({},Cn,{animationName:0,elapsedTime:0,pseudoElement:0}),Bf=je(Uf),Af=H({},Cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Wf=je(Af),Vf=H({},Cn,{data:0}),Ys=je(Vf),Hf={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Qf={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Kf={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Yf(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=Kf[e])?!!t[e]:!1}function Go(){return Yf}var Xf=H({},wr,{key:function(e){if(e.key){var t=Hf[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=Gr(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?Qf[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Go,charCode:function(e){return e.type==="keypress"?Gr(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?Gr(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),Gf=je(Xf),Jf=H({},$l,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Xs=je(Jf),Zf=H({},wr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Go}),qf=je(Zf),bf=H({},Cn,{propertyName:0,elapsedTime:0,pseudoElement:0}),ep=je(bf),tp=H({},$l,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),np=je(tp),rp=[9,13,27,32],Jo=Ze&&"CompositionEvent"in window,Qn=null;Ze&&"documentMode"in document&&(Qn=document.documentMode);var lp=Ze&&"TextEvent"in window&&!Qn,Vu=Ze&&(!Jo||Qn&&8<Qn&&11>=Qn),Gs=String.fromCharCode(32),Js=!1;function Hu(e,t){switch(e){case"keyup":return rp.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Qu(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var qt=!1;function ip(e,t){switch(e){case"compositionend":return Qu(t);case"keypress":return t.which!==32?null:(Js=!0,Gs);case"textInput":return e=t.data,e===Gs&&Js?null:e;default:return null}}function op(e,t){if(qt)return e==="compositionend"||!Jo&&Hu(e,t)?(e=Wu(),Xr=Yo=ft=null,qt=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Vu&&t.locale!=="ko"?null:t.data;default:return null}}var sp={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Zs(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!sp[e.type]:t==="textarea"}function Ku(e,t,n,r){Nu(r),t=dl(t,"onChange"),0<t.length&&(n=new Xo("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Kn=null,ir=null;function ap(e){rc(e,0)}function Dl(e){var t=tn(e);if(gu(t))return e}function up(e,t){if(e==="change")return t}var Yu=!1;if(Ze){var mi;if(Ze){var hi="oninput"in document;if(!hi){var qs=document.createElement("div");qs.setAttribute("oninput","return;"),hi=typeof qs.oninput=="function"}mi=hi}else mi=!1;Yu=mi&&(!document.documentMode||9<document.documentMode)}function bs(){Kn&&(Kn.detachEvent("onpropertychange",Xu),ir=Kn=null)}function Xu(e){if(e.propertyName==="value"&&Dl(ir)){var t=[];Ku(t,ir,e,Wo(e)),_u(ap,t)}}function cp(e,t,n){e==="focusin"?(bs(),Kn=t,ir=n,Kn.attachEvent("onpropertychange",Xu)):e==="focusout"&&bs()}function dp(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return Dl(ir)}function fp(e,t){if(e==="click")return Dl(t)}function pp(e,t){if(e==="input"||e==="change")return Dl(t)}function mp(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var Fe=typeof Object.is=="function"?Object.is:mp;function or(e,t){if(Fe(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var l=n[r];if(!Mi.call(t,l)||!Fe(e[l],t[l]))return!1}return!0}function ea(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ta(e,t){var n=ea(e);e=0;for(var r;n;){if(n.nodeType===3){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=ea(n)}}function Gu(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?Gu(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function Ju(){for(var e=window,t=ll();t instanceof e.HTMLIFrameElement;){try{var n=typeof t.contentWindow.location.href=="string"}catch{n=!1}if(n)e=t.contentWindow;else break;t=ll(e.document)}return t}function Zo(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function hp(e){var t=Ju(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&Gu(n.ownerDocument.documentElement,n)){if(r!==null&&Zo(n)){if(t=r.start,e=r.end,e===void 0&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(e=(t=n.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var l=n.textContent.length,i=Math.min(r.start,l);r=r.end===void 0?i:Math.min(r.end,l),!e.extend&&i>r&&(l=r,r=i,i=l),l=ta(n,i);var o=ta(n,r);l&&o&&(e.rangeCount!==1||e.anchorNode!==l.node||e.anchorOffset!==l.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&(t=t.createRange(),t.setStart(l.node,l.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}}for(t=[],e=n;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var gp=Ze&&"documentMode"in document&&11>=document.documentMode,bt=null,qi=null,Yn=null,bi=!1;function na(e,t,n){var r=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;bi||bt==null||bt!==ll(r)||(r=bt,"selectionStart"in r&&Zo(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),Yn&&or(Yn,r)||(Yn=r,r=dl(qi,"onSelect"),0<r.length&&(t=new Xo("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=bt)))}function Or(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var en={animationend:Or("Animation","AnimationEnd"),animationiteration:Or("Animation","AnimationIteration"),animationstart:Or("Animation","AnimationStart"),transitionend:Or("Transition","TransitionEnd")},gi={},Zu={};Ze&&(Zu=document.createElement("div").style,"AnimationEvent"in window||(delete en.animationend.animation,delete en.animationiteration.animation,delete en.animationstart.animation),"TransitionEvent"in window||delete en.transitionend.transition);function Fl(e){if(gi[e])return gi[e];if(!en[e])return e;var t=en[e],n;for(n in t)if(t.hasOwnProperty(n)&&n in Zu)return gi[e]=t[n];return e}var qu=Fl("animationend"),bu=Fl("animationiteration"),ec=Fl("animationstart"),tc=Fl("transitionend"),nc=new Map,ra="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Et(e,t){nc.set(e,t),Kt(t,[e])}for(var vi=0;vi<ra.length;vi++){var yi=ra[vi],vp=yi.toLowerCase(),yp=yi[0].toUpperCase()+yi.slice(1);Et(vp,"on"+yp)}Et(qu,"onAnimationEnd");Et(bu,"onAnimationIteration");Et(ec,"onAnimationStart");Et("dblclick","onDoubleClick");Et("focusin","onFocus");Et("focusout","onBlur");Et(tc,"onTransitionEnd");hn("onMouseEnter",["mouseout","mouseover"]);hn("onMouseLeave",["mouseout","mouseover"]);hn("onPointerEnter",["pointerout","pointerover"]);hn("onPointerLeave",["pointerout","pointerover"]);Kt("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Kt("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Kt("onBeforeInput",["compositionend","keypress","textInput","paste"]);Kt("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Kt("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Kt("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Wn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),xp=new Set("cancel close invalid load scroll toggle".split(" ").concat(Wn));function la(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,vf(r,t,void 0,e),e.currentTarget=null}function rc(e,t){t=(t&4)!==0;for(var n=0;n<e.length;n++){var r=e[n],l=r.event;r=r.listeners;e:{var i=void 0;if(t)for(var o=r.length-1;0<=o;o--){var s=r[o],a=s.instance,c=s.currentTarget;if(s=s.listener,a!==i&&l.isPropagationStopped())break e;la(l,s,c),i=a}else for(o=0;o<r.length;o++){if(s=r[o],a=s.instance,c=s.currentTarget,s=s.listener,a!==i&&l.isPropagationStopped())break e;la(l,s,c),i=a}}}if(ol)throw e=Xi,ol=!1,Xi=null,e}function D(e,t){var n=t[lo];n===void 0&&(n=t[lo]=new Set);var r=e+"__bubble";n.has(r)||(lc(t,e,2,!1),n.add(r))}function xi(e,t,n){var r=0;t&&(r|=4),lc(n,e,r,t)}var Ir="_reactListening"+Math.random().toString(36).slice(2);function sr(e){if(!e[Ir]){e[Ir]=!0,du.forEach(function(n){n!=="selectionchange"&&(xp.has(n)||xi(n,!1,e),xi(n,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Ir]||(t[Ir]=!0,xi("selectionchange",!1,t))}}function lc(e,t,n,r){switch(Au(t)){case 1:var l=Mf;break;case 4:l=Of;break;default:l=Ko}n=l.bind(null,t,n,e),l=void 0,!Yi||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(l=!0),r?l!==void 0?e.addEventListener(t,n,{capture:!0,passive:l}):e.addEventListener(t,n,!0):l!==void 0?e.addEventListener(t,n,{passive:l}):e.addEventListener(t,n,!1)}function wi(e,t,n,r,l){var i=r;if(!(t&1)&&!(t&2)&&r!==null)e:for(;;){if(r===null)return;var o=r.tag;if(o===3||o===4){var s=r.stateNode.containerInfo;if(s===l||s.nodeType===8&&s.parentNode===l)break;if(o===4)for(o=r.return;o!==null;){var a=o.tag;if((a===3||a===4)&&(a=o.stateNode.containerInfo,a===l||a.nodeType===8&&a.parentNode===l))return;o=o.return}for(;s!==null;){if(o=$t(s),o===null)return;if(a=o.tag,a===5||a===6){r=i=o;continue e}s=s.parentNode}}r=r.return}_u(function(){var c=i,m=Wo(n),f=[];e:{var g=nc.get(e);if(g!==void 0){var y=Xo,k=e;switch(e){case"keypress":if(Gr(n)===0)break e;case"keydown":case"keyup":y=Gf;break;case"focusin":k="focus",y=pi;break;case"focusout":k="blur",y=pi;break;case"beforeblur":case"afterblur":y=pi;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":y=Ks;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":y=Df;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":y=qf;break;case qu:case bu:case ec:y=Bf;break;case tc:y=ep;break;case"scroll":y=If;break;case"wheel":y=np;break;case"copy":case"cut":case"paste":y=Wf;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":y=Xs}var S=(t&4)!==0,w=!S&&e==="scroll",p=S?g!==null?g+"Capture":null:g;S=[];for(var d=c,h;d!==null;){h=d;var x=h.stateNode;if(h.tag===5&&x!==null&&(h=x,p!==null&&(x=tr(d,p),x!=null&&S.push(ar(d,x,h)))),w)break;d=d.return}0<S.length&&(g=new y(g,k,null,n,m),f.push({event:g,listeners:S}))}}if(!(t&7)){e:{if(g=e==="mouseover"||e==="pointerover",y=e==="mouseout"||e==="pointerout",g&&n!==Qi&&(k=n.relatedTarget||n.fromElement)&&($t(k)||k[qe]))break e;if((y||g)&&(g=m.window===m?m:(g=m.ownerDocument)?g.defaultView||g.parentWindow:window,y?(k=n.relatedTarget||n.toElement,y=c,k=k?$t(k):null,k!==null&&(w=Yt(k),k!==w||k.tag!==5&&k.tag!==6)&&(k=null)):(y=null,k=c),y!==k)){if(S=Ks,x="onMouseLeave",p="onMouseEnter",d="mouse",(e==="pointerout"||e==="pointerover")&&(S=Xs,x="onPointerLeave",p="onPointerEnter",d="pointer"),w=y==null?g:tn(y),h=k==null?g:tn(k),g=new S(x,d+"leave",y,n,m),g.target=w,g.relatedTarget=h,x=null,$t(m)===c&&(S=new S(p,d+"enter",k,n,m),S.target=h,S.relatedTarget=w,x=S),w=x,y&&k)t:{for(S=y,p=k,d=0,h=S;h;h=Gt(h))d++;for(h=0,x=p;x;x=Gt(x))h++;for(;0<d-h;)S=Gt(S),d--;for(;0<h-d;)p=Gt(p),h--;for(;d--;){if(S===p||p!==null&&S===p.alternate)break t;S=Gt(S),p=Gt(p)}S=null}else S=null;y!==null&&ia(f,g,y,S,!1),k!==null&&w!==null&&ia(f,w,k,S,!0)}}e:{if(g=c?tn(c):window,y=g.nodeName&&g.nodeName.toLowerCase(),y==="select"||y==="input"&&g.type==="file")var j=up;else if(Zs(g))if(Yu)j=pp;else{j=dp;var _=cp}else(y=g.nodeName)&&y.toLowerCase()==="input"&&(g.type==="checkbox"||g.type==="radio")&&(j=fp);if(j&&(j=j(e,c))){Ku(f,j,n,m);break e}_&&_(e,g,c),e==="focusout"&&(_=g._wrapperState)&&_.controlled&&g.type==="number"&&Bi(g,"number",g.value)}switch(_=c?tn(c):window,e){case"focusin":(Zs(_)||_.contentEditable==="true")&&(bt=_,qi=c,Yn=null);break;case"focusout":Yn=qi=bt=null;break;case"mousedown":bi=!0;break;case"contextmenu":case"mouseup":case"dragend":bi=!1,na(f,n,m);break;case"selectionchange":if(gp)break;case"keydown":case"keyup":na(f,n,m)}var P;if(Jo)e:{switch(e){case"compositionstart":var L="onCompositionStart";break e;case"compositionend":L="onCompositionEnd";break e;case"compositionupdate":L="onCompositionUpdate";break e}L=void 0}else qt?Hu(e,n)&&(L="onCompositionEnd"):e==="keydown"&&n.keyCode===229&&(L="onCompositionStart");L&&(Vu&&n.locale!=="ko"&&(qt||L!=="onCompositionStart"?L==="onCompositionEnd"&&qt&&(P=Wu()):(ft=m,Yo="value"in ft?ft.value:ft.textContent,qt=!0)),_=dl(c,L),0<_.length&&(L=new Ys(L,e,null,n,m),f.push({event:L,listeners:_}),P?L.data=P:(P=Qu(n),P!==null&&(L.data=P)))),(P=lp?ip(e,n):op(e,n))&&(c=dl(c,"onBeforeInput"),0<c.length&&(m=new Ys("onBeforeInput","beforeinput",null,n,m),f.push({event:m,listeners:c}),m.data=P))}rc(f,t)})}function ar(e,t,n){return{instance:e,listener:t,currentTarget:n}}function dl(e,t){for(var n=t+"Capture",r=[];e!==null;){var l=e,i=l.stateNode;l.tag===5&&i!==null&&(l=i,i=tr(e,n),i!=null&&r.unshift(ar(e,i,l)),i=tr(e,t),i!=null&&r.push(ar(e,i,l))),e=e.return}return r}function Gt(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function ia(e,t,n,r,l){for(var i=t._reactName,o=[];n!==null&&n!==r;){var s=n,a=s.alternate,c=s.stateNode;if(a!==null&&a===r)break;s.tag===5&&c!==null&&(s=c,l?(a=tr(n,i),a!=null&&o.unshift(ar(n,a,s))):l||(a=tr(n,i),a!=null&&o.push(ar(n,a,s)))),n=n.return}o.length!==0&&e.push({event:t,listeners:o})}var wp=/\r\n?/g,kp=/\u0000|\uFFFD/g;function oa(e){return(typeof e=="string"?e:""+e).replace(wp,`
`).replace(kp,"")}function $r(e,t,n){if(t=oa(t),oa(e)!==t&&n)throw Error(N(425))}function fl(){}var eo=null,to=null;function no(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var ro=typeof setTimeout=="function"?setTimeout:void 0,Sp=typeof clearTimeout=="function"?clearTimeout:void 0,sa=typeof Promise=="function"?Promise:void 0,Np=typeof queueMicrotask=="function"?queueMicrotask:typeof sa<"u"?function(e){return sa.resolve(null).then(e).catch(jp)}:ro;function jp(e){setTimeout(function(){throw e})}function ki(e,t){var n=t,r=0;do{var l=n.nextSibling;if(e.removeChild(n),l&&l.nodeType===8)if(n=l.data,n==="/$"){if(r===0){e.removeChild(l),lr(t);return}r--}else n!=="$"&&n!=="$?"&&n!=="$!"||r++;n=l}while(n);lr(t)}function yt(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?")break;if(t==="/$")return null}}return e}function aa(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="$"||n==="$!"||n==="$?"){if(t===0)return e;t--}else n==="/$"&&t++}e=e.previousSibling}return null}var En=Math.random().toString(36).slice(2),Ae="__reactFiber$"+En,ur="__reactProps$"+En,qe="__reactContainer$"+En,lo="__reactEvents$"+En,Cp="__reactListeners$"+En,Ep="__reactHandles$"+En;function $t(e){var t=e[Ae];if(t)return t;for(var n=e.parentNode;n;){if(t=n[qe]||n[Ae]){if(n=t.alternate,t.child!==null||n!==null&&n.child!==null)for(e=aa(e);e!==null;){if(n=e[Ae])return n;e=aa(e)}return t}e=n,n=e.parentNode}return null}function kr(e){return e=e[Ae]||e[qe],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function tn(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(N(33))}function Ul(e){return e[ur]||null}var io=[],nn=-1;function _t(e){return{current:e}}function F(e){0>nn||(e.current=io[nn],io[nn]=null,nn--)}function $(e,t){nn++,io[nn]=e.current,e.current=t}var Ct={},ae=_t(Ct),he=_t(!1),At=Ct;function gn(e,t){var n=e.type.contextTypes;if(!n)return Ct;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var l={},i;for(i in n)l[i]=t[i];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=l),l}function ge(e){return e=e.childContextTypes,e!=null}function pl(){F(he),F(ae)}function ua(e,t,n){if(ae.current!==Ct)throw Error(N(168));$(ae,t),$(he,n)}function ic(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,typeof r.getChildContext!="function")return n;r=r.getChildContext();for(var l in r)if(!(l in t))throw Error(N(108,cf(e)||"Unknown",l));return H({},n,r)}function ml(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ct,At=ae.current,$(ae,e),$(he,he.current),!0}function ca(e,t,n){var r=e.stateNode;if(!r)throw Error(N(169));n?(e=ic(e,t,At),r.__reactInternalMemoizedMergedChildContext=e,F(he),F(ae),$(ae,e)):F(he),$(he,n)}var Ye=null,Bl=!1,Si=!1;function oc(e){Ye===null?Ye=[e]:Ye.push(e)}function _p(e){Bl=!0,oc(e)}function Pt(){if(!Si&&Ye!==null){Si=!0;var e=0,t=I;try{var n=Ye;for(I=1;e<n.length;e++){var r=n[e];do r=r(!0);while(r!==null)}Ye=null,Bl=!1}catch(l){throw Ye!==null&&(Ye=Ye.slice(e+1)),Tu(Vo,Pt),l}finally{I=t,Si=!1}}return null}var rn=[],ln=0,hl=null,gl=0,Ce=[],Ee=0,Wt=null,Xe=1,Ge="";function Ot(e,t){rn[ln++]=gl,rn[ln++]=hl,hl=e,gl=t}function sc(e,t,n){Ce[Ee++]=Xe,Ce[Ee++]=Ge,Ce[Ee++]=Wt,Wt=e;var r=Xe;e=Ge;var l=32-$e(r)-1;r&=~(1<<l),n+=1;var i=32-$e(t)+l;if(30<i){var o=l-l%5;i=(r&(1<<o)-1).toString(32),r>>=o,l-=o,Xe=1<<32-$e(t)+l|n<<l|r,Ge=i+e}else Xe=1<<i|n<<l|r,Ge=e}function qo(e){e.return!==null&&(Ot(e,1),sc(e,1,0))}function bo(e){for(;e===hl;)hl=rn[--ln],rn[ln]=null,gl=rn[--ln],rn[ln]=null;for(;e===Wt;)Wt=Ce[--Ee],Ce[Ee]=null,Ge=Ce[--Ee],Ce[Ee]=null,Xe=Ce[--Ee],Ce[Ee]=null}var ke=null,we=null,U=!1,Ie=null;function ac(e,t){var n=_e(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,t=e.deletions,t===null?(e.deletions=[n],e.flags|=16):t.push(n)}function da(e,t){switch(e.tag){case 5:var n=e.type;return t=t.nodeType!==1||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,ke=e,we=yt(t.firstChild),!0):!1;case 6:return t=e.pendingProps===""||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,ke=e,we=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(n=Wt!==null?{id:Xe,overflow:Ge}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},n=_e(18,null,null,0),n.stateNode=t,n.return=e,e.child=n,ke=e,we=null,!0):!1;default:return!1}}function oo(e){return(e.mode&1)!==0&&(e.flags&128)===0}function so(e){if(U){var t=we;if(t){var n=t;if(!da(e,t)){if(oo(e))throw Error(N(418));t=yt(n.nextSibling);var r=ke;t&&da(e,t)?ac(r,n):(e.flags=e.flags&-4097|2,U=!1,ke=e)}}else{if(oo(e))throw Error(N(418));e.flags=e.flags&-4097|2,U=!1,ke=e}}}function fa(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;ke=e}function Dr(e){if(e!==ke)return!1;if(!U)return fa(e),U=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!=="head"&&t!=="body"&&!no(e.type,e.memoizedProps)),t&&(t=we)){if(oo(e))throw uc(),Error(N(418));for(;t;)ac(e,t),t=yt(t.nextSibling)}if(fa(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(N(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="/$"){if(t===0){we=yt(e.nextSibling);break e}t--}else n!=="$"&&n!=="$!"&&n!=="$?"||t++}e=e.nextSibling}we=null}}else we=ke?yt(e.stateNode.nextSibling):null;return!0}function uc(){for(var e=we;e;)e=yt(e.nextSibling)}function vn(){we=ke=null,U=!1}function es(e){Ie===null?Ie=[e]:Ie.push(e)}var Pp=nt.ReactCurrentBatchConfig;function $n(e,t,n){if(e=n.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(N(309));var r=n.stateNode}if(!r)throw Error(N(147,e));var l=r,i=""+e;return t!==null&&t.ref!==null&&typeof t.ref=="function"&&t.ref._stringRef===i?t.ref:(t=function(o){var s=l.refs;o===null?delete s[i]:s[i]=o},t._stringRef=i,t)}if(typeof e!="string")throw Error(N(284));if(!n._owner)throw Error(N(290,e))}return e}function Fr(e,t){throw e=Object.prototype.toString.call(t),Error(N(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function pa(e){var t=e._init;return t(e._payload)}function cc(e){function t(p,d){if(e){var h=p.deletions;h===null?(p.deletions=[d],p.flags|=16):h.push(d)}}function n(p,d){if(!e)return null;for(;d!==null;)t(p,d),d=d.sibling;return null}function r(p,d){for(p=new Map;d!==null;)d.key!==null?p.set(d.key,d):p.set(d.index,d),d=d.sibling;return p}function l(p,d){return p=St(p,d),p.index=0,p.sibling=null,p}function i(p,d,h){return p.index=h,e?(h=p.alternate,h!==null?(h=h.index,h<d?(p.flags|=2,d):h):(p.flags|=2,d)):(p.flags|=1048576,d)}function o(p){return e&&p.alternate===null&&(p.flags|=2),p}function s(p,d,h,x){return d===null||d.tag!==6?(d=Li(h,p.mode,x),d.return=p,d):(d=l(d,h),d.return=p,d)}function a(p,d,h,x){var j=h.type;return j===Zt?m(p,d,h.props.children,x,h.key):d!==null&&(d.elementType===j||typeof j=="object"&&j!==null&&j.$$typeof===st&&pa(j)===d.type)?(x=l(d,h.props),x.ref=$n(p,d,h),x.return=p,x):(x=nl(h.type,h.key,h.props,null,p.mode,x),x.ref=$n(p,d,h),x.return=p,x)}function c(p,d,h,x){return d===null||d.tag!==4||d.stateNode.containerInfo!==h.containerInfo||d.stateNode.implementation!==h.implementation?(d=Ri(h,p.mode,x),d.return=p,d):(d=l(d,h.children||[]),d.return=p,d)}function m(p,d,h,x,j){return d===null||d.tag!==7?(d=Bt(h,p.mode,x,j),d.return=p,d):(d=l(d,h),d.return=p,d)}function f(p,d,h){if(typeof d=="string"&&d!==""||typeof d=="number")return d=Li(""+d,p.mode,h),d.return=p,d;if(typeof d=="object"&&d!==null){switch(d.$$typeof){case _r:return h=nl(d.type,d.key,d.props,null,p.mode,h),h.ref=$n(p,null,d),h.return=p,h;case Jt:return d=Ri(d,p.mode,h),d.return=p,d;case st:var x=d._init;return f(p,x(d._payload),h)}if(Bn(d)||Tn(d))return d=Bt(d,p.mode,h,null),d.return=p,d;Fr(p,d)}return null}function g(p,d,h,x){var j=d!==null?d.key:null;if(typeof h=="string"&&h!==""||typeof h=="number")return j!==null?null:s(p,d,""+h,x);if(typeof h=="object"&&h!==null){switch(h.$$typeof){case _r:return h.key===j?a(p,d,h,x):null;case Jt:return h.key===j?c(p,d,h,x):null;case st:return j=h._init,g(p,d,j(h._payload),x)}if(Bn(h)||Tn(h))return j!==null?null:m(p,d,h,x,null);Fr(p,h)}return null}function y(p,d,h,x,j){if(typeof x=="string"&&x!==""||typeof x=="number")return p=p.get(h)||null,s(d,p,""+x,j);if(typeof x=="object"&&x!==null){switch(x.$$typeof){case _r:return p=p.get(x.key===null?h:x.key)||null,a(d,p,x,j);case Jt:return p=p.get(x.key===null?h:x.key)||null,c(d,p,x,j);case st:var _=x._init;return y(p,d,h,_(x._payload),j)}if(Bn(x)||Tn(x))return p=p.get(h)||null,m(d,p,x,j,null);Fr(d,x)}return null}function k(p,d,h,x){for(var j=null,_=null,P=d,L=d=0,B=null;P!==null&&L<h.length;L++){P.index>L?(B=P,P=null):B=P.sibling;var T=g(p,P,h[L],x);if(T===null){P===null&&(P=B);break}e&&P&&T.alternate===null&&t(p,P),d=i(T,d,L),_===null?j=T:_.sibling=T,_=T,P=B}if(L===h.length)return n(p,P),U&&Ot(p,L),j;if(P===null){for(;L<h.length;L++)P=f(p,h[L],x),P!==null&&(d=i(P,d,L),_===null?j=P:_.sibling=P,_=P);return U&&Ot(p,L),j}for(P=r(p,P);L<h.length;L++)B=y(P,p,L,h[L],x),B!==null&&(e&&B.alternate!==null&&P.delete(B.key===null?L:B.key),d=i(B,d,L),_===null?j=B:_.sibling=B,_=B);return e&&P.forEach(function(ye){return t(p,ye)}),U&&Ot(p,L),j}function S(p,d,h,x){var j=Tn(h);if(typeof j!="function")throw Error(N(150));if(h=j.call(h),h==null)throw Error(N(151));for(var _=j=null,P=d,L=d=0,B=null,T=h.next();P!==null&&!T.done;L++,T=h.next()){P.index>L?(B=P,P=null):B=P.sibling;var ye=g(p,P,T.value,x);if(ye===null){P===null&&(P=B);break}e&&P&&ye.alternate===null&&t(p,P),d=i(ye,d,L),_===null?j=ye:_.sibling=ye,_=ye,P=B}if(T.done)return n(p,P),U&&Ot(p,L),j;if(P===null){for(;!T.done;L++,T=h.next())T=f(p,T.value,x),T!==null&&(d=i(T,d,L),_===null?j=T:_.sibling=T,_=T);return U&&Ot(p,L),j}for(P=r(p,P);!T.done;L++,T=h.next())T=y(P,p,L,T.value,x),T!==null&&(e&&T.alternate!==null&&P.delete(T.key===null?L:T.key),d=i(T,d,L),_===null?j=T:_.sibling=T,_=T);return e&&P.forEach(function(Ln){return t(p,Ln)}),U&&Ot(p,L),j}function w(p,d,h,x){if(typeof h=="object"&&h!==null&&h.type===Zt&&h.key===null&&(h=h.props.children),typeof h=="object"&&h!==null){switch(h.$$typeof){case _r:e:{for(var j=h.key,_=d;_!==null;){if(_.key===j){if(j=h.type,j===Zt){if(_.tag===7){n(p,_.sibling),d=l(_,h.props.children),d.return=p,p=d;break e}}else if(_.elementType===j||typeof j=="object"&&j!==null&&j.$$typeof===st&&pa(j)===_.type){n(p,_.sibling),d=l(_,h.props),d.ref=$n(p,_,h),d.return=p,p=d;break e}n(p,_);break}else t(p,_);_=_.sibling}h.type===Zt?(d=Bt(h.props.children,p.mode,x,h.key),d.return=p,p=d):(x=nl(h.type,h.key,h.props,null,p.mode,x),x.ref=$n(p,d,h),x.return=p,p=x)}return o(p);case Jt:e:{for(_=h.key;d!==null;){if(d.key===_)if(d.tag===4&&d.stateNode.containerInfo===h.containerInfo&&d.stateNode.implementation===h.implementation){n(p,d.sibling),d=l(d,h.children||[]),d.return=p,p=d;break e}else{n(p,d);break}else t(p,d);d=d.sibling}d=Ri(h,p.mode,x),d.return=p,p=d}return o(p);case st:return _=h._init,w(p,d,_(h._payload),x)}if(Bn(h))return k(p,d,h,x);if(Tn(h))return S(p,d,h,x);Fr(p,h)}return typeof h=="string"&&h!==""||typeof h=="number"?(h=""+h,d!==null&&d.tag===6?(n(p,d.sibling),d=l(d,h),d.return=p,p=d):(n(p,d),d=Li(h,p.mode,x),d.return=p,p=d),o(p)):n(p,d)}return w}var yn=cc(!0),dc=cc(!1),vl=_t(null),yl=null,on=null,ts=null;function ns(){ts=on=yl=null}function rs(e){var t=vl.current;F(vl),e._currentValue=t}function ao(e,t,n){for(;e!==null;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,r!==null&&(r.childLanes|=t)):r!==null&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function pn(e,t){yl=e,ts=on=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&t&&(me=!0),e.firstContext=null)}function Le(e){var t=e._currentValue;if(ts!==e)if(e={context:e,memoizedValue:t,next:null},on===null){if(yl===null)throw Error(N(308));on=e,yl.dependencies={lanes:0,firstContext:e}}else on=on.next=e;return t}var Dt=null;function ls(e){Dt===null?Dt=[e]:Dt.push(e)}function fc(e,t,n,r){var l=t.interleaved;return l===null?(n.next=n,ls(t)):(n.next=l.next,l.next=n),t.interleaved=n,be(e,r)}function be(e,t){e.lanes|=t;var n=e.alternate;for(n!==null&&(n.lanes|=t),n=e,e=e.return;e!==null;)e.childLanes|=t,n=e.alternate,n!==null&&(n.childLanes|=t),n=e,e=e.return;return n.tag===3?n.stateNode:null}var at=!1;function is(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function pc(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Je(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function xt(e,t,n){var r=e.updateQueue;if(r===null)return null;if(r=r.shared,O&2){var l=r.pending;return l===null?t.next=t:(t.next=l.next,l.next=t),r.pending=t,be(e,n)}return l=r.interleaved,l===null?(t.next=t,ls(r)):(t.next=l.next,l.next=t),r.interleaved=t,be(e,n)}function Jr(e,t,n){if(t=t.updateQueue,t!==null&&(t=t.shared,(n&4194240)!==0)){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,Ho(e,n)}}function ma(e,t){var n=e.updateQueue,r=e.alternate;if(r!==null&&(r=r.updateQueue,n===r)){var l=null,i=null;if(n=n.firstBaseUpdate,n!==null){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};i===null?l=i=o:i=i.next=o,n=n.next}while(n!==null);i===null?l=i=t:i=i.next=t}else l=i=t;n={baseState:r.baseState,firstBaseUpdate:l,lastBaseUpdate:i,shared:r.shared,effects:r.effects},e.updateQueue=n;return}e=n.lastBaseUpdate,e===null?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function xl(e,t,n,r){var l=e.updateQueue;at=!1;var i=l.firstBaseUpdate,o=l.lastBaseUpdate,s=l.shared.pending;if(s!==null){l.shared.pending=null;var a=s,c=a.next;a.next=null,o===null?i=c:o.next=c,o=a;var m=e.alternate;m!==null&&(m=m.updateQueue,s=m.lastBaseUpdate,s!==o&&(s===null?m.firstBaseUpdate=c:s.next=c,m.lastBaseUpdate=a))}if(i!==null){var f=l.baseState;o=0,m=c=a=null,s=i;do{var g=s.lane,y=s.eventTime;if((r&g)===g){m!==null&&(m=m.next={eventTime:y,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var k=e,S=s;switch(g=t,y=n,S.tag){case 1:if(k=S.payload,typeof k=="function"){f=k.call(y,f,g);break e}f=k;break e;case 3:k.flags=k.flags&-65537|128;case 0:if(k=S.payload,g=typeof k=="function"?k.call(y,f,g):k,g==null)break e;f=H({},f,g);break e;case 2:at=!0}}s.callback!==null&&s.lane!==0&&(e.flags|=64,g=l.effects,g===null?l.effects=[s]:g.push(s))}else y={eventTime:y,lane:g,tag:s.tag,payload:s.payload,callback:s.callback,next:null},m===null?(c=m=y,a=f):m=m.next=y,o|=g;if(s=s.next,s===null){if(s=l.shared.pending,s===null)break;g=s,s=g.next,g.next=null,l.lastBaseUpdate=g,l.shared.pending=null}}while(1);if(m===null&&(a=f),l.baseState=a,l.firstBaseUpdate=c,l.lastBaseUpdate=m,t=l.shared.interleaved,t!==null){l=t;do o|=l.lane,l=l.next;while(l!==t)}else i===null&&(l.shared.lanes=0);Ht|=o,e.lanes=o,e.memoizedState=f}}function ha(e,t,n){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var r=e[t],l=r.callback;if(l!==null){if(r.callback=null,r=n,typeof l!="function")throw Error(N(191,l));l.call(r)}}}var Sr={},He=_t(Sr),cr=_t(Sr),dr=_t(Sr);function Ft(e){if(e===Sr)throw Error(N(174));return e}function os(e,t){switch($(dr,t),$(cr,e),$(He,Sr),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Wi(null,"");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=Wi(t,e)}F(He),$(He,t)}function xn(){F(He),F(cr),F(dr)}function mc(e){Ft(dr.current);var t=Ft(He.current),n=Wi(t,e.type);t!==n&&($(cr,e),$(He,n))}function ss(e){cr.current===e&&(F(He),F(cr))}var A=_t(0);function wl(e){for(var t=e;t!==null;){if(t.tag===13){var n=t.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if(t.flags&128)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Ni=[];function as(){for(var e=0;e<Ni.length;e++)Ni[e]._workInProgressVersionPrimary=null;Ni.length=0}var Zr=nt.ReactCurrentDispatcher,ji=nt.ReactCurrentBatchConfig,Vt=0,W=null,G=null,ee=null,kl=!1,Xn=!1,fr=0,Lp=0;function ie(){throw Error(N(321))}function us(e,t){if(t===null)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Fe(e[n],t[n]))return!1;return!0}function cs(e,t,n,r,l,i){if(Vt=i,W=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Zr.current=e===null||e.memoizedState===null?Mp:Op,e=n(r,l),Xn){i=0;do{if(Xn=!1,fr=0,25<=i)throw Error(N(301));i+=1,ee=G=null,t.updateQueue=null,Zr.current=Ip,e=n(r,l)}while(Xn)}if(Zr.current=Sl,t=G!==null&&G.next!==null,Vt=0,ee=G=W=null,kl=!1,t)throw Error(N(300));return e}function ds(){var e=fr!==0;return fr=0,e}function Be(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return ee===null?W.memoizedState=ee=e:ee=ee.next=e,ee}function Re(){if(G===null){var e=W.alternate;e=e!==null?e.memoizedState:null}else e=G.next;var t=ee===null?W.memoizedState:ee.next;if(t!==null)ee=t,G=e;else{if(e===null)throw Error(N(310));G=e,e={memoizedState:G.memoizedState,baseState:G.baseState,baseQueue:G.baseQueue,queue:G.queue,next:null},ee===null?W.memoizedState=ee=e:ee=ee.next=e}return ee}function pr(e,t){return typeof t=="function"?t(e):t}function Ci(e){var t=Re(),n=t.queue;if(n===null)throw Error(N(311));n.lastRenderedReducer=e;var r=G,l=r.baseQueue,i=n.pending;if(i!==null){if(l!==null){var o=l.next;l.next=i.next,i.next=o}r.baseQueue=l=i,n.pending=null}if(l!==null){i=l.next,r=r.baseState;var s=o=null,a=null,c=i;do{var m=c.lane;if((Vt&m)===m)a!==null&&(a=a.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var f={lane:m,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};a===null?(s=a=f,o=r):a=a.next=f,W.lanes|=m,Ht|=m}c=c.next}while(c!==null&&c!==i);a===null?o=r:a.next=s,Fe(r,t.memoizedState)||(me=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=a,n.lastRenderedState=r}if(e=n.interleaved,e!==null){l=e;do i=l.lane,W.lanes|=i,Ht|=i,l=l.next;while(l!==e)}else l===null&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ei(e){var t=Re(),n=t.queue;if(n===null)throw Error(N(311));n.lastRenderedReducer=e;var r=n.dispatch,l=n.pending,i=t.memoizedState;if(l!==null){n.pending=null;var o=l=l.next;do i=e(i,o.action),o=o.next;while(o!==l);Fe(i,t.memoizedState)||(me=!0),t.memoizedState=i,t.baseQueue===null&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function hc(){}function gc(e,t){var n=W,r=Re(),l=t(),i=!Fe(r.memoizedState,l);if(i&&(r.memoizedState=l,me=!0),r=r.queue,fs(xc.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||ee!==null&&ee.memoizedState.tag&1){if(n.flags|=2048,mr(9,yc.bind(null,n,r,l,t),void 0,null),te===null)throw Error(N(349));Vt&30||vc(n,t,l)}return l}function vc(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},t=W.updateQueue,t===null?(t={lastEffect:null,stores:null},W.updateQueue=t,t.stores=[e]):(n=t.stores,n===null?t.stores=[e]:n.push(e))}function yc(e,t,n,r){t.value=n,t.getSnapshot=r,wc(t)&&kc(e)}function xc(e,t,n){return n(function(){wc(t)&&kc(e)})}function wc(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!Fe(e,n)}catch{return!0}}function kc(e){var t=be(e,1);t!==null&&De(t,e,1,-1)}function ga(e){var t=Be();return typeof e=="function"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:pr,lastRenderedState:e},t.queue=e,e=e.dispatch=zp.bind(null,W,e),[t.memoizedState,e]}function mr(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},t=W.updateQueue,t===null?(t={lastEffect:null,stores:null},W.updateQueue=t,t.lastEffect=e.next=e):(n=t.lastEffect,n===null?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e)),e}function Sc(){return Re().memoizedState}function qr(e,t,n,r){var l=Be();W.flags|=e,l.memoizedState=mr(1|t,n,void 0,r===void 0?null:r)}function Al(e,t,n,r){var l=Re();r=r===void 0?null:r;var i=void 0;if(G!==null){var o=G.memoizedState;if(i=o.destroy,r!==null&&us(r,o.deps)){l.memoizedState=mr(t,n,i,r);return}}W.flags|=e,l.memoizedState=mr(1|t,n,i,r)}function va(e,t){return qr(8390656,8,e,t)}function fs(e,t){return Al(2048,8,e,t)}function Nc(e,t){return Al(4,2,e,t)}function jc(e,t){return Al(4,4,e,t)}function Cc(e,t){if(typeof t=="function")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function Ec(e,t,n){return n=n!=null?n.concat([e]):null,Al(4,4,Cc.bind(null,t,e),n)}function ps(){}function _c(e,t){var n=Re();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&us(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Pc(e,t){var n=Re();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&us(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Lc(e,t,n){return Vt&21?(Fe(n,t)||(n=Ou(),W.lanes|=n,Ht|=n,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,me=!0),e.memoizedState=n)}function Rp(e,t){var n=I;I=n!==0&&4>n?n:4,e(!0);var r=ji.transition;ji.transition={};try{e(!1),t()}finally{I=n,ji.transition=r}}function Rc(){return Re().memoizedState}function Tp(e,t,n){var r=kt(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Tc(e))zc(t,n);else if(n=fc(e,t,n,r),n!==null){var l=ce();De(n,e,r,l),Mc(n,t,r)}}function zp(e,t,n){var r=kt(e),l={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Tc(e))zc(t,l);else{var i=e.alternate;if(e.lanes===0&&(i===null||i.lanes===0)&&(i=t.lastRenderedReducer,i!==null))try{var o=t.lastRenderedState,s=i(o,n);if(l.hasEagerState=!0,l.eagerState=s,Fe(s,o)){var a=t.interleaved;a===null?(l.next=l,ls(t)):(l.next=a.next,a.next=l),t.interleaved=l;return}}catch{}finally{}n=fc(e,t,l,r),n!==null&&(l=ce(),De(n,e,r,l),Mc(n,t,r))}}function Tc(e){var t=e.alternate;return e===W||t!==null&&t===W}function zc(e,t){Xn=kl=!0;var n=e.pending;n===null?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Mc(e,t,n){if(n&4194240){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,Ho(e,n)}}var Sl={readContext:Le,useCallback:ie,useContext:ie,useEffect:ie,useImperativeHandle:ie,useInsertionEffect:ie,useLayoutEffect:ie,useMemo:ie,useReducer:ie,useRef:ie,useState:ie,useDebugValue:ie,useDeferredValue:ie,useTransition:ie,useMutableSource:ie,useSyncExternalStore:ie,useId:ie,unstable_isNewReconciler:!1},Mp={readContext:Le,useCallback:function(e,t){return Be().memoizedState=[e,t===void 0?null:t],e},useContext:Le,useEffect:va,useImperativeHandle:function(e,t,n){return n=n!=null?n.concat([e]):null,qr(4194308,4,Cc.bind(null,t,e),n)},useLayoutEffect:function(e,t){return qr(4194308,4,e,t)},useInsertionEffect:function(e,t){return qr(4,2,e,t)},useMemo:function(e,t){var n=Be();return t=t===void 0?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Be();return t=n!==void 0?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Tp.bind(null,W,e),[r.memoizedState,e]},useRef:function(e){var t=Be();return e={current:e},t.memoizedState=e},useState:ga,useDebugValue:ps,useDeferredValue:function(e){return Be().memoizedState=e},useTransition:function(){var e=ga(!1),t=e[0];return e=Rp.bind(null,e[1]),Be().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=W,l=Be();if(U){if(n===void 0)throw Error(N(407));n=n()}else{if(n=t(),te===null)throw Error(N(349));Vt&30||vc(r,t,n)}l.memoizedState=n;var i={value:n,getSnapshot:t};return l.queue=i,va(xc.bind(null,r,i,e),[e]),r.flags|=2048,mr(9,yc.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=Be(),t=te.identifierPrefix;if(U){var n=Ge,r=Xe;n=(r&~(1<<32-$e(r)-1)).toString(32)+n,t=":"+t+"R"+n,n=fr++,0<n&&(t+="H"+n.toString(32)),t+=":"}else n=Lp++,t=":"+t+"r"+n.toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Op={readContext:Le,useCallback:_c,useContext:Le,useEffect:fs,useImperativeHandle:Ec,useInsertionEffect:Nc,useLayoutEffect:jc,useMemo:Pc,useReducer:Ci,useRef:Sc,useState:function(){return Ci(pr)},useDebugValue:ps,useDeferredValue:function(e){var t=Re();return Lc(t,G.memoizedState,e)},useTransition:function(){var e=Ci(pr)[0],t=Re().memoizedState;return[e,t]},useMutableSource:hc,useSyncExternalStore:gc,useId:Rc,unstable_isNewReconciler:!1},Ip={readContext:Le,useCallback:_c,useContext:Le,useEffect:fs,useImperativeHandle:Ec,useInsertionEffect:Nc,useLayoutEffect:jc,useMemo:Pc,useReducer:Ei,useRef:Sc,useState:function(){return Ei(pr)},useDebugValue:ps,useDeferredValue:function(e){var t=Re();return G===null?t.memoizedState=e:Lc(t,G.memoizedState,e)},useTransition:function(){var e=Ei(pr)[0],t=Re().memoizedState;return[e,t]},useMutableSource:hc,useSyncExternalStore:gc,useId:Rc,unstable_isNewReconciler:!1};function Me(e,t){if(e&&e.defaultProps){t=H({},t),e=e.defaultProps;for(var n in e)t[n]===void 0&&(t[n]=e[n]);return t}return t}function uo(e,t,n,r){t=e.memoizedState,n=n(r,t),n=n==null?t:H({},t,n),e.memoizedState=n,e.lanes===0&&(e.updateQueue.baseState=n)}var Wl={isMounted:function(e){return(e=e._reactInternals)?Yt(e)===e:!1},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ce(),l=kt(e),i=Je(r,l);i.payload=t,n!=null&&(i.callback=n),t=xt(e,i,l),t!==null&&(De(t,e,l,r),Jr(t,e,l))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ce(),l=kt(e),i=Je(r,l);i.tag=1,i.payload=t,n!=null&&(i.callback=n),t=xt(e,i,l),t!==null&&(De(t,e,l,r),Jr(t,e,l))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ce(),r=kt(e),l=Je(n,r);l.tag=2,t!=null&&(l.callback=t),t=xt(e,l,r),t!==null&&(De(t,e,r,n),Jr(t,e,r))}};function ya(e,t,n,r,l,i,o){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(r,i,o):t.prototype&&t.prototype.isPureReactComponent?!or(n,r)||!or(l,i):!0}function Oc(e,t,n){var r=!1,l=Ct,i=t.contextType;return typeof i=="object"&&i!==null?i=Le(i):(l=ge(t)?At:ae.current,r=t.contextTypes,i=(r=r!=null)?gn(e,l):Ct),t=new t(n,i),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=Wl,e.stateNode=t,t._reactInternals=e,r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=i),t}function xa(e,t,n,r){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(n,r),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Wl.enqueueReplaceState(t,t.state,null)}function co(e,t,n,r){var l=e.stateNode;l.props=n,l.state=e.memoizedState,l.refs={},is(e);var i=t.contextType;typeof i=="object"&&i!==null?l.context=Le(i):(i=ge(t)?At:ae.current,l.context=gn(e,i)),l.state=e.memoizedState,i=t.getDerivedStateFromProps,typeof i=="function"&&(uo(e,t,i,n),l.state=e.memoizedState),typeof t.getDerivedStateFromProps=="function"||typeof l.getSnapshotBeforeUpdate=="function"||typeof l.UNSAFE_componentWillMount!="function"&&typeof l.componentWillMount!="function"||(t=l.state,typeof l.componentWillMount=="function"&&l.componentWillMount(),typeof l.UNSAFE_componentWillMount=="function"&&l.UNSAFE_componentWillMount(),t!==l.state&&Wl.enqueueReplaceState(l,l.state,null),xl(e,n,l,r),l.state=e.memoizedState),typeof l.componentDidMount=="function"&&(e.flags|=4194308)}function wn(e,t){try{var n="",r=t;do n+=uf(r),r=r.return;while(r);var l=n}catch(i){l=`
Error generating stack: `+i.message+`
`+i.stack}return{value:e,source:t,stack:l,digest:null}}function _i(e,t,n){return{value:e,source:null,stack:n??null,digest:t??null}}function fo(e,t){try{console.error(t.value)}catch(n){setTimeout(function(){throw n})}}var $p=typeof WeakMap=="function"?WeakMap:Map;function Ic(e,t,n){n=Je(-1,n),n.tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){jl||(jl=!0,So=r),fo(e,t)},n}function $c(e,t,n){n=Je(-1,n),n.tag=3;var r=e.type.getDerivedStateFromError;if(typeof r=="function"){var l=t.value;n.payload=function(){return r(l)},n.callback=function(){fo(e,t)}}var i=e.stateNode;return i!==null&&typeof i.componentDidCatch=="function"&&(n.callback=function(){fo(e,t),typeof r!="function"&&(wt===null?wt=new Set([this]):wt.add(this));var o=t.stack;this.componentDidCatch(t.value,{componentStack:o!==null?o:""})}),n}function wa(e,t,n){var r=e.pingCache;if(r===null){r=e.pingCache=new $p;var l=new Set;r.set(t,l)}else l=r.get(t),l===void 0&&(l=new Set,r.set(t,l));l.has(n)||(l.add(n),e=Jp.bind(null,e,t,n),t.then(e,e))}function ka(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function Sa(e,t,n,r,l){return e.mode&1?(e.flags|=65536,e.lanes=l,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(t=Je(-1,1),t.tag=2,xt(n,t,1))),n.lanes|=1),e)}var Dp=nt.ReactCurrentOwner,me=!1;function ue(e,t,n,r){t.child=e===null?dc(t,null,n,r):yn(t,e.child,n,r)}function Na(e,t,n,r,l){n=n.render;var i=t.ref;return pn(t,l),r=cs(e,t,n,r,i,l),n=ds(),e!==null&&!me?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,et(e,t,l)):(U&&n&&qo(t),t.flags|=1,ue(e,t,r,l),t.child)}function ja(e,t,n,r,l){if(e===null){var i=n.type;return typeof i=="function"&&!ks(i)&&i.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(t.tag=15,t.type=i,Dc(e,t,i,r,l)):(e=nl(n.type,null,r,t,t.mode,l),e.ref=t.ref,e.return=t,t.child=e)}if(i=e.child,!(e.lanes&l)){var o=i.memoizedProps;if(n=n.compare,n=n!==null?n:or,n(o,r)&&e.ref===t.ref)return et(e,t,l)}return t.flags|=1,e=St(i,r),e.ref=t.ref,e.return=t,t.child=e}function Dc(e,t,n,r,l){if(e!==null){var i=e.memoizedProps;if(or(i,r)&&e.ref===t.ref)if(me=!1,t.pendingProps=r=i,(e.lanes&l)!==0)e.flags&131072&&(me=!0);else return t.lanes=e.lanes,et(e,t,l)}return po(e,t,n,r,l)}function Fc(e,t,n){var r=t.pendingProps,l=r.children,i=e!==null?e.memoizedState:null;if(r.mode==="hidden")if(!(t.mode&1))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},$(an,xe),xe|=n;else{if(!(n&1073741824))return e=i!==null?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,$(an,xe),xe|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=i!==null?i.baseLanes:n,$(an,xe),xe|=r}else i!==null?(r=i.baseLanes|n,t.memoizedState=null):r=n,$(an,xe),xe|=r;return ue(e,t,l,n),t.child}function Uc(e,t){var n=t.ref;(e===null&&n!==null||e!==null&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function po(e,t,n,r,l){var i=ge(n)?At:ae.current;return i=gn(t,i),pn(t,l),n=cs(e,t,n,r,i,l),r=ds(),e!==null&&!me?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,et(e,t,l)):(U&&r&&qo(t),t.flags|=1,ue(e,t,n,l),t.child)}function Ca(e,t,n,r,l){if(ge(n)){var i=!0;ml(t)}else i=!1;if(pn(t,l),t.stateNode===null)br(e,t),Oc(t,n,r),co(t,n,r,l),r=!0;else if(e===null){var o=t.stateNode,s=t.memoizedProps;o.props=s;var a=o.context,c=n.contextType;typeof c=="object"&&c!==null?c=Le(c):(c=ge(n)?At:ae.current,c=gn(t,c));var m=n.getDerivedStateFromProps,f=typeof m=="function"||typeof o.getSnapshotBeforeUpdate=="function";f||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(s!==r||a!==c)&&xa(t,o,r,c),at=!1;var g=t.memoizedState;o.state=g,xl(t,r,o,l),a=t.memoizedState,s!==r||g!==a||he.current||at?(typeof m=="function"&&(uo(t,n,m,r),a=t.memoizedState),(s=at||ya(t,n,s,r,g,a,c))?(f||typeof o.UNSAFE_componentWillMount!="function"&&typeof o.componentWillMount!="function"||(typeof o.componentWillMount=="function"&&o.componentWillMount(),typeof o.UNSAFE_componentWillMount=="function"&&o.UNSAFE_componentWillMount()),typeof o.componentDidMount=="function"&&(t.flags|=4194308)):(typeof o.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=a),o.props=r,o.state=a,o.context=c,r=s):(typeof o.componentDidMount=="function"&&(t.flags|=4194308),r=!1)}else{o=t.stateNode,pc(e,t),s=t.memoizedProps,c=t.type===t.elementType?s:Me(t.type,s),o.props=c,f=t.pendingProps,g=o.context,a=n.contextType,typeof a=="object"&&a!==null?a=Le(a):(a=ge(n)?At:ae.current,a=gn(t,a));var y=n.getDerivedStateFromProps;(m=typeof y=="function"||typeof o.getSnapshotBeforeUpdate=="function")||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(s!==f||g!==a)&&xa(t,o,r,a),at=!1,g=t.memoizedState,o.state=g,xl(t,r,o,l);var k=t.memoizedState;s!==f||g!==k||he.current||at?(typeof y=="function"&&(uo(t,n,y,r),k=t.memoizedState),(c=at||ya(t,n,c,r,g,k,a)||!1)?(m||typeof o.UNSAFE_componentWillUpdate!="function"&&typeof o.componentWillUpdate!="function"||(typeof o.componentWillUpdate=="function"&&o.componentWillUpdate(r,k,a),typeof o.UNSAFE_componentWillUpdate=="function"&&o.UNSAFE_componentWillUpdate(r,k,a)),typeof o.componentDidUpdate=="function"&&(t.flags|=4),typeof o.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof o.componentDidUpdate!="function"||s===e.memoizedProps&&g===e.memoizedState||(t.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||s===e.memoizedProps&&g===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=k),o.props=r,o.state=k,o.context=a,r=c):(typeof o.componentDidUpdate!="function"||s===e.memoizedProps&&g===e.memoizedState||(t.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||s===e.memoizedProps&&g===e.memoizedState||(t.flags|=1024),r=!1)}return mo(e,t,n,r,i,l)}function mo(e,t,n,r,l,i){Uc(e,t);var o=(t.flags&128)!==0;if(!r&&!o)return l&&ca(t,n,!1),et(e,t,i);r=t.stateNode,Dp.current=t;var s=o&&typeof n.getDerivedStateFromError!="function"?null:r.render();return t.flags|=1,e!==null&&o?(t.child=yn(t,e.child,null,i),t.child=yn(t,null,s,i)):ue(e,t,s,i),t.memoizedState=r.state,l&&ca(t,n,!0),t.child}function Bc(e){var t=e.stateNode;t.pendingContext?ua(e,t.pendingContext,t.pendingContext!==t.context):t.context&&ua(e,t.context,!1),os(e,t.containerInfo)}function Ea(e,t,n,r,l){return vn(),es(l),t.flags|=256,ue(e,t,n,r),t.child}var ho={dehydrated:null,treeContext:null,retryLane:0};function go(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ac(e,t,n){var r=t.pendingProps,l=A.current,i=!1,o=(t.flags&128)!==0,s;if((s=o)||(s=e!==null&&e.memoizedState===null?!1:(l&2)!==0),s?(i=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(l|=1),$(A,l&1),e===null)return so(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(t.mode&1?e.data==="$!"?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(o=r.children,e=r.fallback,i?(r=t.mode,i=t.child,o={mode:"hidden",children:o},!(r&1)&&i!==null?(i.childLanes=0,i.pendingProps=o):i=Ql(o,r,0,null),e=Bt(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=go(n),t.memoizedState=ho,e):ms(t,o));if(l=e.memoizedState,l!==null&&(s=l.dehydrated,s!==null))return Fp(e,t,o,r,s,l,n);if(i){i=r.fallback,o=t.mode,l=e.child,s=l.sibling;var a={mode:"hidden",children:r.children};return!(o&1)&&t.child!==l?(r=t.child,r.childLanes=0,r.pendingProps=a,t.deletions=null):(r=St(l,a),r.subtreeFlags=l.subtreeFlags&14680064),s!==null?i=St(s,i):(i=Bt(i,o,n,null),i.flags|=2),i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,o=e.child.memoizedState,o=o===null?go(n):{baseLanes:o.baseLanes|n,cachePool:null,transitions:o.transitions},i.memoizedState=o,i.childLanes=e.childLanes&~n,t.memoizedState=ho,r}return i=e.child,e=i.sibling,r=St(i,{mode:"visible",children:r.children}),!(t.mode&1)&&(r.lanes=n),r.return=t,r.sibling=null,e!==null&&(n=t.deletions,n===null?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function ms(e,t){return t=Ql({mode:"visible",children:t},e.mode,0,null),t.return=e,e.child=t}function Ur(e,t,n,r){return r!==null&&es(r),yn(t,e.child,null,n),e=ms(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function Fp(e,t,n,r,l,i,o){if(n)return t.flags&256?(t.flags&=-257,r=_i(Error(N(422))),Ur(e,t,o,r)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(i=r.fallback,l=t.mode,r=Ql({mode:"visible",children:r.children},l,0,null),i=Bt(i,l,o,null),i.flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,t.mode&1&&yn(t,e.child,null,o),t.child.memoizedState=go(o),t.memoizedState=ho,i);if(!(t.mode&1))return Ur(e,t,o,null);if(l.data==="$!"){if(r=l.nextSibling&&l.nextSibling.dataset,r)var s=r.dgst;return r=s,i=Error(N(419)),r=_i(i,r,void 0),Ur(e,t,o,r)}if(s=(o&e.childLanes)!==0,me||s){if(r=te,r!==null){switch(o&-o){case 4:l=2;break;case 16:l=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:l=32;break;case 536870912:l=268435456;break;default:l=0}l=l&(r.suspendedLanes|o)?0:l,l!==0&&l!==i.retryLane&&(i.retryLane=l,be(e,l),De(r,e,l,-1))}return ws(),r=_i(Error(N(421))),Ur(e,t,o,r)}return l.data==="$?"?(t.flags|=128,t.child=e.child,t=Zp.bind(null,e),l._reactRetry=t,null):(e=i.treeContext,we=yt(l.nextSibling),ke=t,U=!0,Ie=null,e!==null&&(Ce[Ee++]=Xe,Ce[Ee++]=Ge,Ce[Ee++]=Wt,Xe=e.id,Ge=e.overflow,Wt=t),t=ms(t,r.children),t.flags|=4096,t)}function _a(e,t,n){e.lanes|=t;var r=e.alternate;r!==null&&(r.lanes|=t),ao(e.return,t,n)}function Pi(e,t,n,r,l){var i=e.memoizedState;i===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:l}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=l)}function Wc(e,t,n){var r=t.pendingProps,l=r.revealOrder,i=r.tail;if(ue(e,t,r.children,n),r=A.current,r&2)r=r&1|2,t.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&_a(e,n,t);else if(e.tag===19)_a(e,n,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if($(A,r),!(t.mode&1))t.memoizedState=null;else switch(l){case"forwards":for(n=t.child,l=null;n!==null;)e=n.alternate,e!==null&&wl(e)===null&&(l=n),n=n.sibling;n=l,n===null?(l=t.child,t.child=null):(l=n.sibling,n.sibling=null),Pi(t,!1,l,n,i);break;case"backwards":for(n=null,l=t.child,t.child=null;l!==null;){if(e=l.alternate,e!==null&&wl(e)===null){t.child=l;break}e=l.sibling,l.sibling=n,n=l,l=e}Pi(t,!0,n,null,i);break;case"together":Pi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function br(e,t){!(t.mode&1)&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function et(e,t,n){if(e!==null&&(t.dependencies=e.dependencies),Ht|=t.lanes,!(n&t.childLanes))return null;if(e!==null&&t.child!==e.child)throw Error(N(153));if(t.child!==null){for(e=t.child,n=St(e,e.pendingProps),t.child=n,n.return=t;e.sibling!==null;)e=e.sibling,n=n.sibling=St(e,e.pendingProps),n.return=t;n.sibling=null}return t.child}function Up(e,t,n){switch(t.tag){case 3:Bc(t),vn();break;case 5:mc(t);break;case 1:ge(t.type)&&ml(t);break;case 4:os(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,l=t.memoizedProps.value;$(vl,r._currentValue),r._currentValue=l;break;case 13:if(r=t.memoizedState,r!==null)return r.dehydrated!==null?($(A,A.current&1),t.flags|=128,null):n&t.child.childLanes?Ac(e,t,n):($(A,A.current&1),e=et(e,t,n),e!==null?e.sibling:null);$(A,A.current&1);break;case 19:if(r=(n&t.childLanes)!==0,e.flags&128){if(r)return Wc(e,t,n);t.flags|=128}if(l=t.memoizedState,l!==null&&(l.rendering=null,l.tail=null,l.lastEffect=null),$(A,A.current),r)break;return null;case 22:case 23:return t.lanes=0,Fc(e,t,n)}return et(e,t,n)}var Vc,vo,Hc,Qc;Vc=function(e,t){for(var n=t.child;n!==null;){if(n.tag===5||n.tag===6)e.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===t)break;for(;n.sibling===null;){if(n.return===null||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};vo=function(){};Hc=function(e,t,n,r){var l=e.memoizedProps;if(l!==r){e=t.stateNode,Ft(He.current);var i=null;switch(n){case"input":l=Fi(e,l),r=Fi(e,r),i=[];break;case"select":l=H({},l,{value:void 0}),r=H({},r,{value:void 0}),i=[];break;case"textarea":l=Ai(e,l),r=Ai(e,r),i=[];break;default:typeof l.onClick!="function"&&typeof r.onClick=="function"&&(e.onclick=fl)}Vi(n,r);var o;n=null;for(c in l)if(!r.hasOwnProperty(c)&&l.hasOwnProperty(c)&&l[c]!=null)if(c==="style"){var s=l[c];for(o in s)s.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else c!=="dangerouslySetInnerHTML"&&c!=="children"&&c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&c!=="autoFocus"&&(bn.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in r){var a=r[c];if(s=l!=null?l[c]:void 0,r.hasOwnProperty(c)&&a!==s&&(a!=null||s!=null))if(c==="style")if(s){for(o in s)!s.hasOwnProperty(o)||a&&a.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in a)a.hasOwnProperty(o)&&s[o]!==a[o]&&(n||(n={}),n[o]=a[o])}else n||(i||(i=[]),i.push(c,n)),n=a;else c==="dangerouslySetInnerHTML"?(a=a?a.__html:void 0,s=s?s.__html:void 0,a!=null&&s!==a&&(i=i||[]).push(c,a)):c==="children"?typeof a!="string"&&typeof a!="number"||(i=i||[]).push(c,""+a):c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&(bn.hasOwnProperty(c)?(a!=null&&c==="onScroll"&&D("scroll",e),i||s===a||(i=[])):(i=i||[]).push(c,a))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}};Qc=function(e,t,n,r){n!==r&&(t.flags|=4)};function Dn(e,t){if(!U)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;t!==null;)t.alternate!==null&&(n=t),t=t.sibling;n===null?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:r.sibling=null}}function oe(e){var t=e.alternate!==null&&e.alternate.child===e.child,n=0,r=0;if(t)for(var l=e.child;l!==null;)n|=l.lanes|l.childLanes,r|=l.subtreeFlags&14680064,r|=l.flags&14680064,l.return=e,l=l.sibling;else for(l=e.child;l!==null;)n|=l.lanes|l.childLanes,r|=l.subtreeFlags,r|=l.flags,l.return=e,l=l.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Bp(e,t,n){var r=t.pendingProps;switch(bo(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return oe(t),null;case 1:return ge(t.type)&&pl(),oe(t),null;case 3:return r=t.stateNode,xn(),F(he),F(ae),as(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(e===null||e.child===null)&&(Dr(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&!(t.flags&256)||(t.flags|=1024,Ie!==null&&(Co(Ie),Ie=null))),vo(e,t),oe(t),null;case 5:ss(t);var l=Ft(dr.current);if(n=t.type,e!==null&&t.stateNode!=null)Hc(e,t,n,r,l),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(t.stateNode===null)throw Error(N(166));return oe(t),null}if(e=Ft(He.current),Dr(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Ae]=t,r[ur]=i,e=(t.mode&1)!==0,n){case"dialog":D("cancel",r),D("close",r);break;case"iframe":case"object":case"embed":D("load",r);break;case"video":case"audio":for(l=0;l<Wn.length;l++)D(Wn[l],r);break;case"source":D("error",r);break;case"img":case"image":case"link":D("error",r),D("load",r);break;case"details":D("toggle",r);break;case"input":$s(r,i),D("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},D("invalid",r);break;case"textarea":Fs(r,i),D("invalid",r)}Vi(n,i),l=null;for(var o in i)if(i.hasOwnProperty(o)){var s=i[o];o==="children"?typeof s=="string"?r.textContent!==s&&(i.suppressHydrationWarning!==!0&&$r(r.textContent,s,e),l=["children",s]):typeof s=="number"&&r.textContent!==""+s&&(i.suppressHydrationWarning!==!0&&$r(r.textContent,s,e),l=["children",""+s]):bn.hasOwnProperty(o)&&s!=null&&o==="onScroll"&&D("scroll",r)}switch(n){case"input":Pr(r),Ds(r,i,!0);break;case"textarea":Pr(r),Us(r);break;case"select":case"option":break;default:typeof i.onClick=="function"&&(r.onclick=fl)}r=l,t.updateQueue=r,r!==null&&(t.flags|=4)}else{o=l.nodeType===9?l:l.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=xu(n)),e==="http://www.w3.org/1999/xhtml"?n==="script"?(e=o.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof r.is=="string"?e=o.createElement(n,{is:r.is}):(e=o.createElement(n),n==="select"&&(o=e,r.multiple?o.multiple=!0:r.size&&(o.size=r.size))):e=o.createElementNS(e,n),e[Ae]=t,e[ur]=r,Vc(e,t,!1,!1),t.stateNode=e;e:{switch(o=Hi(n,r),n){case"dialog":D("cancel",e),D("close",e),l=r;break;case"iframe":case"object":case"embed":D("load",e),l=r;break;case"video":case"audio":for(l=0;l<Wn.length;l++)D(Wn[l],e);l=r;break;case"source":D("error",e),l=r;break;case"img":case"image":case"link":D("error",e),D("load",e),l=r;break;case"details":D("toggle",e),l=r;break;case"input":$s(e,r),l=Fi(e,r),D("invalid",e);break;case"option":l=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},l=H({},r,{value:void 0}),D("invalid",e);break;case"textarea":Fs(e,r),l=Ai(e,r),D("invalid",e);break;default:l=r}Vi(n,l),s=l;for(i in s)if(s.hasOwnProperty(i)){var a=s[i];i==="style"?Su(e,a):i==="dangerouslySetInnerHTML"?(a=a?a.__html:void 0,a!=null&&wu(e,a)):i==="children"?typeof a=="string"?(n!=="textarea"||a!=="")&&er(e,a):typeof a=="number"&&er(e,""+a):i!=="suppressContentEditableWarning"&&i!=="suppressHydrationWarning"&&i!=="autoFocus"&&(bn.hasOwnProperty(i)?a!=null&&i==="onScroll"&&D("scroll",e):a!=null&&Fo(e,i,a,o))}switch(n){case"input":Pr(e),Ds(e,r,!1);break;case"textarea":Pr(e),Us(e);break;case"option":r.value!=null&&e.setAttribute("value",""+jt(r.value));break;case"select":e.multiple=!!r.multiple,i=r.value,i!=null?un(e,!!r.multiple,i,!1):r.defaultValue!=null&&un(e,!!r.multiple,r.defaultValue,!0);break;default:typeof l.onClick=="function"&&(e.onclick=fl)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return oe(t),null;case 6:if(e&&t.stateNode!=null)Qc(e,t,e.memoizedProps,r);else{if(typeof r!="string"&&t.stateNode===null)throw Error(N(166));if(n=Ft(dr.current),Ft(He.current),Dr(t)){if(r=t.stateNode,n=t.memoizedProps,r[Ae]=t,(i=r.nodeValue!==n)&&(e=ke,e!==null))switch(e.tag){case 3:$r(r.nodeValue,n,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&$r(r.nodeValue,n,(e.mode&1)!==0)}i&&(t.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[Ae]=t,t.stateNode=r}return oe(t),null;case 13:if(F(A),r=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(U&&we!==null&&t.mode&1&&!(t.flags&128))uc(),vn(),t.flags|=98560,i=!1;else if(i=Dr(t),r!==null&&r.dehydrated!==null){if(e===null){if(!i)throw Error(N(318));if(i=t.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error(N(317));i[Ae]=t}else vn(),!(t.flags&128)&&(t.memoizedState=null),t.flags|=4;oe(t),i=!1}else Ie!==null&&(Co(Ie),Ie=null),i=!0;if(!i)return t.flags&65536?t:null}return t.flags&128?(t.lanes=n,t):(r=r!==null,r!==(e!==null&&e.memoizedState!==null)&&r&&(t.child.flags|=8192,t.mode&1&&(e===null||A.current&1?q===0&&(q=3):ws())),t.updateQueue!==null&&(t.flags|=4),oe(t),null);case 4:return xn(),vo(e,t),e===null&&sr(t.stateNode.containerInfo),oe(t),null;case 10:return rs(t.type._context),oe(t),null;case 17:return ge(t.type)&&pl(),oe(t),null;case 19:if(F(A),i=t.memoizedState,i===null)return oe(t),null;if(r=(t.flags&128)!==0,o=i.rendering,o===null)if(r)Dn(i,!1);else{if(q!==0||e!==null&&e.flags&128)for(e=t.child;e!==null;){if(o=wl(e),o!==null){for(t.flags|=128,Dn(i,!1),r=o.updateQueue,r!==null&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;n!==null;)i=n,e=r,i.flags&=14680066,o=i.alternate,o===null?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=o.childLanes,i.lanes=o.lanes,i.child=o.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=o.memoizedProps,i.memoizedState=o.memoizedState,i.updateQueue=o.updateQueue,i.type=o.type,e=o.dependencies,i.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return $(A,A.current&1|2),t.child}e=e.sibling}i.tail!==null&&Y()>kn&&(t.flags|=128,r=!0,Dn(i,!1),t.lanes=4194304)}else{if(!r)if(e=wl(o),e!==null){if(t.flags|=128,r=!0,n=e.updateQueue,n!==null&&(t.updateQueue=n,t.flags|=4),Dn(i,!0),i.tail===null&&i.tailMode==="hidden"&&!o.alternate&&!U)return oe(t),null}else 2*Y()-i.renderingStartTime>kn&&n!==1073741824&&(t.flags|=128,r=!0,Dn(i,!1),t.lanes=4194304);i.isBackwards?(o.sibling=t.child,t.child=o):(n=i.last,n!==null?n.sibling=o:t.child=o,i.last=o)}return i.tail!==null?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Y(),t.sibling=null,n=A.current,$(A,r?n&1|2:n&1),t):(oe(t),null);case 22:case 23:return xs(),r=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==r&&(t.flags|=8192),r&&t.mode&1?xe&1073741824&&(oe(t),t.subtreeFlags&6&&(t.flags|=8192)):oe(t),null;case 24:return null;case 25:return null}throw Error(N(156,t.tag))}function Ap(e,t){switch(bo(t),t.tag){case 1:return ge(t.type)&&pl(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return xn(),F(he),F(ae),as(),e=t.flags,e&65536&&!(e&128)?(t.flags=e&-65537|128,t):null;case 5:return ss(t),null;case 13:if(F(A),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(N(340));vn()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return F(A),null;case 4:return xn(),null;case 10:return rs(t.type._context),null;case 22:case 23:return xs(),null;case 24:return null;default:return null}}var Br=!1,se=!1,Wp=typeof WeakSet=="function"?WeakSet:Set,C=null;function sn(e,t){var n=e.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(r){Q(e,t,r)}else n.current=null}function yo(e,t,n){try{n()}catch(r){Q(e,t,r)}}var Pa=!1;function Vp(e,t){if(eo=ul,e=Ju(),Zo(e)){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{n=(n=e.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var l=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch{n=null;break e}var o=0,s=-1,a=-1,c=0,m=0,f=e,g=null;t:for(;;){for(var y;f!==n||l!==0&&f.nodeType!==3||(s=o+l),f!==i||r!==0&&f.nodeType!==3||(a=o+r),f.nodeType===3&&(o+=f.nodeValue.length),(y=f.firstChild)!==null;)g=f,f=y;for(;;){if(f===e)break t;if(g===n&&++c===l&&(s=o),g===i&&++m===r&&(a=o),(y=f.nextSibling)!==null)break;f=g,g=f.parentNode}f=y}n=s===-1||a===-1?null:{start:s,end:a}}else n=null}n=n||{start:0,end:0}}else n=null;for(to={focusedElem:e,selectionRange:n},ul=!1,C=t;C!==null;)if(t=C,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,C=e;else for(;C!==null;){t=C;try{var k=t.alternate;if(t.flags&1024)switch(t.tag){case 0:case 11:case 15:break;case 1:if(k!==null){var S=k.memoizedProps,w=k.memoizedState,p=t.stateNode,d=p.getSnapshotBeforeUpdate(t.elementType===t.type?S:Me(t.type,S),w);p.__reactInternalSnapshotBeforeUpdate=d}break;case 3:var h=t.stateNode.containerInfo;h.nodeType===1?h.textContent="":h.nodeType===9&&h.documentElement&&h.removeChild(h.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(N(163))}}catch(x){Q(t,t.return,x)}if(e=t.sibling,e!==null){e.return=t.return,C=e;break}C=t.return}return k=Pa,Pa=!1,k}function Gn(e,t,n){var r=t.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var l=r=r.next;do{if((l.tag&e)===e){var i=l.destroy;l.destroy=void 0,i!==void 0&&yo(t,n,i)}l=l.next}while(l!==r)}}function Vl(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function xo(e){var t=e.ref;if(t!==null){var n=e.stateNode;switch(e.tag){case 5:e=n;break;default:e=n}typeof t=="function"?t(e):t.current=e}}function Kc(e){var t=e.alternate;t!==null&&(e.alternate=null,Kc(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[Ae],delete t[ur],delete t[lo],delete t[Cp],delete t[Ep])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function Yc(e){return e.tag===5||e.tag===3||e.tag===4}function La(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||Yc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function wo(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.nodeType===8?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(n.nodeType===8?(t=n.parentNode,t.insertBefore(e,n)):(t=n,t.appendChild(e)),n=n._reactRootContainer,n!=null||t.onclick!==null||(t.onclick=fl));else if(r!==4&&(e=e.child,e!==null))for(wo(e,t,n),e=e.sibling;e!==null;)wo(e,t,n),e=e.sibling}function ko(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(r!==4&&(e=e.child,e!==null))for(ko(e,t,n),e=e.sibling;e!==null;)ko(e,t,n),e=e.sibling}var ne=null,Oe=!1;function it(e,t,n){for(n=n.child;n!==null;)Xc(e,t,n),n=n.sibling}function Xc(e,t,n){if(Ve&&typeof Ve.onCommitFiberUnmount=="function")try{Ve.onCommitFiberUnmount(Il,n)}catch{}switch(n.tag){case 5:se||sn(n,t);case 6:var r=ne,l=Oe;ne=null,it(e,t,n),ne=r,Oe=l,ne!==null&&(Oe?(e=ne,n=n.stateNode,e.nodeType===8?e.parentNode.removeChild(n):e.removeChild(n)):ne.removeChild(n.stateNode));break;case 18:ne!==null&&(Oe?(e=ne,n=n.stateNode,e.nodeType===8?ki(e.parentNode,n):e.nodeType===1&&ki(e,n),lr(e)):ki(ne,n.stateNode));break;case 4:r=ne,l=Oe,ne=n.stateNode.containerInfo,Oe=!0,it(e,t,n),ne=r,Oe=l;break;case 0:case 11:case 14:case 15:if(!se&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){l=r=r.next;do{var i=l,o=i.destroy;i=i.tag,o!==void 0&&(i&2||i&4)&&yo(n,t,o),l=l.next}while(l!==r)}it(e,t,n);break;case 1:if(!se&&(sn(n,t),r=n.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(s){Q(n,t,s)}it(e,t,n);break;case 21:it(e,t,n);break;case 22:n.mode&1?(se=(r=se)||n.memoizedState!==null,it(e,t,n),se=r):it(e,t,n);break;default:it(e,t,n)}}function Ra(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var n=e.stateNode;n===null&&(n=e.stateNode=new Wp),t.forEach(function(r){var l=qp.bind(null,e,r);n.has(r)||(n.add(r),r.then(l,l))})}}function ze(e,t){var n=t.deletions;if(n!==null)for(var r=0;r<n.length;r++){var l=n[r];try{var i=e,o=t,s=o;e:for(;s!==null;){switch(s.tag){case 5:ne=s.stateNode,Oe=!1;break e;case 3:ne=s.stateNode.containerInfo,Oe=!0;break e;case 4:ne=s.stateNode.containerInfo,Oe=!0;break e}s=s.return}if(ne===null)throw Error(N(160));Xc(i,o,l),ne=null,Oe=!1;var a=l.alternate;a!==null&&(a.return=null),l.return=null}catch(c){Q(l,t,c)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)Gc(t,e),t=t.sibling}function Gc(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ze(t,e),Ue(e),r&4){try{Gn(3,e,e.return),Vl(3,e)}catch(S){Q(e,e.return,S)}try{Gn(5,e,e.return)}catch(S){Q(e,e.return,S)}}break;case 1:ze(t,e),Ue(e),r&512&&n!==null&&sn(n,n.return);break;case 5:if(ze(t,e),Ue(e),r&512&&n!==null&&sn(n,n.return),e.flags&32){var l=e.stateNode;try{er(l,"")}catch(S){Q(e,e.return,S)}}if(r&4&&(l=e.stateNode,l!=null)){var i=e.memoizedProps,o=n!==null?n.memoizedProps:i,s=e.type,a=e.updateQueue;if(e.updateQueue=null,a!==null)try{s==="input"&&i.type==="radio"&&i.name!=null&&vu(l,i),Hi(s,o);var c=Hi(s,i);for(o=0;o<a.length;o+=2){var m=a[o],f=a[o+1];m==="style"?Su(l,f):m==="dangerouslySetInnerHTML"?wu(l,f):m==="children"?er(l,f):Fo(l,m,f,c)}switch(s){case"input":Ui(l,i);break;case"textarea":yu(l,i);break;case"select":var g=l._wrapperState.wasMultiple;l._wrapperState.wasMultiple=!!i.multiple;var y=i.value;y!=null?un(l,!!i.multiple,y,!1):g!==!!i.multiple&&(i.defaultValue!=null?un(l,!!i.multiple,i.defaultValue,!0):un(l,!!i.multiple,i.multiple?[]:"",!1))}l[ur]=i}catch(S){Q(e,e.return,S)}}break;case 6:if(ze(t,e),Ue(e),r&4){if(e.stateNode===null)throw Error(N(162));l=e.stateNode,i=e.memoizedProps;try{l.nodeValue=i}catch(S){Q(e,e.return,S)}}break;case 3:if(ze(t,e),Ue(e),r&4&&n!==null&&n.memoizedState.isDehydrated)try{lr(t.containerInfo)}catch(S){Q(e,e.return,S)}break;case 4:ze(t,e),Ue(e);break;case 13:ze(t,e),Ue(e),l=e.child,l.flags&8192&&(i=l.memoizedState!==null,l.stateNode.isHidden=i,!i||l.alternate!==null&&l.alternate.memoizedState!==null||(vs=Y())),r&4&&Ra(e);break;case 22:if(m=n!==null&&n.memoizedState!==null,e.mode&1?(se=(c=se)||m,ze(t,e),se=c):ze(t,e),Ue(e),r&8192){if(c=e.memoizedState!==null,(e.stateNode.isHidden=c)&&!m&&e.mode&1)for(C=e,m=e.child;m!==null;){for(f=C=m;C!==null;){switch(g=C,y=g.child,g.tag){case 0:case 11:case 14:case 15:Gn(4,g,g.return);break;case 1:sn(g,g.return);var k=g.stateNode;if(typeof k.componentWillUnmount=="function"){r=g,n=g.return;try{t=r,k.props=t.memoizedProps,k.state=t.memoizedState,k.componentWillUnmount()}catch(S){Q(r,n,S)}}break;case 5:sn(g,g.return);break;case 22:if(g.memoizedState!==null){za(f);continue}}y!==null?(y.return=g,C=y):za(f)}m=m.sibling}e:for(m=null,f=e;;){if(f.tag===5){if(m===null){m=f;try{l=f.stateNode,c?(i=l.style,typeof i.setProperty=="function"?i.setProperty("display","none","important"):i.display="none"):(s=f.stateNode,a=f.memoizedProps.style,o=a!=null&&a.hasOwnProperty("display")?a.display:null,s.style.display=ku("display",o))}catch(S){Q(e,e.return,S)}}}else if(f.tag===6){if(m===null)try{f.stateNode.nodeValue=c?"":f.memoizedProps}catch(S){Q(e,e.return,S)}}else if((f.tag!==22&&f.tag!==23||f.memoizedState===null||f===e)&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;f.sibling===null;){if(f.return===null||f.return===e)break e;m===f&&(m=null),f=f.return}m===f&&(m=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:ze(t,e),Ue(e),r&4&&Ra(e);break;case 21:break;default:ze(t,e),Ue(e)}}function Ue(e){var t=e.flags;if(t&2){try{e:{for(var n=e.return;n!==null;){if(Yc(n)){var r=n;break e}n=n.return}throw Error(N(160))}switch(r.tag){case 5:var l=r.stateNode;r.flags&32&&(er(l,""),r.flags&=-33);var i=La(e);ko(e,i,l);break;case 3:case 4:var o=r.stateNode.containerInfo,s=La(e);wo(e,s,o);break;default:throw Error(N(161))}}catch(a){Q(e,e.return,a)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function Hp(e,t,n){C=e,Jc(e)}function Jc(e,t,n){for(var r=(e.mode&1)!==0;C!==null;){var l=C,i=l.child;if(l.tag===22&&r){var o=l.memoizedState!==null||Br;if(!o){var s=l.alternate,a=s!==null&&s.memoizedState!==null||se;s=Br;var c=se;if(Br=o,(se=a)&&!c)for(C=l;C!==null;)o=C,a=o.child,o.tag===22&&o.memoizedState!==null?Ma(l):a!==null?(a.return=o,C=a):Ma(l);for(;i!==null;)C=i,Jc(i),i=i.sibling;C=l,Br=s,se=c}Ta(e)}else l.subtreeFlags&8772&&i!==null?(i.return=l,C=i):Ta(e)}}function Ta(e){for(;C!==null;){var t=C;if(t.flags&8772){var n=t.alternate;try{if(t.flags&8772)switch(t.tag){case 0:case 11:case 15:se||Vl(5,t);break;case 1:var r=t.stateNode;if(t.flags&4&&!se)if(n===null)r.componentDidMount();else{var l=t.elementType===t.type?n.memoizedProps:Me(t.type,n.memoizedProps);r.componentDidUpdate(l,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;i!==null&&ha(t,i,r);break;case 3:var o=t.updateQueue;if(o!==null){if(n=null,t.child!==null)switch(t.child.tag){case 5:n=t.child.stateNode;break;case 1:n=t.child.stateNode}ha(t,o,n)}break;case 5:var s=t.stateNode;if(n===null&&t.flags&4){n=s;var a=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":a.autoFocus&&n.focus();break;case"img":a.src&&(n.src=a.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var c=t.alternate;if(c!==null){var m=c.memoizedState;if(m!==null){var f=m.dehydrated;f!==null&&lr(f)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(N(163))}se||t.flags&512&&xo(t)}catch(g){Q(t,t.return,g)}}if(t===e){C=null;break}if(n=t.sibling,n!==null){n.return=t.return,C=n;break}C=t.return}}function za(e){for(;C!==null;){var t=C;if(t===e){C=null;break}var n=t.sibling;if(n!==null){n.return=t.return,C=n;break}C=t.return}}function Ma(e){for(;C!==null;){var t=C;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{Vl(4,t)}catch(a){Q(t,n,a)}break;case 1:var r=t.stateNode;if(typeof r.componentDidMount=="function"){var l=t.return;try{r.componentDidMount()}catch(a){Q(t,l,a)}}var i=t.return;try{xo(t)}catch(a){Q(t,i,a)}break;case 5:var o=t.return;try{xo(t)}catch(a){Q(t,o,a)}}}catch(a){Q(t,t.return,a)}if(t===e){C=null;break}var s=t.sibling;if(s!==null){s.return=t.return,C=s;break}C=t.return}}var Qp=Math.ceil,Nl=nt.ReactCurrentDispatcher,hs=nt.ReactCurrentOwner,Pe=nt.ReactCurrentBatchConfig,O=0,te=null,X=null,re=0,xe=0,an=_t(0),q=0,hr=null,Ht=0,Hl=0,gs=0,Jn=null,pe=null,vs=0,kn=1/0,Ke=null,jl=!1,So=null,wt=null,Ar=!1,pt=null,Cl=0,Zn=0,No=null,el=-1,tl=0;function ce(){return O&6?Y():el!==-1?el:el=Y()}function kt(e){return e.mode&1?O&2&&re!==0?re&-re:Pp.transition!==null?(tl===0&&(tl=Ou()),tl):(e=I,e!==0||(e=window.event,e=e===void 0?16:Au(e.type)),e):1}function De(e,t,n,r){if(50<Zn)throw Zn=0,No=null,Error(N(185));xr(e,n,r),(!(O&2)||e!==te)&&(e===te&&(!(O&2)&&(Hl|=n),q===4&&ct(e,re)),ve(e,r),n===1&&O===0&&!(t.mode&1)&&(kn=Y()+500,Bl&&Pt()))}function ve(e,t){var n=e.callbackNode;Pf(e,t);var r=al(e,e===te?re:0);if(r===0)n!==null&&Ws(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(n!=null&&Ws(n),t===1)e.tag===0?_p(Oa.bind(null,e)):oc(Oa.bind(null,e)),Np(function(){!(O&6)&&Pt()}),n=null;else{switch(Iu(r)){case 1:n=Vo;break;case 4:n=zu;break;case 16:n=sl;break;case 536870912:n=Mu;break;default:n=sl}n=ld(n,Zc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function Zc(e,t){if(el=-1,tl=0,O&6)throw Error(N(327));var n=e.callbackNode;if(mn()&&e.callbackNode!==n)return null;var r=al(e,e===te?re:0);if(r===0)return null;if(r&30||r&e.expiredLanes||t)t=El(e,r);else{t=r;var l=O;O|=2;var i=bc();(te!==e||re!==t)&&(Ke=null,kn=Y()+500,Ut(e,t));do try{Xp();break}catch(s){qc(e,s)}while(1);ns(),Nl.current=i,O=l,X!==null?t=0:(te=null,re=0,t=q)}if(t!==0){if(t===2&&(l=Gi(e),l!==0&&(r=l,t=jo(e,l))),t===1)throw n=hr,Ut(e,0),ct(e,r),ve(e,Y()),n;if(t===6)ct(e,r);else{if(l=e.current.alternate,!(r&30)&&!Kp(l)&&(t=El(e,r),t===2&&(i=Gi(e),i!==0&&(r=i,t=jo(e,i))),t===1))throw n=hr,Ut(e,0),ct(e,r),ve(e,Y()),n;switch(e.finishedWork=l,e.finishedLanes=r,t){case 0:case 1:throw Error(N(345));case 2:It(e,pe,Ke);break;case 3:if(ct(e,r),(r&130023424)===r&&(t=vs+500-Y(),10<t)){if(al(e,0)!==0)break;if(l=e.suspendedLanes,(l&r)!==r){ce(),e.pingedLanes|=e.suspendedLanes&l;break}e.timeoutHandle=ro(It.bind(null,e,pe,Ke),t);break}It(e,pe,Ke);break;case 4:if(ct(e,r),(r&4194240)===r)break;for(t=e.eventTimes,l=-1;0<r;){var o=31-$e(r);i=1<<o,o=t[o],o>l&&(l=o),r&=~i}if(r=l,r=Y()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Qp(r/1960))-r,10<r){e.timeoutHandle=ro(It.bind(null,e,pe,Ke),r);break}It(e,pe,Ke);break;case 5:It(e,pe,Ke);break;default:throw Error(N(329))}}}return ve(e,Y()),e.callbackNode===n?Zc.bind(null,e):null}function jo(e,t){var n=Jn;return e.current.memoizedState.isDehydrated&&(Ut(e,t).flags|=256),e=El(e,t),e!==2&&(t=pe,pe=n,t!==null&&Co(t)),e}function Co(e){pe===null?pe=e:pe.push.apply(pe,e)}function Kp(e){for(var t=e;;){if(t.flags&16384){var n=t.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var l=n[r],i=l.getSnapshot;l=l.value;try{if(!Fe(i(),l))return!1}catch{return!1}}}if(n=t.child,t.subtreeFlags&16384&&n!==null)n.return=t,t=n;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function ct(e,t){for(t&=~gs,t&=~Hl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-$e(t),r=1<<n;e[n]=-1,t&=~r}}function Oa(e){if(O&6)throw Error(N(327));mn();var t=al(e,0);if(!(t&1))return ve(e,Y()),null;var n=El(e,t);if(e.tag!==0&&n===2){var r=Gi(e);r!==0&&(t=r,n=jo(e,r))}if(n===1)throw n=hr,Ut(e,0),ct(e,t),ve(e,Y()),n;if(n===6)throw Error(N(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,It(e,pe,Ke),ve(e,Y()),null}function ys(e,t){var n=O;O|=1;try{return e(t)}finally{O=n,O===0&&(kn=Y()+500,Bl&&Pt())}}function Qt(e){pt!==null&&pt.tag===0&&!(O&6)&&mn();var t=O;O|=1;var n=Pe.transition,r=I;try{if(Pe.transition=null,I=1,e)return e()}finally{I=r,Pe.transition=n,O=t,!(O&6)&&Pt()}}function xs(){xe=an.current,F(an)}function Ut(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(n!==-1&&(e.timeoutHandle=-1,Sp(n)),X!==null)for(n=X.return;n!==null;){var r=n;switch(bo(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&pl();break;case 3:xn(),F(he),F(ae),as();break;case 5:ss(r);break;case 4:xn();break;case 13:F(A);break;case 19:F(A);break;case 10:rs(r.type._context);break;case 22:case 23:xs()}n=n.return}if(te=e,X=e=St(e.current,null),re=xe=t,q=0,hr=null,gs=Hl=Ht=0,pe=Jn=null,Dt!==null){for(t=0;t<Dt.length;t++)if(n=Dt[t],r=n.interleaved,r!==null){n.interleaved=null;var l=r.next,i=n.pending;if(i!==null){var o=i.next;i.next=l,r.next=o}n.pending=r}Dt=null}return e}function qc(e,t){do{var n=X;try{if(ns(),Zr.current=Sl,kl){for(var r=W.memoizedState;r!==null;){var l=r.queue;l!==null&&(l.pending=null),r=r.next}kl=!1}if(Vt=0,ee=G=W=null,Xn=!1,fr=0,hs.current=null,n===null||n.return===null){q=1,hr=t,X=null;break}e:{var i=e,o=n.return,s=n,a=t;if(t=re,s.flags|=32768,a!==null&&typeof a=="object"&&typeof a.then=="function"){var c=a,m=s,f=m.tag;if(!(m.mode&1)&&(f===0||f===11||f===15)){var g=m.alternate;g?(m.updateQueue=g.updateQueue,m.memoizedState=g.memoizedState,m.lanes=g.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=ka(o);if(y!==null){y.flags&=-257,Sa(y,o,s,i,t),y.mode&1&&wa(i,c,t),t=y,a=c;var k=t.updateQueue;if(k===null){var S=new Set;S.add(a),t.updateQueue=S}else k.add(a);break e}else{if(!(t&1)){wa(i,c,t),ws();break e}a=Error(N(426))}}else if(U&&s.mode&1){var w=ka(o);if(w!==null){!(w.flags&65536)&&(w.flags|=256),Sa(w,o,s,i,t),es(wn(a,s));break e}}i=a=wn(a,s),q!==4&&(q=2),Jn===null?Jn=[i]:Jn.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t;var p=Ic(i,a,t);ma(i,p);break e;case 1:s=a;var d=i.type,h=i.stateNode;if(!(i.flags&128)&&(typeof d.getDerivedStateFromError=="function"||h!==null&&typeof h.componentDidCatch=="function"&&(wt===null||!wt.has(h)))){i.flags|=65536,t&=-t,i.lanes|=t;var x=$c(i,s,t);ma(i,x);break e}}i=i.return}while(i!==null)}td(n)}catch(j){t=j,X===n&&n!==null&&(X=n=n.return);continue}break}while(1)}function bc(){var e=Nl.current;return Nl.current=Sl,e===null?Sl:e}function ws(){(q===0||q===3||q===2)&&(q=4),te===null||!(Ht&268435455)&&!(Hl&268435455)||ct(te,re)}function El(e,t){var n=O;O|=2;var r=bc();(te!==e||re!==t)&&(Ke=null,Ut(e,t));do try{Yp();break}catch(l){qc(e,l)}while(1);if(ns(),O=n,Nl.current=r,X!==null)throw Error(N(261));return te=null,re=0,q}function Yp(){for(;X!==null;)ed(X)}function Xp(){for(;X!==null&&!xf();)ed(X)}function ed(e){var t=rd(e.alternate,e,xe);e.memoizedProps=e.pendingProps,t===null?td(e):X=t,hs.current=null}function td(e){var t=e;do{var n=t.alternate;if(e=t.return,t.flags&32768){if(n=Ap(n,t),n!==null){n.flags&=32767,X=n;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{q=6,X=null;return}}else if(n=Bp(n,t,xe),n!==null){X=n;return}if(t=t.sibling,t!==null){X=t;return}X=t=e}while(t!==null);q===0&&(q=5)}function It(e,t,n){var r=I,l=Pe.transition;try{Pe.transition=null,I=1,Gp(e,t,n,r)}finally{Pe.transition=l,I=r}return null}function Gp(e,t,n,r){do mn();while(pt!==null);if(O&6)throw Error(N(327));n=e.finishedWork;var l=e.finishedLanes;if(n===null)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(N(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(Lf(e,i),e===te&&(X=te=null,re=0),!(n.subtreeFlags&2064)&&!(n.flags&2064)||Ar||(Ar=!0,ld(sl,function(){return mn(),null})),i=(n.flags&15990)!==0,n.subtreeFlags&15990||i){i=Pe.transition,Pe.transition=null;var o=I;I=1;var s=O;O|=4,hs.current=null,Vp(e,n),Gc(n,e),hp(to),ul=!!eo,to=eo=null,e.current=n,Hp(n),wf(),O=s,I=o,Pe.transition=i}else e.current=n;if(Ar&&(Ar=!1,pt=e,Cl=l),i=e.pendingLanes,i===0&&(wt=null),Nf(n.stateNode),ve(e,Y()),t!==null)for(r=e.onRecoverableError,n=0;n<t.length;n++)l=t[n],r(l.value,{componentStack:l.stack,digest:l.digest});if(jl)throw jl=!1,e=So,So=null,e;return Cl&1&&e.tag!==0&&mn(),i=e.pendingLanes,i&1?e===No?Zn++:(Zn=0,No=e):Zn=0,Pt(),null}function mn(){if(pt!==null){var e=Iu(Cl),t=Pe.transition,n=I;try{if(Pe.transition=null,I=16>e?16:e,pt===null)var r=!1;else{if(e=pt,pt=null,Cl=0,O&6)throw Error(N(331));var l=O;for(O|=4,C=e.current;C!==null;){var i=C,o=i.child;if(C.flags&16){var s=i.deletions;if(s!==null){for(var a=0;a<s.length;a++){var c=s[a];for(C=c;C!==null;){var m=C;switch(m.tag){case 0:case 11:case 15:Gn(8,m,i)}var f=m.child;if(f!==null)f.return=m,C=f;else for(;C!==null;){m=C;var g=m.sibling,y=m.return;if(Kc(m),m===c){C=null;break}if(g!==null){g.return=y,C=g;break}C=y}}}var k=i.alternate;if(k!==null){var S=k.child;if(S!==null){k.child=null;do{var w=S.sibling;S.sibling=null,S=w}while(S!==null)}}C=i}}if(i.subtreeFlags&2064&&o!==null)o.return=i,C=o;else e:for(;C!==null;){if(i=C,i.flags&2048)switch(i.tag){case 0:case 11:case 15:Gn(9,i,i.return)}var p=i.sibling;if(p!==null){p.return=i.return,C=p;break e}C=i.return}}var d=e.current;for(C=d;C!==null;){o=C;var h=o.child;if(o.subtreeFlags&2064&&h!==null)h.return=o,C=h;else e:for(o=d;C!==null;){if(s=C,s.flags&2048)try{switch(s.tag){case 0:case 11:case 15:Vl(9,s)}}catch(j){Q(s,s.return,j)}if(s===o){C=null;break e}var x=s.sibling;if(x!==null){x.return=s.return,C=x;break e}C=s.return}}if(O=l,Pt(),Ve&&typeof Ve.onPostCommitFiberRoot=="function")try{Ve.onPostCommitFiberRoot(Il,e)}catch{}r=!0}return r}finally{I=n,Pe.transition=t}}return!1}function Ia(e,t,n){t=wn(n,t),t=Ic(e,t,1),e=xt(e,t,1),t=ce(),e!==null&&(xr(e,1,t),ve(e,t))}function Q(e,t,n){if(e.tag===3)Ia(e,e,n);else for(;t!==null;){if(t.tag===3){Ia(t,e,n);break}else if(t.tag===1){var r=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(wt===null||!wt.has(r))){e=wn(n,e),e=$c(t,e,1),t=xt(t,e,1),e=ce(),t!==null&&(xr(t,1,e),ve(t,e));break}}t=t.return}}function Jp(e,t,n){var r=e.pingCache;r!==null&&r.delete(t),t=ce(),e.pingedLanes|=e.suspendedLanes&n,te===e&&(re&n)===n&&(q===4||q===3&&(re&130023424)===re&&500>Y()-vs?Ut(e,0):gs|=n),ve(e,t)}function nd(e,t){t===0&&(e.mode&1?(t=Tr,Tr<<=1,!(Tr&130023424)&&(Tr=4194304)):t=1);var n=ce();e=be(e,t),e!==null&&(xr(e,t,n),ve(e,n))}function Zp(e){var t=e.memoizedState,n=0;t!==null&&(n=t.retryLane),nd(e,n)}function qp(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,l=e.memoizedState;l!==null&&(n=l.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(N(314))}r!==null&&r.delete(t),nd(e,n)}var rd;rd=function(e,t,n){if(e!==null)if(e.memoizedProps!==t.pendingProps||he.current)me=!0;else{if(!(e.lanes&n)&&!(t.flags&128))return me=!1,Up(e,t,n);me=!!(e.flags&131072)}else me=!1,U&&t.flags&1048576&&sc(t,gl,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;br(e,t),e=t.pendingProps;var l=gn(t,ae.current);pn(t,n),l=cs(null,t,r,e,l,n);var i=ds();return t.flags|=1,typeof l=="object"&&l!==null&&typeof l.render=="function"&&l.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,ge(r)?(i=!0,ml(t)):i=!1,t.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,is(t),l.updater=Wl,t.stateNode=l,l._reactInternals=t,co(t,r,e,n),t=mo(null,t,r,!0,i,n)):(t.tag=0,U&&i&&qo(t),ue(null,t,l,n),t=t.child),t;case 16:r=t.elementType;e:{switch(br(e,t),e=t.pendingProps,l=r._init,r=l(r._payload),t.type=r,l=t.tag=em(r),e=Me(r,e),l){case 0:t=po(null,t,r,e,n);break e;case 1:t=Ca(null,t,r,e,n);break e;case 11:t=Na(null,t,r,e,n);break e;case 14:t=ja(null,t,r,Me(r.type,e),n);break e}throw Error(N(306,r,""))}return t;case 0:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:Me(r,l),po(e,t,r,l,n);case 1:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:Me(r,l),Ca(e,t,r,l,n);case 3:e:{if(Bc(t),e===null)throw Error(N(387));r=t.pendingProps,i=t.memoizedState,l=i.element,pc(e,t),xl(t,r,null,n);var o=t.memoizedState;if(r=o.element,i.isDehydrated)if(i={element:r,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,t.flags&256){l=wn(Error(N(423)),t),t=Ea(e,t,r,n,l);break e}else if(r!==l){l=wn(Error(N(424)),t),t=Ea(e,t,r,n,l);break e}else for(we=yt(t.stateNode.containerInfo.firstChild),ke=t,U=!0,Ie=null,n=dc(t,null,r,n),t.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(vn(),r===l){t=et(e,t,n);break e}ue(e,t,r,n)}t=t.child}return t;case 5:return mc(t),e===null&&so(t),r=t.type,l=t.pendingProps,i=e!==null?e.memoizedProps:null,o=l.children,no(r,l)?o=null:i!==null&&no(r,i)&&(t.flags|=32),Uc(e,t),ue(e,t,o,n),t.child;case 6:return e===null&&so(t),null;case 13:return Ac(e,t,n);case 4:return os(t,t.stateNode.containerInfo),r=t.pendingProps,e===null?t.child=yn(t,null,r,n):ue(e,t,r,n),t.child;case 11:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:Me(r,l),Na(e,t,r,l,n);case 7:return ue(e,t,t.pendingProps,n),t.child;case 8:return ue(e,t,t.pendingProps.children,n),t.child;case 12:return ue(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,l=t.pendingProps,i=t.memoizedProps,o=l.value,$(vl,r._currentValue),r._currentValue=o,i!==null)if(Fe(i.value,o)){if(i.children===l.children&&!he.current){t=et(e,t,n);break e}}else for(i=t.child,i!==null&&(i.return=t);i!==null;){var s=i.dependencies;if(s!==null){o=i.child;for(var a=s.firstContext;a!==null;){if(a.context===r){if(i.tag===1){a=Je(-1,n&-n),a.tag=2;var c=i.updateQueue;if(c!==null){c=c.shared;var m=c.pending;m===null?a.next=a:(a.next=m.next,m.next=a),c.pending=a}}i.lanes|=n,a=i.alternate,a!==null&&(a.lanes|=n),ao(i.return,n,t),s.lanes|=n;break}a=a.next}}else if(i.tag===10)o=i.type===t.type?null:i.child;else if(i.tag===18){if(o=i.return,o===null)throw Error(N(341));o.lanes|=n,s=o.alternate,s!==null&&(s.lanes|=n),ao(o,n,t),o=i.sibling}else o=i.child;if(o!==null)o.return=i;else for(o=i;o!==null;){if(o===t){o=null;break}if(i=o.sibling,i!==null){i.return=o.return,o=i;break}o=o.return}i=o}ue(e,t,l.children,n),t=t.child}return t;case 9:return l=t.type,r=t.pendingProps.children,pn(t,n),l=Le(l),r=r(l),t.flags|=1,ue(e,t,r,n),t.child;case 14:return r=t.type,l=Me(r,t.pendingProps),l=Me(r.type,l),ja(e,t,r,l,n);case 15:return Dc(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:Me(r,l),br(e,t),t.tag=1,ge(r)?(e=!0,ml(t)):e=!1,pn(t,n),Oc(t,r,l),co(t,r,l,n),mo(null,t,r,!0,e,n);case 19:return Wc(e,t,n);case 22:return Fc(e,t,n)}throw Error(N(156,t.tag))};function ld(e,t){return Tu(e,t)}function bp(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _e(e,t,n,r){return new bp(e,t,n,r)}function ks(e){return e=e.prototype,!(!e||!e.isReactComponent)}function em(e){if(typeof e=="function")return ks(e)?1:0;if(e!=null){if(e=e.$$typeof,e===Bo)return 11;if(e===Ao)return 14}return 2}function St(e,t){var n=e.alternate;return n===null?(n=_e(e.tag,t,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=e.flags&14680064,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function nl(e,t,n,r,l,i){var o=2;if(r=e,typeof e=="function")ks(e)&&(o=1);else if(typeof e=="string")o=5;else e:switch(e){case Zt:return Bt(n.children,l,i,t);case Uo:o=8,l|=8;break;case Oi:return e=_e(12,n,t,l|2),e.elementType=Oi,e.lanes=i,e;case Ii:return e=_e(13,n,t,l),e.elementType=Ii,e.lanes=i,e;case $i:return e=_e(19,n,t,l),e.elementType=$i,e.lanes=i,e;case mu:return Ql(n,l,i,t);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case fu:o=10;break e;case pu:o=9;break e;case Bo:o=11;break e;case Ao:o=14;break e;case st:o=16,r=null;break e}throw Error(N(130,e==null?e:typeof e,""))}return t=_e(o,n,t,l),t.elementType=e,t.type=r,t.lanes=i,t}function Bt(e,t,n,r){return e=_e(7,e,r,t),e.lanes=n,e}function Ql(e,t,n,r){return e=_e(22,e,r,t),e.elementType=mu,e.lanes=n,e.stateNode={isHidden:!1},e}function Li(e,t,n){return e=_e(6,e,null,t),e.lanes=n,e}function Ri(e,t,n){return t=_e(4,e.children!==null?e.children:[],e.key,t),t.lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function tm(e,t,n,r,l){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=ci(0),this.expirationTimes=ci(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ci(0),this.identifierPrefix=r,this.onRecoverableError=l,this.mutableSourceEagerHydrationData=null}function Ss(e,t,n,r,l,i,o,s,a){return e=new tm(e,t,n,s,a),t===1?(t=1,i===!0&&(t|=8)):t=0,i=_e(3,null,null,t),e.current=i,i.stateNode=e,i.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},is(i),e}function nm(e,t,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Jt,key:r==null?null:""+r,children:e,containerInfo:t,implementation:n}}function id(e){if(!e)return Ct;e=e._reactInternals;e:{if(Yt(e)!==e||e.tag!==1)throw Error(N(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(ge(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(N(171))}if(e.tag===1){var n=e.type;if(ge(n))return ic(e,n,t)}return t}function od(e,t,n,r,l,i,o,s,a){return e=Ss(n,r,!0,e,l,i,o,s,a),e.context=id(null),n=e.current,r=ce(),l=kt(n),i=Je(r,l),i.callback=t??null,xt(n,i,l),e.current.lanes=l,xr(e,l,r),ve(e,r),e}function Kl(e,t,n,r){var l=t.current,i=ce(),o=kt(l);return n=id(n),t.context===null?t.context=n:t.pendingContext=n,t=Je(i,o),t.payload={element:e},r=r===void 0?null:r,r!==null&&(t.callback=r),e=xt(l,t,o),e!==null&&(De(e,l,o,i),Jr(e,l,o)),o}function _l(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function $a(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var n=e.retryLane;e.retryLane=n!==0&&n<t?n:t}}function Ns(e,t){$a(e,t),(e=e.alternate)&&$a(e,t)}function rm(){return null}var sd=typeof reportError=="function"?reportError:function(e){console.error(e)};function js(e){this._internalRoot=e}Yl.prototype.render=js.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(N(409));Kl(e,t,null,null)};Yl.prototype.unmount=js.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;Qt(function(){Kl(null,e,null,null)}),t[qe]=null}};function Yl(e){this._internalRoot=e}Yl.prototype.unstable_scheduleHydration=function(e){if(e){var t=Fu();e={blockedOn:null,target:e,priority:t};for(var n=0;n<ut.length&&t!==0&&t<ut[n].priority;n++);ut.splice(n,0,e),n===0&&Bu(e)}};function Cs(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function Xl(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function Da(){}function lm(e,t,n,r,l){if(l){if(typeof r=="function"){var i=r;r=function(){var c=_l(o);i.call(c)}}var o=od(t,r,e,0,null,!1,!1,"",Da);return e._reactRootContainer=o,e[qe]=o.current,sr(e.nodeType===8?e.parentNode:e),Qt(),o}for(;l=e.lastChild;)e.removeChild(l);if(typeof r=="function"){var s=r;r=function(){var c=_l(a);s.call(c)}}var a=Ss(e,0,!1,null,null,!1,!1,"",Da);return e._reactRootContainer=a,e[qe]=a.current,sr(e.nodeType===8?e.parentNode:e),Qt(function(){Kl(t,a,n,r)}),a}function Gl(e,t,n,r,l){var i=n._reactRootContainer;if(i){var o=i;if(typeof l=="function"){var s=l;l=function(){var a=_l(o);s.call(a)}}Kl(t,o,e,l)}else o=lm(n,t,e,l,r);return _l(o)}$u=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=An(t.pendingLanes);n!==0&&(Ho(t,n|1),ve(t,Y()),!(O&6)&&(kn=Y()+500,Pt()))}break;case 13:Qt(function(){var r=be(e,1);if(r!==null){var l=ce();De(r,e,1,l)}}),Ns(e,1)}};Qo=function(e){if(e.tag===13){var t=be(e,134217728);if(t!==null){var n=ce();De(t,e,134217728,n)}Ns(e,134217728)}};Du=function(e){if(e.tag===13){var t=kt(e),n=be(e,t);if(n!==null){var r=ce();De(n,e,t,r)}Ns(e,t)}};Fu=function(){return I};Uu=function(e,t){var n=I;try{return I=e,t()}finally{I=n}};Ki=function(e,t,n){switch(t){case"input":if(Ui(e,n),t=n.name,n.type==="radio"&&t!=null){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var l=Ul(r);if(!l)throw Error(N(90));gu(r),Ui(r,l)}}}break;case"textarea":yu(e,n);break;case"select":t=n.value,t!=null&&un(e,!!n.multiple,t,!1)}};Cu=ys;Eu=Qt;var im={usingClientEntryPoint:!1,Events:[kr,tn,Ul,Nu,ju,ys]},Fn={findFiberByHostInstance:$t,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},om={bundleType:Fn.bundleType,version:Fn.version,rendererPackageName:Fn.rendererPackageName,rendererConfig:Fn.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:nt.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=Lu(e),e===null?null:e.stateNode},findFiberByHostInstance:Fn.findFiberByHostInstance||rm,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Wr=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Wr.isDisabled&&Wr.supportsFiber)try{Il=Wr.inject(om),Ve=Wr}catch{}}Ne.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=im;Ne.createPortal=function(e,t){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Cs(t))throw Error(N(200));return nm(e,t,null,n)};Ne.createRoot=function(e,t){if(!Cs(e))throw Error(N(299));var n=!1,r="",l=sd;return t!=null&&(t.unstable_strictMode===!0&&(n=!0),t.identifierPrefix!==void 0&&(r=t.identifierPrefix),t.onRecoverableError!==void 0&&(l=t.onRecoverableError)),t=Ss(e,1,!1,null,null,n,!1,r,l),e[qe]=t.current,sr(e.nodeType===8?e.parentNode:e),new js(t)};Ne.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(N(188)):(e=Object.keys(e).join(","),Error(N(268,e)));return e=Lu(t),e=e===null?null:e.stateNode,e};Ne.flushSync=function(e){return Qt(e)};Ne.hydrate=function(e,t,n){if(!Xl(t))throw Error(N(200));return Gl(null,e,t,!0,n)};Ne.hydrateRoot=function(e,t,n){if(!Cs(e))throw Error(N(405));var r=n!=null&&n.hydratedSources||null,l=!1,i="",o=sd;if(n!=null&&(n.unstable_strictMode===!0&&(l=!0),n.identifierPrefix!==void 0&&(i=n.identifierPrefix),n.onRecoverableError!==void 0&&(o=n.onRecoverableError)),t=od(t,null,e,1,n??null,l,!1,i,o),e[qe]=t.current,sr(e),r)for(e=0;e<r.length;e++)n=r[e],l=n._getVersion,l=l(n._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[n,l]:t.mutableSourceEagerHydrationData.push(n,l);return new Yl(t)};Ne.render=function(e,t,n){if(!Xl(t))throw Error(N(200));return Gl(null,e,t,!1,n)};Ne.unmountComponentAtNode=function(e){if(!Xl(e))throw Error(N(40));return e._reactRootContainer?(Qt(function(){Gl(null,null,e,!1,function(){e._reactRootContainer=null,e[qe]=null})}),!0):!1};Ne.unstable_batchedUpdates=ys;Ne.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Xl(n))throw Error(N(200));if(e==null||e._reactInternals===void 0)throw Error(N(38));return Gl(e,t,n,!1,r)};Ne.version="18.3.1-next-f1338f8080-20240426";function ad(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(ad)}catch(e){console.error(e)}}ad(),au.exports=Ne;var sm=au.exports,Fa=sm;zi.createRoot=Fa.createRoot,zi.hydrateRoot=Fa.hydrateRoot;/**
 * @remix-run/router v1.23.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function gr(){return gr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},gr.apply(this,arguments)}var mt;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(mt||(mt={}));const Ua="popstate";function am(e){e===void 0&&(e={});function t(r,l){let{pathname:i,search:o,hash:s}=r.location;return Eo("",{pathname:i,search:o,hash:s},l.state&&l.state.usr||null,l.state&&l.state.key||"default")}function n(r,l){return typeof l=="string"?l:Pl(l)}return cm(t,n,null,e)}function V(e,t){if(e===!1||e===null||typeof e>"u")throw new Error(t)}function ud(e,t){if(!e){typeof console<"u"&&console.warn(t);try{throw new Error(t)}catch{}}}function um(){return Math.random().toString(36).substr(2,8)}function Ba(e,t){return{usr:e.state,key:e.key,idx:t}}function Eo(e,t,n,r){return n===void 0&&(n=null),gr({pathname:typeof e=="string"?e:e.pathname,search:"",hash:""},typeof t=="string"?_n(t):t,{state:n,key:t&&t.key||r||um()})}function Pl(e){let{pathname:t="/",search:n="",hash:r=""}=e;return n&&n!=="?"&&(t+=n.charAt(0)==="?"?n:"?"+n),r&&r!=="#"&&(t+=r.charAt(0)==="#"?r:"#"+r),t}function _n(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}function cm(e,t,n,r){r===void 0&&(r={});let{window:l=document.defaultView,v5Compat:i=!1}=r,o=l.history,s=mt.Pop,a=null,c=m();c==null&&(c=0,o.replaceState(gr({},o.state,{idx:c}),""));function m(){return(o.state||{idx:null}).idx}function f(){s=mt.Pop;let w=m(),p=w==null?null:w-c;c=w,a&&a({action:s,location:S.location,delta:p})}function g(w,p){s=mt.Push;let d=Eo(S.location,w,p);n&&n(d,w),c=m()+1;let h=Ba(d,c),x=S.createHref(d);try{o.pushState(h,"",x)}catch(j){if(j instanceof DOMException&&j.name==="DataCloneError")throw j;l.location.assign(x)}i&&a&&a({action:s,location:S.location,delta:1})}function y(w,p){s=mt.Replace;let d=Eo(S.location,w,p);n&&n(d,w),c=m();let h=Ba(d,c),x=S.createHref(d);o.replaceState(h,"",x),i&&a&&a({action:s,location:S.location,delta:0})}function k(w){let p=l.location.origin!=="null"?l.location.origin:l.location.href,d=typeof w=="string"?w:Pl(w);return d=d.replace(/ $/,"%20"),V(p,"No window.location.(origin|href) available to create URL for href: "+d),new URL(d,p)}let S={get action(){return s},get location(){return e(l,o)},listen(w){if(a)throw new Error("A history only accepts one active listener");return l.addEventListener(Ua,f),a=w,()=>{l.removeEventListener(Ua,f),a=null}},createHref(w){return t(l,w)},createURL:k,encodeLocation(w){let p=k(w);return{pathname:p.pathname,search:p.search,hash:p.hash}},push:g,replace:y,go(w){return o.go(w)}};return S}var Aa;(function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"})(Aa||(Aa={}));function dm(e,t,n){return n===void 0&&(n="/"),fm(e,t,n,!1)}function fm(e,t,n,r){let l=typeof t=="string"?_n(t):t,i=Sn(l.pathname||"/",n);if(i==null)return null;let o=cd(e);pm(o);let s=null;for(let a=0;s==null&&a<o.length;++a){let c=jm(i);s=Sm(o[a],c,r)}return s}function cd(e,t,n,r){t===void 0&&(t=[]),n===void 0&&(n=[]),r===void 0&&(r="");let l=(i,o,s)=>{let a={relativePath:s===void 0?i.path||"":s,caseSensitive:i.caseSensitive===!0,childrenIndex:o,route:i};a.relativePath.startsWith("/")&&(V(a.relativePath.startsWith(r),'Absolute route path "'+a.relativePath+'" nested under path '+('"'+r+'" is not valid. An absolute child route path ')+"must start with the combined path of all its parent routes."),a.relativePath=a.relativePath.slice(r.length));let c=Nt([r,a.relativePath]),m=n.concat(a);i.children&&i.children.length>0&&(V(i.index!==!0,"Index routes must not have child routes. Please remove "+('all child routes from route path "'+c+'".')),cd(i.children,t,m,c)),!(i.path==null&&!i.index)&&t.push({path:c,score:wm(c,i.index),routesMeta:m})};return e.forEach((i,o)=>{var s;if(i.path===""||!((s=i.path)!=null&&s.includes("?")))l(i,o);else for(let a of dd(i.path))l(i,o,a)}),t}function dd(e){let t=e.split("/");if(t.length===0)return[];let[n,...r]=t,l=n.endsWith("?"),i=n.replace(/\?$/,"");if(r.length===0)return l?[i,""]:[i];let o=dd(r.join("/")),s=[];return s.push(...o.map(a=>a===""?i:[i,a].join("/"))),l&&s.push(...o),s.map(a=>e.startsWith("/")&&a===""?"/":a)}function pm(e){e.sort((t,n)=>t.score!==n.score?n.score-t.score:km(t.routesMeta.map(r=>r.childrenIndex),n.routesMeta.map(r=>r.childrenIndex)))}const mm=/^:[\w-]+$/,hm=3,gm=2,vm=1,ym=10,xm=-2,Wa=e=>e==="*";function wm(e,t){let n=e.split("/"),r=n.length;return n.some(Wa)&&(r+=xm),t&&(r+=gm),n.filter(l=>!Wa(l)).reduce((l,i)=>l+(mm.test(i)?hm:i===""?vm:ym),r)}function km(e,t){return e.length===t.length&&e.slice(0,-1).every((r,l)=>r===t[l])?e[e.length-1]-t[t.length-1]:0}function Sm(e,t,n){n===void 0&&(n=!1);let{routesMeta:r}=e,l={},i="/",o=[];for(let s=0;s<r.length;++s){let a=r[s],c=s===r.length-1,m=i==="/"?t:t.slice(i.length)||"/",f=Ll({path:a.relativePath,caseSensitive:a.caseSensitive,end:c},m),g=a.route;if(!f&&c&&n&&!r[r.length-1].route.index&&(f=Ll({path:a.relativePath,caseSensitive:a.caseSensitive,end:!1},m)),!f)return null;Object.assign(l,f.params),o.push({params:l,pathname:Nt([i,f.pathname]),pathnameBase:Pm(Nt([i,f.pathnameBase])),route:g}),f.pathnameBase!=="/"&&(i=Nt([i,f.pathnameBase]))}return o}function Ll(e,t){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[n,r]=Nm(e.path,e.caseSensitive,e.end),l=t.match(n);if(!l)return null;let i=l[0],o=i.replace(/(.)\/+$/,"$1"),s=l.slice(1);return{params:r.reduce((c,m,f)=>{let{paramName:g,isOptional:y}=m;if(g==="*"){let S=s[f]||"";o=i.slice(0,i.length-S.length).replace(/(.)\/+$/,"$1")}const k=s[f];return y&&!k?c[g]=void 0:c[g]=(k||"").replace(/%2F/g,"/"),c},{}),pathname:i,pathnameBase:o,pattern:e}}function Nm(e,t,n){t===void 0&&(t=!1),n===void 0&&(n=!0),ud(e==="*"||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were '+('"'+e.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+e.replace(/\*$/,"/*")+'".'));let r=[],l="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(o,s,a)=>(r.push({paramName:s,isOptional:a!=null}),a?"/?([^\\/]+)?":"/([^\\/]+)"));return e.endsWith("*")?(r.push({paramName:"*"}),l+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?l+="\\/*$":e!==""&&e!=="/"&&(l+="(?:(?=\\/|$))"),[new RegExp(l,t?void 0:"i"),r]}function jm(e){try{return e.split("/").map(t=>decodeURIComponent(t).replace(/\//g,"%2F")).join("/")}catch(t){return ud(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+("encoding ("+t+").")),e}}function Sn(e,t){if(t==="/")return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,r=e.charAt(n);return r&&r!=="/"?null:e.slice(n)||"/"}function Cm(e,t){t===void 0&&(t="/");let{pathname:n,search:r="",hash:l=""}=typeof e=="string"?_n(e):e;return{pathname:n?n.startsWith("/")?n:Em(n,t):t,search:Lm(r),hash:Rm(l)}}function Em(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach(l=>{l===".."?n.length>1&&n.pop():l!=="."&&n.push(l)}),n.length>1?n.join("/"):"/"}function Ti(e,t,n,r){return"Cannot include a '"+e+"' character in a manually specified "+("`to."+t+"` field ["+JSON.stringify(r)+"].  Please separate it out to the ")+("`to."+n+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function _m(e){return e.filter((t,n)=>n===0||t.route.path&&t.route.path.length>0)}function Es(e,t){let n=_m(e);return t?n.map((r,l)=>l===n.length-1?r.pathname:r.pathnameBase):n.map(r=>r.pathnameBase)}function _s(e,t,n,r){r===void 0&&(r=!1);let l;typeof e=="string"?l=_n(e):(l=gr({},e),V(!l.pathname||!l.pathname.includes("?"),Ti("?","pathname","search",l)),V(!l.pathname||!l.pathname.includes("#"),Ti("#","pathname","hash",l)),V(!l.search||!l.search.includes("#"),Ti("#","search","hash",l)));let i=e===""||l.pathname==="",o=i?"/":l.pathname,s;if(o==null)s=n;else{let f=t.length-1;if(!r&&o.startsWith("..")){let g=o.split("/");for(;g[0]==="..";)g.shift(),f-=1;l.pathname=g.join("/")}s=f>=0?t[f]:"/"}let a=Cm(l,s),c=o&&o!=="/"&&o.endsWith("/"),m=(i||o===".")&&n.endsWith("/");return!a.pathname.endsWith("/")&&(c||m)&&(a.pathname+="/"),a}const Nt=e=>e.join("/").replace(/\/\/+/g,"/"),Pm=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),Lm=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,Rm=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e;function Tm(e){return e!=null&&typeof e.status=="number"&&typeof e.statusText=="string"&&typeof e.internal=="boolean"&&"data"in e}const fd=["post","put","patch","delete"];new Set(fd);const zm=["get",...fd];new Set(zm);/**
 * React Router v6.30.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function vr(){return vr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},vr.apply(this,arguments)}const Jl=v.createContext(null),pd=v.createContext(null),rt=v.createContext(null),Zl=v.createContext(null),lt=v.createContext({outlet:null,matches:[],isDataRoute:!1}),md=v.createContext(null);function Mm(e,t){let{relative:n}=t===void 0?{}:t;Pn()||V(!1);let{basename:r,navigator:l}=v.useContext(rt),{hash:i,pathname:o,search:s}=ql(e,{relative:n}),a=o;return r!=="/"&&(a=o==="/"?r:Nt([r,o])),l.createHref({pathname:a,search:s,hash:i})}function Pn(){return v.useContext(Zl)!=null}function Xt(){return Pn()||V(!1),v.useContext(Zl).location}function hd(e){v.useContext(rt).static||v.useLayoutEffect(e)}function Lt(){let{isDataRoute:e}=v.useContext(lt);return e?Km():Om()}function Om(){Pn()||V(!1);let e=v.useContext(Jl),{basename:t,future:n,navigator:r}=v.useContext(rt),{matches:l}=v.useContext(lt),{pathname:i}=Xt(),o=JSON.stringify(Es(l,n.v7_relativeSplatPath)),s=v.useRef(!1);return hd(()=>{s.current=!0}),v.useCallback(function(c,m){if(m===void 0&&(m={}),!s.current)return;if(typeof c=="number"){r.go(c);return}let f=_s(c,JSON.parse(o),i,m.relative==="path");e==null&&t!=="/"&&(f.pathname=f.pathname==="/"?t:Nt([t,f.pathname])),(m.replace?r.replace:r.push)(f,m.state,m)},[t,r,o,i,e])}function gd(){let{matches:e}=v.useContext(lt),t=e[e.length-1];return t?t.params:{}}function ql(e,t){let{relative:n}=t===void 0?{}:t,{future:r}=v.useContext(rt),{matches:l}=v.useContext(lt),{pathname:i}=Xt(),o=JSON.stringify(Es(l,r.v7_relativeSplatPath));return v.useMemo(()=>_s(e,JSON.parse(o),i,n==="path"),[e,o,i,n])}function Im(e,t){return $m(e,t)}function $m(e,t,n,r){Pn()||V(!1);let{navigator:l}=v.useContext(rt),{matches:i}=v.useContext(lt),o=i[i.length-1],s=o?o.params:{};o&&o.pathname;let a=o?o.pathnameBase:"/";o&&o.route;let c=Xt(),m;if(t){var f;let w=typeof t=="string"?_n(t):t;a==="/"||(f=w.pathname)!=null&&f.startsWith(a)||V(!1),m=w}else m=c;let g=m.pathname||"/",y=g;if(a!=="/"){let w=a.replace(/^\//,"").split("/");y="/"+g.replace(/^\//,"").split("/").slice(w.length).join("/")}let k=dm(e,{pathname:y}),S=Am(k&&k.map(w=>Object.assign({},w,{params:Object.assign({},s,w.params),pathname:Nt([a,l.encodeLocation?l.encodeLocation(w.pathname).pathname:w.pathname]),pathnameBase:w.pathnameBase==="/"?a:Nt([a,l.encodeLocation?l.encodeLocation(w.pathnameBase).pathname:w.pathnameBase])})),i,n,r);return t&&S?v.createElement(Zl.Provider,{value:{location:vr({pathname:"/",search:"",hash:"",state:null,key:"default"},m),navigationType:mt.Pop}},S):S}function Dm(){let e=Qm(),t=Tm(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,l={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"},i=null;return v.createElement(v.Fragment,null,v.createElement("h2",null,"Unexpected Application Error!"),v.createElement("h3",{style:{fontStyle:"italic"}},t),n?v.createElement("pre",{style:l},n):null,i)}const Fm=v.createElement(Dm,null);class Um extends v.Component{constructor(t){super(t),this.state={location:t.location,revalidation:t.revalidation,error:t.error}}static getDerivedStateFromError(t){return{error:t}}static getDerivedStateFromProps(t,n){return n.location!==t.location||n.revalidation!=="idle"&&t.revalidation==="idle"?{error:t.error,location:t.location,revalidation:t.revalidation}:{error:t.error!==void 0?t.error:n.error,location:n.location,revalidation:t.revalidation||n.revalidation}}componentDidCatch(t,n){console.error("React Router caught the following error during render",t,n)}render(){return this.state.error!==void 0?v.createElement(lt.Provider,{value:this.props.routeContext},v.createElement(md.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function Bm(e){let{routeContext:t,match:n,children:r}=e,l=v.useContext(Jl);return l&&l.static&&l.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(l.staticContext._deepestRenderedBoundaryId=n.route.id),v.createElement(lt.Provider,{value:t},r)}function Am(e,t,n,r){var l;if(t===void 0&&(t=[]),n===void 0&&(n=null),r===void 0&&(r=null),e==null){var i;if(!n)return null;if(n.errors)e=n.matches;else if((i=r)!=null&&i.v7_partialHydration&&t.length===0&&!n.initialized&&n.matches.length>0)e=n.matches;else return null}let o=e,s=(l=n)==null?void 0:l.errors;if(s!=null){let m=o.findIndex(f=>f.route.id&&(s==null?void 0:s[f.route.id])!==void 0);m>=0||V(!1),o=o.slice(0,Math.min(o.length,m+1))}let a=!1,c=-1;if(n&&r&&r.v7_partialHydration)for(let m=0;m<o.length;m++){let f=o[m];if((f.route.HydrateFallback||f.route.hydrateFallbackElement)&&(c=m),f.route.id){let{loaderData:g,errors:y}=n,k=f.route.loader&&g[f.route.id]===void 0&&(!y||y[f.route.id]===void 0);if(f.route.lazy||k){a=!0,c>=0?o=o.slice(0,c+1):o=[o[0]];break}}}return o.reduceRight((m,f,g)=>{let y,k=!1,S=null,w=null;n&&(y=s&&f.route.id?s[f.route.id]:void 0,S=f.route.errorElement||Fm,a&&(c<0&&g===0?(Ym("route-fallback",!1),k=!0,w=null):c===g&&(k=!0,w=f.route.hydrateFallbackElement||null)));let p=t.concat(o.slice(0,g+1)),d=()=>{let h;return y?h=S:k?h=w:f.route.Component?h=v.createElement(f.route.Component,null):f.route.element?h=f.route.element:h=m,v.createElement(Bm,{match:f,routeContext:{outlet:m,matches:p,isDataRoute:n!=null},children:h})};return n&&(f.route.ErrorBoundary||f.route.errorElement||g===0)?v.createElement(Um,{location:n.location,revalidation:n.revalidation,component:S,error:y,children:d(),routeContext:{outlet:null,matches:p,isDataRoute:!0}}):d()},null)}var vd=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(vd||{}),Rl=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(Rl||{});function Wm(e){let t=v.useContext(Jl);return t||V(!1),t}function Vm(e){let t=v.useContext(pd);return t||V(!1),t}function Hm(e){let t=v.useContext(lt);return t||V(!1),t}function yd(e){let t=Hm(),n=t.matches[t.matches.length-1];return n.route.id||V(!1),n.route.id}function Qm(){var e;let t=v.useContext(md),n=Vm(Rl.UseRouteError),r=yd(Rl.UseRouteError);return t!==void 0?t:(e=n.errors)==null?void 0:e[r]}function Km(){let{router:e}=Wm(vd.UseNavigateStable),t=yd(Rl.UseNavigateStable),n=v.useRef(!1);return hd(()=>{n.current=!0}),v.useCallback(function(l,i){i===void 0&&(i={}),n.current&&(typeof l=="number"?e.navigate(l):e.navigate(l,vr({fromRouteId:t},i)))},[e,t])}const Va={};function Ym(e,t,n){!t&&!Va[e]&&(Va[e]=!0)}function Xm(e,t){e==null||e.v7_startTransition,(e==null?void 0:e.v7_relativeSplatPath)===void 0&&(!t||t.v7_relativeSplatPath),t&&(t.v7_fetcherPersist,t.v7_normalizeFormMethod,t.v7_partialHydration,t.v7_skipActionErrorRevalidation)}function Gm(e){let{to:t,replace:n,state:r,relative:l}=e;Pn()||V(!1);let{future:i,static:o}=v.useContext(rt),{matches:s}=v.useContext(lt),{pathname:a}=Xt(),c=Lt(),m=_s(t,Es(s,i.v7_relativeSplatPath),a,l==="path"),f=JSON.stringify(m);return v.useEffect(()=>c(JSON.parse(f),{replace:n,state:r,relative:l}),[c,f,l,n,r]),null}function ot(e){V(!1)}function Jm(e){let{basename:t="/",children:n=null,location:r,navigationType:l=mt.Pop,navigator:i,static:o=!1,future:s}=e;Pn()&&V(!1);let a=t.replace(/^\/*/,"/"),c=v.useMemo(()=>({basename:a,navigator:i,static:o,future:vr({v7_relativeSplatPath:!1},s)}),[a,s,i,o]);typeof r=="string"&&(r=_n(r));let{pathname:m="/",search:f="",hash:g="",state:y=null,key:k="default"}=r,S=v.useMemo(()=>{let w=Sn(m,a);return w==null?null:{location:{pathname:w,search:f,hash:g,state:y,key:k},navigationType:l}},[a,m,f,g,y,k,l]);return S==null?null:v.createElement(rt.Provider,{value:c},v.createElement(Zl.Provider,{children:n,value:S}))}function Zm(e){let{children:t,location:n}=e;return Im(_o(t),n)}new Promise(()=>{});function _o(e,t){t===void 0&&(t=[]);let n=[];return v.Children.forEach(e,(r,l)=>{if(!v.isValidElement(r))return;let i=[...t,l];if(r.type===v.Fragment){n.push.apply(n,_o(r.props.children,i));return}r.type!==ot&&V(!1),!r.props.index||!r.props.children||V(!1);let o={id:r.props.id||i.join("-"),caseSensitive:r.props.caseSensitive,element:r.props.element,Component:r.props.Component,index:r.props.index,path:r.props.path,loader:r.props.loader,action:r.props.action,errorElement:r.props.errorElement,ErrorBoundary:r.props.ErrorBoundary,hasErrorBoundary:r.props.ErrorBoundary!=null||r.props.errorElement!=null,shouldRevalidate:r.props.shouldRevalidate,handle:r.props.handle,lazy:r.props.lazy};r.props.children&&(o.children=_o(r.props.children,i)),n.push(o)}),n}/**
 * React Router DOM v6.30.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function Tl(){return Tl=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Tl.apply(this,arguments)}function xd(e,t){if(e==null)return{};var n={},r=Object.keys(e),l,i;for(i=0;i<r.length;i++)l=r[i],!(t.indexOf(l)>=0)&&(n[l]=e[l]);return n}function qm(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}function bm(e,t){return e.button===0&&(!t||t==="_self")&&!qm(e)}const eh=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","viewTransition"],th=["aria-current","caseSensitive","className","end","style","to","viewTransition","children"],nh="6";try{window.__reactRouterVersion=nh}catch{}const rh=v.createContext({isTransitioning:!1}),lh="startTransition",Ha=Gd[lh];function ih(e){let{basename:t,children:n,future:r,window:l}=e,i=v.useRef();i.current==null&&(i.current=am({window:l,v5Compat:!0}));let o=i.current,[s,a]=v.useState({action:o.action,location:o.location}),{v7_startTransition:c}=r||{},m=v.useCallback(f=>{c&&Ha?Ha(()=>a(f)):a(f)},[a,c]);return v.useLayoutEffect(()=>o.listen(m),[o,m]),v.useEffect(()=>Xm(r),[r]),v.createElement(Jm,{basename:t,children:n,location:s.location,navigationType:s.action,navigator:o,future:r})}const oh=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u",sh=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,ah=v.forwardRef(function(t,n){let{onClick:r,relative:l,reloadDocument:i,replace:o,state:s,target:a,to:c,preventScrollReset:m,viewTransition:f}=t,g=xd(t,eh),{basename:y}=v.useContext(rt),k,S=!1;if(typeof c=="string"&&sh.test(c)&&(k=c,oh))try{let h=new URL(window.location.href),x=c.startsWith("//")?new URL(h.protocol+c):new URL(c),j=Sn(x.pathname,y);x.origin===h.origin&&j!=null?c=j+x.search+x.hash:S=!0}catch{}let w=Mm(c,{relative:l}),p=dh(c,{replace:o,state:s,target:a,preventScrollReset:m,relative:l,viewTransition:f});function d(h){r&&r(h),h.defaultPrevented||p(h)}return v.createElement("a",Tl({},g,{href:k||w,onClick:S||i?r:d,ref:n,target:a}))}),uh=v.forwardRef(function(t,n){let{"aria-current":r="page",caseSensitive:l=!1,className:i="",end:o=!1,style:s,to:a,viewTransition:c,children:m}=t,f=xd(t,th),g=ql(a,{relative:f.relative}),y=Xt(),k=v.useContext(pd),{navigator:S,basename:w}=v.useContext(rt),p=k!=null&&fh(g)&&c===!0,d=S.encodeLocation?S.encodeLocation(g).pathname:g.pathname,h=y.pathname,x=k&&k.navigation&&k.navigation.location?k.navigation.location.pathname:null;l||(h=h.toLowerCase(),x=x?x.toLowerCase():null,d=d.toLowerCase()),x&&w&&(x=Sn(x,w)||x);const j=d!=="/"&&d.endsWith("/")?d.length-1:d.length;let _=h===d||!o&&h.startsWith(d)&&h.charAt(j)==="/",P=x!=null&&(x===d||!o&&x.startsWith(d)&&x.charAt(d.length)==="/"),L={isActive:_,isPending:P,isTransitioning:p},B=_?r:void 0,T;typeof i=="function"?T=i(L):T=[i,_?"active":null,P?"pending":null,p?"transitioning":null].filter(Boolean).join(" ");let ye=typeof s=="function"?s(L):s;return v.createElement(ah,Tl({},f,{"aria-current":B,className:T,ref:n,style:ye,to:a,viewTransition:c}),typeof m=="function"?m(L):m)});var Po;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(Po||(Po={}));var Qa;(function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"})(Qa||(Qa={}));function ch(e){let t=v.useContext(Jl);return t||V(!1),t}function dh(e,t){let{target:n,replace:r,state:l,preventScrollReset:i,relative:o,viewTransition:s}=t===void 0?{}:t,a=Lt(),c=Xt(),m=ql(e,{relative:o});return v.useCallback(f=>{if(bm(f,n)){f.preventDefault();let g=r!==void 0?r:Pl(c)===Pl(m);a(e,{replace:g,state:l,preventScrollReset:i,relative:o,viewTransition:s})}},[c,a,m,r,l,n,e,i,o,s])}function fh(e,t){t===void 0&&(t={});let n=v.useContext(rh);n==null&&V(!1);let{basename:r}=ch(Po.useViewTransitionState),l=ql(e,{relative:t.relative});if(!n.isTransitioning)return!1;let i=Sn(n.currentLocation.pathname,r)||n.currentLocation.pathname,o=Sn(n.nextLocation.pathname,r)||n.nextLocation.pathname;return Ll(l.pathname,o)!=null||Ll(l.pathname,i)!=null}let ph={data:""},mh=e=>typeof window=="object"?((e?e.querySelector("#_goober"):window._goober)||Object.assign((e||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:e||ph,hh=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,gh=/\/\*[^]*?\*\/|  +/g,Ka=/\n+/g,dt=(e,t)=>{let n="",r="",l="";for(let i in e){let o=e[i];i[0]=="@"?i[1]=="i"?n=i+" "+o+";":r+=i[1]=="f"?dt(o,i):i+"{"+dt(o,i[1]=="k"?"":t)+"}":typeof o=="object"?r+=dt(o,t?t.replace(/([^,])+/g,s=>i.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g,a=>/&/.test(a)?a.replace(/&/g,s):s?s+" "+a:a)):i):o!=null&&(i=/^--/.test(i)?i:i.replace(/[A-Z]/g,"-$&").toLowerCase(),l+=dt.p?dt.p(i,o):i+":"+o+";")}return n+(t&&l?t+"{"+l+"}":l)+r},Qe={},wd=e=>{if(typeof e=="object"){let t="";for(let n in e)t+=n+wd(e[n]);return t}return e},vh=(e,t,n,r,l)=>{let i=wd(e),o=Qe[i]||(Qe[i]=(a=>{let c=0,m=11;for(;c<a.length;)m=101*m+a.charCodeAt(c++)>>>0;return"go"+m})(i));if(!Qe[o]){let a=i!==e?e:(c=>{let m,f,g=[{}];for(;m=hh.exec(c.replace(gh,""));)m[4]?g.shift():m[3]?(f=m[3].replace(Ka," ").trim(),g.unshift(g[0][f]=g[0][f]||{})):g[0][m[1]]=m[2].replace(Ka," ").trim();return g[0]})(e);Qe[o]=dt(l?{["@keyframes "+o]:a}:a,n?"":"."+o)}let s=n&&Qe.g?Qe.g:null;return n&&(Qe.g=Qe[o]),((a,c,m,f)=>{f?c.data=c.data.replace(f,a):c.data.indexOf(a)===-1&&(c.data=m?a+c.data:c.data+a)})(Qe[o],t,r,s),o},yh=(e,t,n)=>e.reduce((r,l,i)=>{let o=t[i];if(o&&o.call){let s=o(n),a=s&&s.props&&s.props.className||/^go/.test(s)&&s;o=a?"."+a:s&&typeof s=="object"?s.props?"":dt(s,""):s===!1?"":s}return r+l+(o??"")},"");function bl(e){let t=this||{},n=e.call?e(t.p):e;return vh(n.unshift?n.raw?yh(n,[].slice.call(arguments,1),t.p):n.reduce((r,l)=>Object.assign(r,l&&l.call?l(t.p):l),{}):n,mh(t.target),t.g,t.o,t.k)}let kd,Lo,Ro;bl.bind({g:1});let tt=bl.bind({k:1});function xh(e,t,n,r){dt.p=t,kd=e,Lo=n,Ro=r}function Rt(e,t){let n=this||{};return function(){let r=arguments;function l(i,o){let s=Object.assign({},i),a=s.className||l.className;n.p=Object.assign({theme:Lo&&Lo()},s),n.o=/ *go\d+/.test(a),s.className=bl.apply(n,r)+(a?" "+a:""),t&&(s.ref=o);let c=e;return e[0]&&(c=s.as||e,delete s.as),Ro&&c[0]&&Ro(s),kd(c,s)}return t?t(l):l}}var wh=e=>typeof e=="function",zl=(e,t)=>wh(e)?e(t):e,kh=(()=>{let e=0;return()=>(++e).toString()})(),Sd=(()=>{let e;return()=>{if(e===void 0&&typeof window<"u"){let t=matchMedia("(prefers-reduced-motion: reduce)");e=!t||t.matches}return e}})(),Sh=20,Ps="default",Nd=(e,t)=>{let{toastLimit:n}=e.settings;switch(t.type){case 0:return{...e,toasts:[t.toast,...e.toasts].slice(0,n)};case 1:return{...e,toasts:e.toasts.map(o=>o.id===t.toast.id?{...o,...t.toast}:o)};case 2:let{toast:r}=t;return Nd(e,{type:e.toasts.find(o=>o.id===r.id)?1:0,toast:r});case 3:let{toastId:l}=t;return{...e,toasts:e.toasts.map(o=>o.id===l||l===void 0?{...o,dismissed:!0,visible:!1}:o)};case 4:return t.toastId===void 0?{...e,toasts:[]}:{...e,toasts:e.toasts.filter(o=>o.id!==t.toastId)};case 5:return{...e,pausedAt:t.time};case 6:let i=t.time-(e.pausedAt||0);return{...e,pausedAt:void 0,toasts:e.toasts.map(o=>({...o,pauseDuration:o.pauseDuration+i}))}}},rl=[],jd={toasts:[],pausedAt:void 0,settings:{toastLimit:Sh}},We={},Cd=(e,t=Ps)=>{We[t]=Nd(We[t]||jd,e),rl.forEach(([n,r])=>{n===t&&r(We[t])})},Ed=e=>Object.keys(We).forEach(t=>Cd(e,t)),Nh=e=>Object.keys(We).find(t=>We[t].toasts.some(n=>n.id===e)),ei=(e=Ps)=>t=>{Cd(t,e)},jh={blank:4e3,error:4e3,success:2e3,loading:1/0,custom:4e3},Ch=(e={},t=Ps)=>{let[n,r]=v.useState(We[t]||jd),l=v.useRef(We[t]);v.useEffect(()=>(l.current!==We[t]&&r(We[t]),rl.push([t,r]),()=>{let o=rl.findIndex(([s])=>s===t);o>-1&&rl.splice(o,1)}),[t]);let i=n.toasts.map(o=>{var s,a,c;return{...e,...e[o.type],...o,removeDelay:o.removeDelay||((s=e[o.type])==null?void 0:s.removeDelay)||(e==null?void 0:e.removeDelay),duration:o.duration||((a=e[o.type])==null?void 0:a.duration)||(e==null?void 0:e.duration)||jh[o.type],style:{...e.style,...(c=e[o.type])==null?void 0:c.style,...o.style}}});return{...n,toasts:i}},Eh=(e,t="blank",n)=>({createdAt:Date.now(),visible:!0,dismissed:!1,type:t,ariaProps:{role:"status","aria-live":"polite"},message:e,pauseDuration:0,...n,id:(n==null?void 0:n.id)||kh()}),Nr=e=>(t,n)=>{let r=Eh(t,e,n);return ei(r.toasterId||Nh(r.id))({type:2,toast:r}),r.id},J=(e,t)=>Nr("blank")(e,t);J.error=Nr("error");J.success=Nr("success");J.loading=Nr("loading");J.custom=Nr("custom");J.dismiss=(e,t)=>{let n={type:3,toastId:e};t?ei(t)(n):Ed(n)};J.dismissAll=e=>J.dismiss(void 0,e);J.remove=(e,t)=>{let n={type:4,toastId:e};t?ei(t)(n):Ed(n)};J.removeAll=e=>J.remove(void 0,e);J.promise=(e,t,n)=>{let r=J.loading(t.loading,{...n,...n==null?void 0:n.loading});return typeof e=="function"&&(e=e()),e.then(l=>{let i=t.success?zl(t.success,l):void 0;return i?J.success(i,{id:r,...n,...n==null?void 0:n.success}):J.dismiss(r),l}).catch(l=>{let i=t.error?zl(t.error,l):void 0;i?J.error(i,{id:r,...n,...n==null?void 0:n.error}):J.dismiss(r)}),e};var _h=1e3,Ph=(e,t="default")=>{let{toasts:n,pausedAt:r}=Ch(e,t),l=v.useRef(new Map).current,i=v.useCallback((f,g=_h)=>{if(l.has(f))return;let y=setTimeout(()=>{l.delete(f),o({type:4,toastId:f})},g);l.set(f,y)},[]);v.useEffect(()=>{if(r)return;let f=Date.now(),g=n.map(y=>{if(y.duration===1/0)return;let k=(y.duration||0)+y.pauseDuration-(f-y.createdAt);if(k<0){y.visible&&J.dismiss(y.id);return}return setTimeout(()=>J.dismiss(y.id,t),k)});return()=>{g.forEach(y=>y&&clearTimeout(y))}},[n,r,t]);let o=v.useCallback(ei(t),[t]),s=v.useCallback(()=>{o({type:5,time:Date.now()})},[o]),a=v.useCallback((f,g)=>{o({type:1,toast:{id:f,height:g}})},[o]),c=v.useCallback(()=>{r&&o({type:6,time:Date.now()})},[r,o]),m=v.useCallback((f,g)=>{let{reverseOrder:y=!1,gutter:k=8,defaultPosition:S}=g||{},w=n.filter(h=>(h.position||S)===(f.position||S)&&h.height),p=w.findIndex(h=>h.id===f.id),d=w.filter((h,x)=>x<p&&h.visible).length;return w.filter(h=>h.visible).slice(...y?[d+1]:[0,d]).reduce((h,x)=>h+(x.height||0)+k,0)},[n]);return v.useEffect(()=>{n.forEach(f=>{if(f.dismissed)i(f.id,f.removeDelay);else{let g=l.get(f.id);g&&(clearTimeout(g),l.delete(f.id))}})},[n,i]),{toasts:n,handlers:{updateHeight:a,startPause:s,endPause:c,calculateOffset:m}}},Lh=tt`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
 transform: scale(1) rotate(45deg);
  opacity: 1;
}`,Rh=tt`
from {
  transform: scale(0);
  opacity: 0;
}
to {
  transform: scale(1);
  opacity: 1;
}`,Th=tt`
from {
  transform: scale(0) rotate(90deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(90deg);
	opacity: 1;
}`,zh=Rt("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${e=>e.primary||"#ff4b4b"};
  position: relative;
  transform: rotate(45deg);

  animation: ${Lh} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;

  &:after,
  &:before {
    content: '';
    animation: ${Rh} 0.15s ease-out forwards;
    animation-delay: 150ms;
    position: absolute;
    border-radius: 3px;
    opacity: 0;
    background: ${e=>e.secondary||"#fff"};
    bottom: 9px;
    left: 4px;
    height: 2px;
    width: 12px;
  }

  &:before {
    animation: ${Th} 0.15s ease-out forwards;
    animation-delay: 180ms;
    transform: rotate(90deg);
  }
`,Mh=tt`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`,Oh=Rt("div")`
  width: 12px;
  height: 12px;
  box-sizing: border-box;
  border: 2px solid;
  border-radius: 100%;
  border-color: ${e=>e.secondary||"#e0e0e0"};
  border-right-color: ${e=>e.primary||"#616161"};
  animation: ${Mh} 1s linear infinite;
`,Ih=tt`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(45deg);
	opacity: 1;
}`,$h=tt`
0% {
	height: 0;
	width: 0;
	opacity: 0;
}
40% {
  height: 0;
	width: 6px;
	opacity: 1;
}
100% {
  opacity: 1;
  height: 10px;
}`,Dh=Rt("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${e=>e.primary||"#61d345"};
  position: relative;
  transform: rotate(45deg);

  animation: ${Ih} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;
  &:after {
    content: '';
    box-sizing: border-box;
    animation: ${$h} 0.2s ease-out forwards;
    opacity: 0;
    animation-delay: 200ms;
    position: absolute;
    border-right: 2px solid;
    border-bottom: 2px solid;
    border-color: ${e=>e.secondary||"#fff"};
    bottom: 6px;
    left: 6px;
    height: 10px;
    width: 6px;
  }
`,Fh=Rt("div")`
  position: absolute;
`,Uh=Rt("div")`
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 20px;
  min-height: 20px;
`,Bh=tt`
from {
  transform: scale(0.6);
  opacity: 0.4;
}
to {
  transform: scale(1);
  opacity: 1;
}`,Ah=Rt("div")`
  position: relative;
  transform: scale(0.6);
  opacity: 0.4;
  min-width: 20px;
  animation: ${Bh} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
`,Wh=({toast:e})=>{let{icon:t,type:n,iconTheme:r}=e;return t!==void 0?typeof t=="string"?v.createElement(Ah,null,t):t:n==="blank"?null:v.createElement(Uh,null,v.createElement(Oh,{...r}),n!=="loading"&&v.createElement(Fh,null,n==="error"?v.createElement(zh,{...r}):v.createElement(Dh,{...r})))},Vh=e=>`
0% {transform: translate3d(0,${e*-200}%,0) scale(.6); opacity:.5;}
100% {transform: translate3d(0,0,0) scale(1); opacity:1;}
`,Hh=e=>`
0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}
100% {transform: translate3d(0,${e*-150}%,-1px) scale(.6); opacity:0;}
`,Qh="0%{opacity:0;} 100%{opacity:1;}",Kh="0%{opacity:1;} 100%{opacity:0;}",Yh=Rt("div")`
  display: flex;
  align-items: center;
  background: #fff;
  color: #363636;
  line-height: 1.3;
  will-change: transform;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);
  max-width: 350px;
  pointer-events: auto;
  padding: 8px 10px;
  border-radius: 8px;
`,Xh=Rt("div")`
  display: flex;
  justify-content: center;
  margin: 4px 10px;
  color: inherit;
  flex: 1 1 auto;
  white-space: pre-line;
`,Gh=(e,t)=>{let n=e.includes("top")?1:-1,[r,l]=Sd()?[Qh,Kh]:[Vh(n),Hh(n)];return{animation:t?`${tt(r)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards`:`${tt(l)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`}},Jh=v.memo(({toast:e,position:t,style:n,children:r})=>{let l=e.height?Gh(e.position||t||"top-center",e.visible):{opacity:0},i=v.createElement(Wh,{toast:e}),o=v.createElement(Xh,{...e.ariaProps},zl(e.message,e));return v.createElement(Yh,{className:e.className,style:{...l,...n,...e.style}},typeof r=="function"?r({icon:i,message:o}):v.createElement(v.Fragment,null,i,o))});xh(v.createElement);var Zh=({id:e,className:t,style:n,onHeightUpdate:r,children:l})=>{let i=v.useCallback(o=>{if(o){let s=()=>{let a=o.getBoundingClientRect().height;r(e,a)};s(),new MutationObserver(s).observe(o,{subtree:!0,childList:!0,characterData:!0})}},[e,r]);return v.createElement("div",{ref:i,className:t,style:n},l)},qh=(e,t)=>{let n=e.includes("top"),r=n?{top:0}:{bottom:0},l=e.includes("center")?{justifyContent:"center"}:e.includes("right")?{justifyContent:"flex-end"}:{};return{left:0,right:0,display:"flex",position:"absolute",transition:Sd()?void 0:"all 230ms cubic-bezier(.21,1.02,.73,1)",transform:`translateY(${t*(n?1:-1)}px)`,...r,...l}},bh=bl`
  z-index: 9999;
  > * {
    pointer-events: auto;
  }
`,Vr=16,e0=({reverseOrder:e,position:t="top-center",toastOptions:n,gutter:r,children:l,toasterId:i,containerStyle:o,containerClassName:s})=>{let{toasts:a,handlers:c}=Ph(n,i);return v.createElement("div",{"data-rht-toaster":i||"",style:{position:"fixed",zIndex:9999,top:Vr,left:Vr,right:Vr,bottom:Vr,pointerEvents:"none",...o},className:s,onMouseEnter:c.startPause,onMouseLeave:c.endPause},a.map(m=>{let f=m.position||t,g=c.calculateOffset(m,{reverseOrder:e,gutter:r,defaultPosition:t}),y=qh(f,g);return v.createElement(Zh,{id:m.id,key:m.id,onHeightUpdate:c.updateHeight,className:m.visible?bh:"",style:y},m.type==="custom"?zl(m.message,m):l?l(m):v.createElement(Jh,{toast:m,position:f}))}))},qn=J;const _d=v.createContext(),Ya={en:{common:{loading:"Loading...",error:"Error",success:"Success",cancel:"Cancel",confirm:"Confirm",save:"Save",delete:"Delete",edit:"Edit",view:"View",download:"Download",upload:"Upload",search:"Search",filter:"Filter",export:"Export",back:"Back",next:"Next",previous:"Previous",close:"Close",yes:"Yes",no:"No",clear:"Clear",actions:"Actions",created:"Created",to:"to"},navigation:{dashboard:"Dashboard",upload:"Upload",processing:"Processing",results:"Results"},results:{title:"BOM Comparison Results",workflowId:"Workflow ID",withItemClassificationReasons:"With Item Classification & Reasons",backToDashboard:"Back to Dashboard",materialsProcessed:"Materials Processed",successfulMatches:"Successful Matches",averageConfidence:"Average Confidence",knowledgeBaseMatches:"Knowledge Base Matches",exportResults:"Export Results",resultsExported:"Results exported successfully!",failedToLoadResults:"The results for this workflow could not be loaded.",noMaterialsMatch:"No materials match the selected filter criteria.",noReasonProvided:"No reason provided",columns:{sno:"S.No.",materialName:"Material Name",qcProcess:"QC Process/WI Step",consumable:"Consumable/Jigs/Tools",partNumber:"Part Number",qty:"Qty",uom:"UoM",vendor:"Vendor",classification:"Classification",confidence:"Confidence",actionPath:"Action Path",supplierMatch:"Supplier Match",reason:"Reason"}},knowledgeBase:{title:"Knowledge Base",subtitle:"Database of previously processed items for enhanced matching accuracy",totalItems:"Total Items",totalWorkflows:"Total Workflows",totalMatches:"Total Matches",matchRate:"Match Rate",searchItems:"Search items in knowledge base...",noItems:"No items found",noItemsDescription:"No items match your search criteria."},dashboard:{title:"Dashboard",subtitle:"Monitor your autonomous BOM processing workflows with QA classification",showing:"Showing",of:"of",startProcessing:"Start Processing"},settings:{title:"Settings",language:"Language Settings",resultsLanguage:"Results Display Language",resultsLanguageDescription:"Choose the language for displaying BOM comparison results",knowledgeBase:"Knowledge Base Settings",enableKnowledgeBase:"Enable Knowledge Base",knowledgeBaseDescription:"Use historical data to improve matching accuracy",clearKnowledgeBase:"Clear Knowledge Base",clearKnowledgeBaseDescription:"Remove all stored historical data",confirmClear:"Are you sure you want to clear all knowledge base data?"}},ja:{common:{loading:"読み込み中...",error:"エラー",success:"成功",cancel:"キャンセル",confirm:"確認",save:"保存",delete:"削除",edit:"編集",view:"表示",download:"ダウンロード",upload:"アップロード",search:"検索",filter:"フィルター",export:"エクスポート",back:"戻る",next:"次へ",previous:"前へ",close:"閉じる",yes:"はい",no:"いいえ",clear:"クリア",actions:"操作",created:"作成日",to:"から"},navigation:{dashboard:"ダッシュボード",upload:"アップロード",processing:"処理中",results:"結果"},results:{title:"BOM比較結果",workflowId:"ワークフローID",withItemClassificationReasons:"アイテム分類と理由付き",backToDashboard:"ダッシュボードに戻る",materialsProcessed:"処理済み材料",successfulMatches:"成功マッチ",averageConfidence:"平均信頼度",knowledgeBaseMatches:"知識ベースマッチ",exportResults:"結果エクスポート",resultsExported:"結果が正常にエクスポートされました！",failedToLoadResults:"このワークフローの結果を読み込めませんでした。",noMaterialsMatch:"選択されたフィルター条件に一致する材料はありません。",noReasonProvided:"理由が提供されていません",columns:{sno:"番号",materialName:"材料名",qcProcess:"QCプロセス/WIステップ",consumable:"消耗品/治具/工具",partNumber:"部品番号",qty:"数量",uom:"単位",vendor:"ベンダー",classification:"分類",confidence:"信頼度",actionPath:"アクションパス",supplierMatch:"サプライヤーマッチ",reason:"理由"}},knowledgeBase:{title:"知識ベース",subtitle:"マッチング精度向上のための過去処理アイテムデータベース",totalItems:"総アイテム数",totalWorkflows:"総ワークフロー数",totalMatches:"総マッチ数",matchRate:"マッチ率",searchItems:"知識ベース内のアイテムを検索...",noItems:"アイテムが見つかりません",noItemsDescription:"検索条件に一致するアイテムはありません。"},dashboard:{title:"ダッシュボード",subtitle:"QA分類機能付きの自律的BOM処理ワークフローを監視",showing:"表示中",of:"/",startProcessing:"処理開始"},settings:{title:"設定",language:"言語設定",resultsLanguage:"結果表示言語",resultsLanguageDescription:"BOM比較結果の表示言語を選択してください",knowledgeBase:"知識ベース設定",enableKnowledgeBase:"知識ベースを有効化",knowledgeBaseDescription:"過去のデータを使用してマッチング精度を向上させる",clearKnowledgeBase:"知識ベースをクリア",clearKnowledgeBaseDescription:"保存されたすべての過去データを削除",confirmClear:"すべての知識ベースデータをクリアしてもよろしいですか？"}}};function t0({children:e}){const[t,n]=v.useState("en"),[r,l]=v.useState(!1),s={currentLanguage:t,changeLanguage:a=>{n(a);try{localStorage==null||localStorage.setItem("preferred-language",a)}catch{}},t:(a,c=a)=>{const m=a.split(".");let f=Ya[t];for(const g of m)if(f=f==null?void 0:f[g],f===void 0){f=Ya.en;for(const y of m)if(f=f==null?void 0:f[y],f===void 0)return console.warn(`Translation key not found: ${a}`),c;break}return f||c},loading:r,availableLanguages:[{code:"en",name:"English",nativeName:"English"},{code:"ja",name:"Japanese",nativeName:"日本語"}]};return u.jsx(_d.Provider,{value:s,children:e})}function Tt(){const e=v.useContext(_d);if(e===void 0)throw new Error("useTranslation must be used within a TranslationProvider");return e}var n0={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const r0=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),l0=(e,t)=>{const n=v.forwardRef(({color:r="currentColor",size:l=24,strokeWidth:i=2,absoluteStrokeWidth:o,children:s,...a},c)=>v.createElement("svg",{ref:c,...n0,width:l,height:l,stroke:r,strokeWidth:o?Number(i)*24/Number(l):i,className:`lucide lucide-${r0(e)}`,...a},[...t.map(([m,f])=>v.createElement(m,f)),...(Array.isArray(s)?s:[s])||[]]));return n.displayName=`${e}`,n};var Te=l0;const Nn=Te("ArrowLeft",[["path",{d:"m12 19-7-7 7-7",key:"1l729n"}],["path",{d:"M19 12H5",key:"x3x0zl"}]]),i0=Te("BarChart",[["line",{x1:"12",x2:"12",y1:"20",y2:"10",key:"1vz5eb"}],["line",{x1:"18",x2:"18",y1:"20",y2:"4",key:"cun8e5"}],["line",{x1:"6",x2:"6",y1:"20",y2:"16",key:"hq0ia6"}]]),Pd=Te("CheckCircle",[["path",{d:"M22 11.08V12a10 10 0 1 1-5.93-9.14",key:"g774vq"}],["polyline",{points:"22 4 12 14.01 9 11.01",key:"6xbx8j"}]]),ti=Te("Database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]]),o0=Te("Download",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"7 10 12 15 17 10",key:"2ggqvy"}],["line",{x1:"12",x2:"12",y1:"15",y2:"3",key:"1vk2je"}]]),Xa=Te("File",[["path",{d:"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z",key:"1nnpy2"}],["polyline",{points:"14 2 14 8 20 8",key:"1ew0cm"}]]),Ld=Te("Globe",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["line",{x1:"2",x2:"22",y1:"12",y2:"12",key:"1dnqot"}],["path",{d:"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z",key:"nb9nel"}]]),s0=Te("Home",[["path",{d:"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z",key:"y5dka4"}],["polyline",{points:"9 22 9 12 15 12 15 22",key:"e2us08"}]]),a0=Te("Play",[["polygon",{points:"5 3 19 12 5 21 5 3",key:"191637"}]]),u0=Te("Settings",[["path",{d:"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",key:"1qme2f"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]),c0=Te("TrendingUp",[["polyline",{points:"22 7 13.5 15.5 8.5 10.5 2 17",key:"126l90"}],["polyline",{points:"16 7 22 7 22 13",key:"kwv8wd"}]]),Ml=Te("Upload",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"17 8 12 3 7 8",key:"t8dd8p"}],["line",{x1:"12",x2:"12",y1:"3",y2:"15",key:"widbto"}]]);function Rd({className:e=""}){const{currentLanguage:t,changeLanguage:n,availableLanguages:r}=Tt();return u.jsxs("div",{className:`relative inline-block ${e}`,children:[u.jsx("select",{value:t,onChange:l=>n(l.target.value),className:"appearance-none bg-white border border-gray-300 rounded-md py-2 pl-3 pr-8 text-sm leading-5 focus:outline-none focus:border-primary-500 focus:ring-1 focus:ring-primary-500",children:r.map(l=>u.jsx("option",{value:l.code,children:l.nativeName},l.code))}),u.jsx("div",{className:"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none",children:u.jsx(Ld,{className:"h-4 w-4 text-gray-400"})})]})}function d0({children:e}){const t=Xt(),{t:n}=Tt(),r=[{name:n("navigation.dashboard"),href:"/dashboard",icon:s0},{name:n("navigation.upload"),href:"/upload",icon:Ml},{name:n("knowledgeBase.title"),href:"/knowledge-base",icon:ti},{name:n("settings.title"),href:"/settings",icon:u0}];return u.jsxs("div",{className:"min-h-screen bg-gray-50",children:[u.jsx("nav",{className:"bg-white shadow-sm border-b border-gray-200",children:u.jsx("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",children:u.jsxs("div",{className:"flex justify-between h-16",children:[u.jsxs("div",{className:"flex",children:[u.jsxs("div",{className:"flex-shrink-0 flex items-center",children:[u.jsx(i0,{className:"h-8 w-8 text-primary-600"}),u.jsx("span",{className:"ml-2 text-xl font-bold text-gray-900",children:"BOM Platform"}),u.jsx("span",{className:"ml-2 text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full",children:"Enhanced v2.0"})]}),u.jsx("div",{className:"hidden sm:ml-6 sm:flex sm:space-x-8",children:r.map(l=>{const i=l.icon,o=t.pathname===l.href;return u.jsxs(uh,{to:l.href,className:`${o?"border-primary-500 text-primary-600":"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"} inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium`,children:[u.jsx(i,{className:"h-4 w-4 mr-2"}),l.name]},l.name)})})]}),u.jsxs("div",{className:"flex items-center",children:[u.jsx(Rd,{className:"mr-4"}),u.jsx("div",{className:"hidden sm:flex items-center space-x-4",children:u.jsx("span",{className:"text-xs text-gray-500",children:"QA Classification • Knowledge Base • Japanese Support"})})]})]})})}),u.jsx("main",{className:"min-h-screen",children:e})]})}function Z({children:e,className:t="",...n}){return u.jsx("div",{className:`bg-white shadow-sm rounded-lg border border-gray-200 ${t}`,...n,children:e})}function To({children:e,variant:t="primary",size:n="md",className:r="",disabled:l=!1,...i}){const o="inline-flex items-center font-medium rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors",s={primary:"bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500",secondary:"bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500",outline:"border border-gray-300 text-gray-700 bg-white hover:bg-gray-50 focus:ring-primary-500",danger:"bg-red-600 text-white hover:bg-red-700 focus:ring-red-500"},a={sm:"px-3 py-2 text-sm",md:"px-4 py-2 text-sm",lg:"px-6 py-3 text-base"},c=l?"opacity-50 cursor-not-allowed":"";return u.jsx("button",{className:`${o} ${s[t]} ${a[n]} ${c} ${r}`,disabled:l,...i,children:e})}function Ga({size:e="md",className:t=""}){const n={sm:"h-4 w-4",md:"h-6 w-6",lg:"h-8 w-8"};return u.jsx("div",{className:`animate-spin rounded-full border-2 border-primary-600 border-t-transparent ${n[e]} ${t}`})}function f0(){const e=Lt(),{t}=Tt(),[n,r]=v.useState([]),[l,i]=v.useState({total:0,completed:0,processing:0,success_rate:0}),[o,s]=v.useState(!0);v.useEffect(()=>{a()},[]);const a=async()=>{try{s(!0),r([{workflow_id:"wf-001",status:"completed",created_at:new Date().toISOString(),message:"Processing completed successfully"}]),i({total:1,completed:1,processing:0,success_rate:100})}catch(c){console.error("Failed to load dashboard data:",c)}finally{s(!1)}};return o?u.jsx("div",{className:"min-h-screen bg-gray-50 flex items-center justify-center",children:u.jsxs("div",{className:"text-center",children:[u.jsx("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-4"}),u.jsx("p",{className:"text-gray-600",children:t("common.loading")})]})}):u.jsx("div",{className:"min-h-screen bg-gray-50",children:u.jsxs("div",{className:"max-w-7xl mx-auto p-6",children:[u.jsxs("div",{className:"mb-8",children:[u.jsx("h1",{className:"text-3xl font-bold text-gray-900",children:t("dashboard.title")}),u.jsx("p",{className:"text-gray-600 mt-1",children:t("dashboard.subtitle")})]}),u.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8",children:[u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"flex-shrink-0",children:u.jsx("div",{className:"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center",children:u.jsx(ti,{className:"h-5 w-5 text-blue-600"})})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:"Total Workflows"}),u.jsx("p",{className:"text-2xl font-semibold text-gray-900",children:l.total})]})]})}),u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"flex-shrink-0",children:u.jsx("div",{className:"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center",children:u.jsx(Pd,{className:"h-5 w-5 text-green-600"})})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:"Completed"}),u.jsx("p",{className:"text-2xl font-semibold text-gray-900",children:l.completed})]})]})}),u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"flex-shrink-0",children:u.jsx("div",{className:"w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center",children:u.jsx(a0,{className:"h-5 w-5 text-yellow-600"})})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:"Processing"}),u.jsx("p",{className:"text-2xl font-semibold text-gray-900",children:l.processing})]})]})}),u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"flex-shrink-0",children:u.jsx("div",{className:"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center",children:u.jsx(c0,{className:"h-5 w-5 text-purple-600"})})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:"Success Rate"}),u.jsxs("p",{className:"text-2xl font-semibold text-gray-900",children:[l.success_rate,"%"]})]})]})})]}),u.jsx("div",{className:"mb-8",children:u.jsxs(To,{onClick:()=>e("/upload"),className:"btn-primary",children:[u.jsx(Ml,{className:"h-5 w-5 mr-2"}),t("dashboard.startProcessing")]})}),u.jsxs(Z,{children:[u.jsx("div",{className:"px-6 py-4 border-b border-gray-200",children:u.jsx("h3",{className:"text-lg font-medium text-gray-900",children:"Recent Workflows"})}),u.jsx("div",{className:"p-6",children:n.length>0?u.jsx("div",{className:"space-y-4",children:n.map(c=>u.jsxs("div",{className:"flex items-center justify-between p-4 border border-gray-200 rounded-lg",children:[u.jsxs("div",{children:[u.jsx("h4",{className:"font-medium text-gray-900",children:c.workflow_id}),u.jsx("p",{className:"text-sm text-gray-500",children:c.message})]}),u.jsxs("div",{className:"flex items-center space-x-4",children:[u.jsx("span",{className:`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${c.status==="completed"?"bg-green-100 text-green-800":"bg-yellow-100 text-yellow-800"}`,children:c.status}),c.status==="completed"&&u.jsx(To,{size:"sm",variant:"outline",onClick:()=>e(`/results/${c.workflow_id}`),children:"View Results"})]})]},c.workflow_id))}):u.jsx("div",{className:"text-center py-8",children:u.jsx("p",{className:"text-gray-500",children:"No workflows yet. Start by uploading your first document."})})})]})]})})}function p0(){const e=Lt(),{t}=Tt(),[n,r]=v.useState(null),[l,i]=v.useState(null),[o,s]=v.useState(!1),a=(m,f)=>{const g=m.target.files[0];f==="wi"?r(g):i(g)},c=async()=>{if(!n||!l){qn.error("Please select both files");return}try{s(!0);const m=new FormData;m.append("wi_document",n),m.append("item_master",l);const f=await fetch("/api/autonomous/upload",{method:"POST",body:m});if(!f.ok)throw new Error("Upload failed");const g=await f.json();if(g.success)qn.success("Upload successful!"),e(`/processing/${g.workflow_id}`);else throw new Error(g.message||"Upload failed")}catch(m){console.error("Upload error:",m),qn.error("Upload failed: "+m.message)}finally{s(!1)}};return u.jsx("div",{className:"min-h-screen bg-gray-50",children:u.jsxs("div",{className:"max-w-4xl mx-auto p-6",children:[u.jsxs("div",{className:"mb-8",children:[u.jsxs("button",{onClick:()=>e("/dashboard"),className:"inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4",children:[u.jsx(Nn,{className:"h-4 w-4 mr-1"}),"Back to Dashboard"]}),u.jsx("h1",{className:"text-3xl font-bold text-gray-900",children:t("navigation.upload")}),u.jsx("p",{className:"text-gray-600 mt-1",children:"Upload your Japanese WI/QC document and Item Master to start autonomous processing"})]}),u.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8",children:[u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"text-center",children:[u.jsx(Xa,{className:"mx-auto h-12 w-12 text-gray-400 mb-4"}),u.jsx("h3",{className:"text-lg font-medium text-gray-900 mb-2",children:"WI/QC Document"}),u.jsx("p",{className:"text-sm text-gray-500 mb-4",children:"Supports PDF, DOCX, DOC, TXT formats"}),u.jsx("input",{type:"file",accept:".pdf,.docx,.doc,.txt",onChange:m=>a(m,"wi"),className:"hidden",id:"wi-upload"}),u.jsxs("label",{htmlFor:"wi-upload",className:"cursor-pointer inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50",children:[u.jsx(Ml,{className:"h-4 w-4 mr-2"}),"Choose File"]}),n&&u.jsxs("p",{className:"mt-2 text-sm text-green-600",children:["Selected: ",n.name]})]})}),u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"text-center",children:[u.jsx(Xa,{className:"mx-auto h-12 w-12 text-gray-400 mb-4"}),u.jsx("h3",{className:"text-lg font-medium text-gray-900 mb-2",children:"Item Master"}),u.jsx("p",{className:"text-sm text-gray-500 mb-4",children:"Supports Excel (XLSX, XLS) and CSV formats"}),u.jsx("input",{type:"file",accept:".xlsx,.xls,.csv",onChange:m=>a(m,"item"),className:"hidden",id:"item-upload"}),u.jsxs("label",{htmlFor:"item-upload",className:"cursor-pointer inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50",children:[u.jsx(Ml,{className:"h-4 w-4 mr-2"}),"Choose File"]}),l&&u.jsxs("p",{className:"mt-2 text-sm text-green-600",children:["Selected: ",l.name]})]})})]}),u.jsxs("div",{className:"text-center",children:[u.jsx(To,{onClick:c,disabled:!n||!l||o,className:"btn-primary",children:o?"Uploading...":"Start Processing"}),u.jsx("p",{className:"text-sm text-gray-500 mt-4",children:"Our autonomous agents will process your documents through translation, extraction with WI/QC Item classification, and intelligent comparison stages. You can monitor progress in real-time."})]})]})})}function m0(){const{workflowId:e}=gd(),t=Lt(),{t:n}=Tt(),[r,l]=v.useState(null),[i,o]=v.useState(!0);v.useEffect(()=>{if(e){const a=setInterval(()=>{s()},2e3);return s(),()=>clearInterval(a)}},[e]);const s=async()=>{try{const a=await fetch(`/api/autonomous/workflow/${e}/status`);if(a.ok){const c=await a.json();l(c),c.status==="completed"?setTimeout(()=>{t(`/results/${e}`)},1e3):c.status==="error"&&o(!1)}}catch(a){console.error("Failed to check workflow status:",a)}finally{o(!1)}};return i&&!r?u.jsx("div",{className:"min-h-screen bg-gray-50 flex items-center justify-center",children:u.jsxs("div",{className:"text-center",children:[u.jsx(Ga,{size:"lg",className:"mx-auto mb-4"}),u.jsx("p",{className:"text-gray-600",children:n("common.loading")})]})}):u.jsx("div",{className:"min-h-screen bg-gray-50",children:u.jsxs("div",{className:"max-w-4xl mx-auto p-6",children:[u.jsxs("div",{className:"mb-8",children:[u.jsxs("button",{onClick:()=>t("/dashboard"),className:"inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4",children:[u.jsx(Nn,{className:"h-4 w-4 mr-1"}),"Back to Dashboard"]}),u.jsx("h1",{className:"text-3xl font-bold text-gray-900",children:n("navigation.processing")}),u.jsxs("p",{className:"text-gray-600 mt-1",children:["Workflow ID: ",e]})]}),r&&u.jsx(Z,{className:"p-8",children:u.jsxs("div",{className:"text-center",children:[r.status==="completed"?u.jsx(Pd,{className:"mx-auto h-16 w-16 text-green-500 mb-4"}):r.status==="error"?u.jsx("div",{className:"mx-auto h-16 w-16 text-red-500 mb-4",children:"❌"}):u.jsx(Ga,{size:"lg",className:"mx-auto mb-4"}),u.jsx("h2",{className:"text-xl font-semibold text-gray-900 mb-2",children:r.status==="completed"?"Processing Complete!":r.status==="error"?"Processing Failed":"Processing in Progress..."}),u.jsx("p",{className:"text-gray-600 mb-6",children:r.message||"Processing your documents..."}),u.jsx("div",{className:"bg-gray-200 rounded-full h-2 mb-4",children:u.jsx("div",{className:"bg-primary-600 h-2 rounded-full transition-all duration-300",style:{width:`${r.progress||0}%`}})}),u.jsxs("p",{className:"text-sm text-gray-500",children:["Current Stage: ",r.current_stage||"initializing"]}),r.progress&&u.jsxs("p",{className:"text-sm text-gray-500 mt-1",children:[Math.round(r.progress),"% Complete"]})]})})]})})}class Hr{static translateClassificationLabel(t,n="en"){var l;const r={en:{1:"Direct Material - Production",2:"Indirect Material - Support",3:"Tools & Equipment",4:"Consumable Items",5:"Other/Miscellaneous"},ja:{1:"直接材料 - 製造",2:"間接材料 - サポート",3:"工具・設備",4:"消耗品",5:"その他・雑項目"}};return((l=r[n])==null?void 0:l[t])||r.en[t]||`Label ${t}`}static translateConfidenceLevel(t,n="en"){var l;return((l={en:{high:"High",medium:"Medium",low:"Low"},ja:{high:"高",medium:"中",low:"低"}}[n])==null?void 0:l[t==null?void 0:t.toLowerCase()])||t}static translateMatchSource(t,n="en"){var l;return((l={en:{knowledge_base:"From Knowledge Base",supplier_bom:"From Supplier BOM",hybrid:"Verified Match",no_match:"No Match"},ja:{knowledge_base:"知識ベースから",supplier_bom:"サプライヤーBOMから",hybrid:"検証済みマッチ",no_match:"マッチなし"}}[n])==null?void 0:l[t])||t}static translateActionPath(t,n="en"){var l;const r={en:{1:{icon:"🟢",text:"Production Use"},2:{icon:"🟡",text:"Support Review"},3:{icon:"🔧",text:"Equipment Check"},4:{icon:"📦",text:"Inventory Track"},5:{icon:"❓",text:"Manual Review"}},ja:{1:{icon:"🟢",text:"生産使用"},2:{icon:"🟡",text:"サポート確認"},3:{icon:"🔧",text:"設備チェック"},4:{icon:"📦",text:"在庫追跡"},5:{icon:"❓",text:"手動確認"}}};return((l=r[n])==null?void 0:l[t])||r.en[t]||{icon:"❓",text:"Review"}}static translateBoolean(t,n="en"){var l;return t==null?"-":((l={en:{true:"Yes",false:"No"},ja:{true:"はい",false:"いいえ"}}[n])==null?void 0:l[t.toString()])||t.toString()}static translateResultItem(t,n="en"){return t&&{...t,classification_description:this.translateClassificationLabel(t.qa_classification_label,n),confidence_level_text:this.translateConfidenceLevel(t.qa_confidence_level,n),match_source_text:this.translateMatchSource(t.match_source,n),action_path:this.translateActionPath(t.qa_classification_label,n),consumable_text:this.translateBoolean(t.consumable_jigs_tools,n)}}}function h0(){const{workflowId:e}=gd(),t=Lt(),{t:n,currentLanguage:r}=Tt(),[l,i]=v.useState(null),[o,s]=v.useState(!0),[a,c]=v.useState(null);v.useEffect(()=>{e&&(async()=>{try{s(!0);const p=await fetch(`/api/autonomous/workflow/${e}/results`);if(!p.ok)throw new Error("Failed to fetch results");const d=await p.json();i(d)}catch(p){console.error("Error fetching results:",p),c(p.message)}finally{s(!1)}})()},[e]);const m=async()=>{try{const w={workflow_id:e,results:l,export_date:new Date().toISOString(),language:r},p=new Blob([JSON.stringify(w,null,2)],{type:"application/json"}),d=URL.createObjectURL(p),h=document.createElement("a");h.href=d,h.download=`bom-results-${e}-${r}.json`,document.body.appendChild(h),h.click(),document.body.removeChild(h),URL.revokeObjectURL(d),qn.success(n("results.resultsExported"))}catch(w){console.error("Export failed:",w),qn.error("Export failed")}},f=w=>{if(w==null||isNaN(w))return"-";const p=r==="ja"?"ja-JP":"en-US";return new Intl.NumberFormat(p).format(w)},g=w=>{if(w==null||isNaN(w))return"-";const p=r==="ja"?"ja-JP":"en-US";return new Intl.NumberFormat(p,{style:"percent",minimumFractionDigits:1,maximumFractionDigits:1}).format(w/100)};if(o)return u.jsx("div",{className:"min-h-screen bg-gray-50 flex items-center justify-center",children:u.jsxs("div",{className:"text-center",children:[u.jsx("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-4"}),u.jsx("p",{className:"text-gray-600",children:n("common.loading")})]})});if(a||!l)return u.jsx("div",{className:"min-h-screen bg-gray-50 p-6",children:u.jsxs("div",{className:"max-w-7xl mx-auto",children:[u.jsx("div",{className:"mb-8",children:u.jsxs("button",{onClick:()=>t("/dashboard"),className:"inline-flex items-center text-sm text-gray-500 hover:text-gray-700",children:[u.jsx(Nn,{className:"h-4 w-4 mr-1"}),n("results.backToDashboard")]})}),u.jsxs("div",{className:"bg-white rounded-lg shadow p-6 text-center",children:[u.jsx("div",{className:"text-red-600 mb-4",children:u.jsx("div",{className:"w-16 h-16 mx-auto mb-4 bg-red-100 rounded-full flex items-center justify-center",children:u.jsx("span",{className:"text-2xl",children:"⚠️"})})}),u.jsx("h3",{className:"text-lg font-medium text-gray-900 mb-2",children:n("common.error")}),u.jsx("p",{className:"text-gray-600",children:n("results.failedToLoadResults")})]})]})});const y=l.matches||[],k=l.summary||{},S=l.knowledge_base_stats||{};return u.jsx("div",{className:"min-h-screen bg-gray-50",children:u.jsxs("div",{className:"max-w-7xl mx-auto p-6",children:[u.jsx("div",{className:"mb-8",children:u.jsxs("div",{className:"flex items-center justify-between",children:[u.jsxs("div",{children:[u.jsxs("button",{onClick:()=>t("/dashboard"),className:"inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4",children:[u.jsx(Nn,{className:"h-4 w-4 mr-1"}),n("results.backToDashboard")]}),u.jsx("h1",{className:"text-3xl font-bold text-gray-900",children:n("results.title")}),u.jsxs("p",{className:"text-gray-600 mt-1",children:[n("results.workflowId"),": ",e," • ",n("results.withItemClassificationReasons")]})]}),u.jsx("div",{className:"flex items-center space-x-3",children:u.jsxs("button",{onClick:m,className:"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50",children:[u.jsx(o0,{className:"h-4 w-4 mr-2"}),n("results.exportResults")]})})]})}),u.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8",children:[u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"flex-shrink-0",children:u.jsx("div",{className:"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center",children:u.jsx("span",{className:"text-blue-600 font-semibold text-sm",children:"📊"})})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:n("results.materialsProcessed")}),u.jsx("p",{className:"text-2xl font-semibold text-gray-900",children:f(k.total_materials||0)})]})]})}),u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"flex-shrink-0",children:u.jsx("div",{className:"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center",children:u.jsx("span",{className:"text-green-600 font-semibold text-sm",children:"✅"})})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:n("results.successfulMatches")}),u.jsx("p",{className:"text-2xl font-semibold text-gray-900",children:f(k.successful_matches||0)})]})]})}),u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"flex-shrink-0",children:u.jsx("div",{className:"w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center",children:u.jsx("span",{className:"text-yellow-600 font-semibold text-sm",children:"📈"})})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:n("results.averageConfidence")}),u.jsx("p",{className:"text-2xl font-semibold text-gray-900",children:g(y.reduce((w,p)=>w+(p.confidence_score||0),0)/y.length||0)})]})]})}),u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"flex-shrink-0",children:u.jsx("div",{className:"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center",children:u.jsx(ti,{className:"h-4 w-4 text-purple-600"})})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:n("results.knowledgeBaseMatches")}),u.jsx("p",{className:"text-2xl font-semibold text-gray-900",children:f(k.knowledge_base_matches||0)})]})]})})]}),u.jsx(Z,{className:"overflow-hidden",children:u.jsx("div",{className:"overflow-x-auto",children:u.jsxs("table",{className:"min-w-full divide-y divide-gray-200",children:[u.jsx("thead",{className:"bg-gray-50",children:u.jsxs("tr",{children:[u.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:n("results.columns.sno")}),u.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:n("results.columns.materialName")}),u.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:n("results.columns.qcProcess")}),u.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:n("results.columns.partNumber")}),u.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:n("results.columns.classification")}),u.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:n("results.columns.confidence")}),u.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:n("results.columns.supplierMatch")}),u.jsx("th",{className:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",children:n("results.columns.reason")})]})}),u.jsx("tbody",{className:"bg-white divide-y divide-gray-200",children:y.length>0?y.map((w,p)=>(Hr.translateActionPath(w.qa_classification_label||5,r),u.jsxs("tr",{className:"hover:bg-gray-50",children:[u.jsx("td",{className:"px-6 py-4 whitespace-nowrap text-sm text-gray-900",children:p+1}),u.jsxs("td",{className:"px-6 py-4 text-sm text-gray-900",children:[u.jsx("div",{className:"font-medium",children:w.qa_material_name}),w.qa_excerpt&&u.jsxs("div",{className:"text-xs text-gray-500 mt-1",children:['"',w.qa_excerpt,'"']})]}),u.jsx("td",{className:"px-6 py-4 whitespace-nowrap text-sm text-gray-900",children:w.qc_process_step||"-"}),u.jsx("td",{className:"px-6 py-4 whitespace-nowrap text-sm text-gray-900",children:w.part_number||"-"}),u.jsxs("td",{className:"px-6 py-4 whitespace-nowrap text-sm text-gray-900",children:[u.jsx("div",{className:"flex items-center",children:u.jsxs("span",{className:"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800",children:[n("results.columns.classification")," ",w.qa_classification_label||5]})}),u.jsx("div",{className:"text-xs text-gray-500 mt-1",children:Hr.translateClassificationLabel(w.qa_classification_label||5,r)})]}),u.jsx("td",{className:"px-6 py-4 whitespace-nowrap text-sm text-gray-900",children:Hr.translateConfidenceLevel(w.qa_confidence_level,r)}),u.jsx("td",{className:"px-6 py-4 text-sm text-gray-900",children:w.confidence_score>0?u.jsxs("div",{children:[u.jsx("div",{className:"font-medium",children:w.supplier_description}),u.jsxs("div",{className:"text-xs text-gray-500",children:[w.supplier_part_number," • ",Math.round(w.confidence_score*100),"%"]}),u.jsx("div",{className:"text-xs text-blue-600 mt-1",children:Hr.translateMatchSource(w.match_source,r)})]}):u.jsx("span",{className:"text-gray-400",children:"-"})}),u.jsx("td",{className:"px-6 py-4 text-sm text-gray-600",children:w.reasoning||n("results.noReasonProvided")})]},p))):u.jsx("tr",{children:u.jsx("td",{colSpan:"8",className:"px-6 py-8 text-center text-gray-500",children:n("results.noMaterialsMatch")})})})]})})}),S&&Object.keys(S).length>0&&u.jsxs(Z,{className:"mt-8 p-6",children:[u.jsxs("h3",{className:"text-lg font-semibold text-gray-900 mb-4",children:[n("knowledgeBase.title")," ",n("dashboard.showing")]}),u.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4",children:[u.jsxs("div",{className:"text-center",children:[u.jsx("div",{className:"text-2xl font-bold text-gray-900",children:f(S.total_items||0)}),u.jsx("div",{className:"text-sm text-gray-500",children:n("knowledgeBase.totalItems")})]}),u.jsxs("div",{className:"text-center",children:[u.jsx("div",{className:"text-2xl font-bold text-gray-900",children:f(S.total_workflows||0)}),u.jsx("div",{className:"text-sm text-gray-500",children:n("knowledgeBase.totalWorkflows")})]}),u.jsxs("div",{className:"text-center",children:[u.jsx("div",{className:"text-2xl font-bold text-gray-900",children:f(S.total_matches||0)}),u.jsx("div",{className:"text-sm text-gray-500",children:n("knowledgeBase.totalMatches")})]}),u.jsxs("div",{className:"text-center",children:[u.jsx("div",{className:"text-2xl font-bold text-gray-900",children:g(S.match_rate||0)}),u.jsx("div",{className:"text-sm text-gray-500",children:n("knowledgeBase.matchRate")})]})]})]})]})})}function g0(){const e=Lt(),{t}=Tt(),[n,r]=v.useState({total_items:0,total_workflows:0,total_matches:0,match_rate:0});return v.useEffect(()=>{r({total_items:0,total_workflows:0,total_matches:0,match_rate:0})},[]),u.jsx("div",{className:"min-h-screen bg-gray-50",children:u.jsxs("div",{className:"max-w-7xl mx-auto p-6",children:[u.jsxs("div",{className:"mb-8",children:[u.jsxs("button",{onClick:()=>e("/dashboard"),className:"inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4",children:[u.jsx(Nn,{className:"h-4 w-4 mr-1"}),"Back to Dashboard"]}),u.jsx("h1",{className:"text-3xl font-bold text-gray-900",children:t("knowledgeBase.title")}),u.jsx("p",{className:"text-gray-600 mt-1",children:t("knowledgeBase.subtitle")})]}),u.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-4 gap-6",children:[u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx(ti,{className:"h-8 w-8 text-blue-600"}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:t("knowledgeBase.totalItems")}),u.jsx("p",{className:"text-2xl font-semibold text-gray-900",children:n.total_items})]})]})}),u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"h-8 w-8 bg-green-100 rounded-lg flex items-center justify-center",children:u.jsx("span",{className:"text-green-600 font-semibold",children:"📋"})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:t("knowledgeBase.totalWorkflows")}),u.jsx("p",{className:"text-2xl font-semibold text-gray-900",children:n.total_workflows})]})]})}),u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"h-8 w-8 bg-purple-100 rounded-lg flex items-center justify-center",children:u.jsx("span",{className:"text-purple-600 font-semibold",children:"🔗"})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:t("knowledgeBase.totalMatches")}),u.jsx("p",{className:"text-2xl font-semibold text-gray-900",children:n.total_matches})]})]})}),u.jsx(Z,{className:"p-6",children:u.jsxs("div",{className:"flex items-center",children:[u.jsx("div",{className:"h-8 w-8 bg-yellow-100 rounded-lg flex items-center justify-center",children:u.jsx("span",{className:"text-yellow-600 font-semibold",children:"📊"})}),u.jsxs("div",{className:"ml-4",children:[u.jsx("p",{className:"text-sm font-medium text-gray-500",children:t("knowledgeBase.matchRate")}),u.jsxs("p",{className:"text-2xl font-semibold text-gray-900",children:[n.match_rate,"%"]})]})]})})]})]})})}function v0(){const e=Lt(),{t}=Tt();return u.jsx("div",{className:"min-h-screen bg-gray-50",children:u.jsxs("div",{className:"max-w-4xl mx-auto p-6",children:[u.jsxs("div",{className:"mb-8",children:[u.jsxs("button",{onClick:()=>e("/dashboard"),className:"inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4",children:[u.jsx(Nn,{className:"h-4 w-4 mr-1"}),"Back to Dashboard"]}),u.jsx("h1",{className:"text-3xl font-bold text-gray-900",children:t("settings.title")})]}),u.jsxs(Z,{className:"p-6",children:[u.jsxs("div",{className:"flex items-center mb-4",children:[u.jsx(Ld,{className:"h-5 w-5 text-gray-400 mr-2"}),u.jsx("h2",{className:"text-lg font-medium text-gray-900",children:t("settings.language")})]}),u.jsx("div",{className:"space-y-4",children:u.jsxs("div",{children:[u.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:t("settings.resultsLanguage")}),u.jsx("p",{className:"text-sm text-gray-500 mb-3",children:t("settings.resultsLanguageDescription")}),u.jsx(Rd,{})]})})]})]})})}function y0(){return u.jsx(t0,{children:u.jsx(ih,{children:u.jsxs("div",{className:"App",children:[u.jsx(d0,{children:u.jsxs(Zm,{children:[u.jsx(ot,{path:"/",element:u.jsx(Gm,{to:"/dashboard",replace:!0})}),u.jsx(ot,{path:"/dashboard",element:u.jsx(f0,{})}),u.jsx(ot,{path:"/upload",element:u.jsx(p0,{})}),u.jsx(ot,{path:"/processing/:workflowId",element:u.jsx(m0,{})}),u.jsx(ot,{path:"/results/:workflowId",element:u.jsx(h0,{})}),u.jsx(ot,{path:"/knowledge-base",element:u.jsx(g0,{})}),u.jsx(ot,{path:"/settings",element:u.jsx(v0,{})})]})}),u.jsx(e0,{position:"top-right",toastOptions:{duration:4e3,style:{background:"#363636",color:"#fff"}}})]})})})}zi.createRoot(document.getElementById("root")).render(u.jsx(ou.StrictMode,{children:u.jsx(y0,{})}));
</file>

<file path="frontend/dist/index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Enhanced BOM Platform</title>
    <script type="module" crossorigin src="/assets/index-7d3f69a4.js"></script>
    <link rel="stylesheet" href="/assets/index-1389506b.css">
  </head>
  <body>
    <div id="root"></div>
    
  </body>
</html>
</file>

<file path="frontend/src/components/LanguageSwitcher.jsx">
import React from 'react'
import { Globe } from 'lucide-react'
import { useTranslation } from '../hooks/useTranslation'

export default function LanguageSwitcher({ className = '' }) {
  const { currentLanguage, changeLanguage, availableLanguages } = useTranslation()

  return (
    <div className={`relative inline-block ${className}`}>
      <select
        value={currentLanguage}
        onChange={(e) => changeLanguage(e.target.value)}
        className="appearance-none bg-white border border-gray-300 rounded-md py-2 pl-3 pr-8 text-sm leading-5 focus:outline-none focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
      >
        {availableLanguages.map((lang) => (
          <option key={lang.code} value={lang.code}>
            {lang.nativeName}
          </option>
        ))}
      </select>
      <div className="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
        <Globe className="h-4 w-4 text-gray-400" />
      </div>
    </div>
  )
}
</file>

<file path="frontend/src/components/Layout.jsx">
import React from 'react'
import { NavLink, useLocation } from 'react-router-dom'
import { Home, Upload, BarChart, Database, Settings } from 'lucide-react'
import { useTranslation } from '../hooks/useTranslation'
import LanguageSwitcher from './LanguageSwitcher'

export default function Layout({ children }) {
  const location = useLocation()
  const { t } = useTranslation()

  const navigation = [
    { name: t('navigation.dashboard'), href: '/dashboard', icon: Home },
    { name: t('navigation.upload'), href: '/upload', icon: Upload },
    { name: t('knowledgeBase.title'), href: '/knowledge-base', icon: Database },
    { name: t('settings.title'), href: '/settings', icon: Settings },
  ]

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Navigation */}
      <nav className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16">
            <div className="flex">
              <div className="flex-shrink-0 flex items-center">
                <BarChart className="h-8 w-8 text-primary-600" />
                <span className="ml-2 text-xl font-bold text-gray-900">
                  BOM Platform
                </span>
                <span className="ml-2 text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full">
                  Enhanced v2.0
                </span>
              </div>
              <div className="hidden sm:ml-6 sm:flex sm:space-x-8">
                {navigation.map((item) => {
                  const Icon = item.icon
                  const isActive = location.pathname === item.href
                  return (
                    <NavLink
                      key={item.name}
                      to={item.href}
                      className={`${
                        isActive
                          ? 'border-primary-500 text-primary-600'
                          : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                      } inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium`}
                    >
                      <Icon className="h-4 w-4 mr-2" />
                      {item.name}
                    </NavLink>
                  )
                })}
              </div>
            </div>

            {/* Language Switcher */}
            <div className="flex items-center">
              <LanguageSwitcher className="mr-4" />
              <div className="hidden sm:flex items-center space-x-4">
                <span className="text-xs text-gray-500">
                  QA Classification • Knowledge Base • Japanese Support
                </span>
              </div>
            </div>
          </div>
        </div>
      </nav>

      {/* Main content */}
      <main className="min-h-screen">
        {children}
      </main>
    </div>
  )
}
</file>

<file path="frontend/src/components/UI.jsx">
import React from 'react'

// Card component - PROPERLY EXPORTED
export function Card({ children, className = '', ...props }) {
  return (
    <div 
      className={`bg-white shadow-sm rounded-lg border border-gray-200 ${className}`}
      {...props}
    >
      {children}
    </div>
  )
}

// Button component
export function Button({ 
  children, 
  variant = 'primary', 
  size = 'md', 
  className = '', 
  disabled = false,
  ...props 
}) {
  const baseClasses = 'inline-flex items-center font-medium rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors'

  const variantClasses = {
    primary: 'bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500',
    secondary: 'bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500',
    outline: 'border border-gray-300 text-gray-700 bg-white hover:bg-gray-50 focus:ring-primary-500',
    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500'
  }

  const sizeClasses = {
    sm: 'px-3 py-2 text-sm',
    md: 'px-4 py-2 text-sm',
    lg: 'px-6 py-3 text-base'
  }

  const disabledClasses = disabled ? 'opacity-50 cursor-not-allowed' : ''

  return (
    <button
      className={`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${disabledClasses} ${className}`}
      disabled={disabled}
      {...props}
    >
      {children}
    </button>
  )
}

// Loading spinner component
export function LoadingSpinner({ size = 'md', className = '' }) {
  const sizeClasses = {
    sm: 'h-4 w-4',
    md: 'h-6 w-6', 
    lg: 'h-8 w-8'
  }

  return (
    <div className={`animate-spin rounded-full border-2 border-primary-600 border-t-transparent ${sizeClasses[size]} ${className}`}></div>
  )
}

// Export all components
export default {
  Card,
  Button,
  LoadingSpinner
}
</file>

<file path="frontend/src/hooks/useTranslation.jsx">
import React, { createContext, useContext, useState, useEffect } from 'react'

const TranslationContext = createContext()

// Embedded translations to avoid import issues
const TRANSLATIONS = {
  en: {
    "common": {
      "loading": "Loading...",
      "error": "Error",
      "success": "Success",
      "cancel": "Cancel",
      "confirm": "Confirm",
      "save": "Save",
      "delete": "Delete",
      "edit": "Edit",
      "view": "View",
      "download": "Download",
      "upload": "Upload",
      "search": "Search",
      "filter": "Filter",
      "export": "Export",
      "back": "Back",
      "next": "Next",
      "previous": "Previous",
      "close": "Close",
      "yes": "Yes",
      "no": "No",
      "clear": "Clear",
      "actions": "Actions",
      "created": "Created",
      "to": "to"
    },
    "navigation": {
      "dashboard": "Dashboard",
      "upload": "Upload",
      "processing": "Processing",
      "results": "Results"
    },
    "results": {
      "title": "BOM Comparison Results",
      "workflowId": "Workflow ID",
      "withItemClassificationReasons": "With Item Classification & Reasons",
      "backToDashboard": "Back to Dashboard",
      "materialsProcessed": "Materials Processed",
      "successfulMatches": "Successful Matches",
      "averageConfidence": "Average Confidence",
      "knowledgeBaseMatches": "Knowledge Base Matches",
      "exportResults": "Export Results",
      "resultsExported": "Results exported successfully!",
      "failedToLoadResults": "The results for this workflow could not be loaded.",
      "noMaterialsMatch": "No materials match the selected filter criteria.",
      "noReasonProvided": "No reason provided",
      "columns": {
        "sno": "S.No.",
        "materialName": "Material Name", 
        "qcProcess": "QC Process/WI Step",
        "consumable": "Consumable/Jigs/Tools",
        "partNumber": "Part Number",
        "qty": "Qty",
        "uom": "UoM",
        "vendor": "Vendor",
        "classification": "Classification",
        "confidence": "Confidence",
        "actionPath": "Action Path",
        "supplierMatch": "Supplier Match",
        "reason": "Reason"
      }
    },
    "knowledgeBase": {
      "title": "Knowledge Base",
      "subtitle": "Database of previously processed items for enhanced matching accuracy",
      "totalItems": "Total Items",
      "totalWorkflows": "Total Workflows",
      "totalMatches": "Total Matches",
      "matchRate": "Match Rate",
      "searchItems": "Search items in knowledge base...",
      "noItems": "No items found",
      "noItemsDescription": "No items match your search criteria."
    },
    "dashboard": {
      "title": "Dashboard",
      "subtitle": "Monitor your autonomous BOM processing workflows with QA classification",
      "showing": "Showing",
      "of": "of",
      "startProcessing": "Start Processing"
    },
    "settings": {
      "title": "Settings",
      "language": "Language Settings",
      "resultsLanguage": "Results Display Language",
      "resultsLanguageDescription": "Choose the language for displaying BOM comparison results",
      "knowledgeBase": "Knowledge Base Settings",
      "enableKnowledgeBase": "Enable Knowledge Base",
      "knowledgeBaseDescription": "Use historical data to improve matching accuracy",
      "clearKnowledgeBase": "Clear Knowledge Base",
      "clearKnowledgeBaseDescription": "Remove all stored historical data",
      "confirmClear": "Are you sure you want to clear all knowledge base data?"
    }
  },
  ja: {
    "common": {
      "loading": "読み込み中...",
      "error": "エラー",
      "success": "成功",
      "cancel": "キャンセル",
      "confirm": "確認",
      "save": "保存",
      "delete": "削除",
      "edit": "編集",
      "view": "表示",
      "download": "ダウンロード",
      "upload": "アップロード",
      "search": "検索",
      "filter": "フィルター",
      "export": "エクスポート",
      "back": "戻る",
      "next": "次へ",
      "previous": "前へ",
      "close": "閉じる",
      "yes": "はい",
      "no": "いいえ",
      "clear": "クリア",
      "actions": "操作",
      "created": "作成日",
      "to": "から"
    },
    "navigation": {
      "dashboard": "ダッシュボード",
      "upload": "アップロード",
      "processing": "処理中",
      "results": "結果"
    },
    "results": {
      "title": "BOM比較結果",
      "workflowId": "ワークフローID",
      "withItemClassificationReasons": "アイテム分類と理由付き",
      "backToDashboard": "ダッシュボードに戻る",
      "materialsProcessed": "処理済み材料",
      "successfulMatches": "成功マッチ",
      "averageConfidence": "平均信頼度",
      "knowledgeBaseMatches": "知識ベースマッチ",
      "exportResults": "結果エクスポート",
      "resultsExported": "結果が正常にエクスポートされました！",
      "failedToLoadResults": "このワークフローの結果を読み込めませんでした。",
      "noMaterialsMatch": "選択されたフィルター条件に一致する材料はありません。",
      "noReasonProvided": "理由が提供されていません",
      "columns": {
        "sno": "番号",
        "materialName": "材料名",
        "qcProcess": "QCプロセス/WIステップ",
        "consumable": "消耗品/治具/工具",
        "partNumber": "部品番号",
        "qty": "数量",
        "uom": "単位",
        "vendor": "ベンダー",
        "classification": "分類",
        "confidence": "信頼度",
        "actionPath": "アクションパス",
        "supplierMatch": "サプライヤーマッチ",
        "reason": "理由"
      }
    },
    "knowledgeBase": {
      "title": "知識ベース",
      "subtitle": "マッチング精度向上のための過去処理アイテムデータベース",
      "totalItems": "総アイテム数",
      "totalWorkflows": "総ワークフロー数",
      "totalMatches": "総マッチ数",
      "matchRate": "マッチ率",
      "searchItems": "知識ベース内のアイテムを検索...",
      "noItems": "アイテムが見つかりません",
      "noItemsDescription": "検索条件に一致するアイテムはありません。"
    },
    "dashboard": {
      "title": "ダッシュボード",
      "subtitle": "QA分類機能付きの自律的BOM処理ワークフローを監視",
      "showing": "表示中",
      "of": "/",
      "startProcessing": "処理開始"
    },
    "settings": {
      "title": "設定",
      "language": "言語設定",
      "resultsLanguage": "結果表示言語",
      "resultsLanguageDescription": "BOM比較結果の表示言語を選択してください",
      "knowledgeBase": "知識ベース設定",
      "enableKnowledgeBase": "知識ベースを有効化",
      "knowledgeBaseDescription": "過去のデータを使用してマッチング精度を向上させる",
      "clearKnowledgeBase": "知識ベースをクリア",
      "clearKnowledgeBaseDescription": "保存されたすべての過去データを削除",
      "confirmClear": "すべての知識ベースデータをクリアしてもよろしいですか？"
    }
  }
}

export function TranslationProvider({ children }) {
  const [currentLanguage, setCurrentLanguage] = useState('en')
  const [loading, setLoading] = useState(false)

  const changeLanguage = (language) => {
    setCurrentLanguage(language)
    try {
      localStorage?.setItem('preferred-language', language)
    } catch (e) {
      // localStorage not available
    }
  }

  const t = (key, fallback = key) => {
    const keys = key.split('.')
    let value = TRANSLATIONS[currentLanguage]

    for (const k of keys) {
      value = value?.[k]
      if (value === undefined) {
        // Try English fallback
        value = TRANSLATIONS.en
        for (const k of keys) {
          value = value?.[k]
          if (value === undefined) {
            console.warn(`Translation key not found: ${key}`)
            return fallback
          }
        }
        break
      }
    }

    return value || fallback
  }

  const value = {
    currentLanguage,
    changeLanguage,
    t,
    loading,
    availableLanguages: [
      { code: 'en', name: 'English', nativeName: 'English' },
      { code: 'ja', name: 'Japanese', nativeName: '日本語' }
    ]
  }

  return (
    <TranslationContext.Provider value={value}>
      {children}
    </TranslationContext.Provider>
  )
}

export function useTranslation() {
  const context = useContext(TranslationContext)
  if (context === undefined) {
    throw new Error('useTranslation must be used within a TranslationProvider')
  }
  return context
}
</file>

<file path="frontend/src/pages/Dashboard.jsx">
import React, { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import { Upload, Play, CheckCircle, TrendingUp, Database } from 'lucide-react'
import { useTranslation } from '../hooks/useTranslation'
import { Card, Button } from '../components/UI'

export default function Dashboard() {
  const navigate = useNavigate()
  const { t } = useTranslation()
  const [workflows, setWorkflows] = useState([])
  const [stats, setStats] = useState({
    total: 0,
    completed: 0,
    processing: 0,
    success_rate: 0
  })
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    loadDashboardData()
  }, [])

  const loadDashboardData = async () => {
    try {
      setLoading(true)
      // Mock data for demonstration
      setWorkflows([
        {
          workflow_id: 'wf-001',
          status: 'completed',
          created_at: new Date().toISOString(),
          message: 'Processing completed successfully'
        }
      ])
      setStats({
        total: 1,
        completed: 1,
        processing: 0,
        success_rate: 100
      })
    } catch (error) {
      console.error('Failed to load dashboard data:', error)
    } finally {
      setLoading(false)
    }
  }

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-4"></div>
          <p className="text-gray-600">{t('common.loading')}</p>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto p-6">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900">{t('dashboard.title')}</h1>
          <p className="text-gray-600 mt-1">{t('dashboard.subtitle')}</p>
        </div>

        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <Card className="p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                  <Database className="h-5 w-5 text-blue-600" />
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">Total Workflows</p>
                <p className="text-2xl font-semibold text-gray-900">{stats.total}</p>
              </div>
            </div>
          </Card>

          <Card className="p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                  <CheckCircle className="h-5 w-5 text-green-600" />
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">Completed</p>
                <p className="text-2xl font-semibold text-gray-900">{stats.completed}</p>
              </div>
            </div>
          </Card>

          <Card className="p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center">
                  <Play className="h-5 w-5 text-yellow-600" />
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">Processing</p>
                <p className="text-2xl font-semibold text-gray-900">{stats.processing}</p>
              </div>
            </div>
          </Card>

          <Card className="p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                  <TrendingUp className="h-5 w-5 text-purple-600" />
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">Success Rate</p>
                <p className="text-2xl font-semibold text-gray-900">{stats.success_rate}%</p>
              </div>
            </div>
          </Card>
        </div>

        {/* Action Button */}
        <div className="mb-8">
          <Button 
            onClick={() => navigate('/upload')}
            className="btn-primary"
          >
            <Upload className="h-5 w-5 mr-2" />
            {t('dashboard.startProcessing')}
          </Button>
        </div>

        {/* Recent Workflows */}
        <Card>
          <div className="px-6 py-4 border-b border-gray-200">
            <h3 className="text-lg font-medium text-gray-900">Recent Workflows</h3>
          </div>
          <div className="p-6">
            {workflows.length > 0 ? (
              <div className="space-y-4">
                {workflows.map((workflow) => (
                  <div key={workflow.workflow_id} className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                    <div>
                      <h4 className="font-medium text-gray-900">{workflow.workflow_id}</h4>
                      <p className="text-sm text-gray-500">{workflow.message}</p>
                    </div>
                    <div className="flex items-center space-x-4">
                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                        workflow.status === 'completed' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
                      }`}>
                        {workflow.status}
                      </span>
                      {workflow.status === 'completed' && (
                        <Button 
                          size="sm" 
                          variant="outline"
                          onClick={() => navigate(`/results/${workflow.workflow_id}`)}
                        >
                          View Results
                        </Button>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center py-8">
                <p className="text-gray-500">No workflows yet. Start by uploading your first document.</p>
              </div>
            )}
          </div>
        </Card>
      </div>
    </div>
  )
}
</file>

<file path="frontend/src/pages/KnowledgeBase.jsx">
import React, { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import { Database, ArrowLeft } from 'lucide-react'
import { useTranslation } from '../hooks/useTranslation'
import { Card } from '../components/UI'

export default function KnowledgeBase() {
  const navigate = useNavigate()
  const { t } = useTranslation()
  const [stats, setStats] = useState({
    total_items: 0,
    total_workflows: 0,
    total_matches: 0,
    match_rate: 0
  })

  useEffect(() => {
    // Mock data for demonstration
    setStats({
      total_items: 0,
      total_workflows: 0,
      total_matches: 0,
      match_rate: 0
    })
  }, [])

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto p-6">
        {/* Header */}
        <div className="mb-8">
          <button
            onClick={() => navigate('/dashboard')}
            className="inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4"
          >
            <ArrowLeft className="h-4 w-4 mr-1" />
            Back to Dashboard
          </button>
          <h1 className="text-3xl font-bold text-gray-900">{t('knowledgeBase.title')}</h1>
          <p className="text-gray-600 mt-1">{t('knowledgeBase.subtitle')}</p>
        </div>

        {/* Statistics */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
          <Card className="p-6">
            <div className="flex items-center">
              <Database className="h-8 w-8 text-blue-600" />
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">{t('knowledgeBase.totalItems')}</p>
                <p className="text-2xl font-semibold text-gray-900">{stats.total_items}</p>
              </div>
            </div>
          </Card>

          <Card className="p-6">
            <div className="flex items-center">
              <div className="h-8 w-8 bg-green-100 rounded-lg flex items-center justify-center">
                <span className="text-green-600 font-semibold">📋</span>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">{t('knowledgeBase.totalWorkflows')}</p>
                <p className="text-2xl font-semibold text-gray-900">{stats.total_workflows}</p>
              </div>
            </div>
          </Card>

          <Card className="p-6">
            <div className="flex items-center">
              <div className="h-8 w-8 bg-purple-100 rounded-lg flex items-center justify-center">
                <span className="text-purple-600 font-semibold">🔗</span>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">{t('knowledgeBase.totalMatches')}</p>
                <p className="text-2xl font-semibold text-gray-900">{stats.total_matches}</p>
              </div>
            </div>
          </Card>

          <Card className="p-6">
            <div className="flex items-center">
              <div className="h-8 w-8 bg-yellow-100 rounded-lg flex items-center justify-center">
                <span className="text-yellow-600 font-semibold">📊</span>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">{t('knowledgeBase.matchRate')}</p>
                <p className="text-2xl font-semibold text-gray-900">{stats.match_rate}%</p>
              </div>
            </div>
          </Card>
        </div>
      </div>
    </div>
  )
}
</file>

<file path="frontend/src/pages/Processing.jsx">
import React, { useState, useEffect } from 'react'
import { useParams, useNavigate } from 'react-router-dom'
import { ArrowLeft, CheckCircle, Clock } from 'lucide-react'
import { useTranslation } from '../hooks/useTranslation'
import { Card, LoadingSpinner } from '../components/UI'

export default function Processing() {
  const { workflowId } = useParams()
  const navigate = useNavigate()
  const { t } = useTranslation()
  const [workflow, setWorkflow] = useState(null)
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    if (workflowId) {
      // Poll for workflow status
      const interval = setInterval(() => {
        checkWorkflowStatus()
      }, 2000)

      checkWorkflowStatus()

      return () => clearInterval(interval)
    }
  }, [workflowId])

  const checkWorkflowStatus = async () => {
    try {
      const response = await fetch(`/api/autonomous/workflow/${workflowId}/status`)
      if (response.ok) {
        const data = await response.json()
        setWorkflow(data)

        if (data.status === 'completed') {
          // Redirect to results after a short delay
          setTimeout(() => {
            navigate(`/results/${workflowId}`)
          }, 1000)
        } else if (data.status === 'error') {
          setLoading(false)
        }
      }
    } catch (error) {
      console.error('Failed to check workflow status:', error)
    } finally {
      setLoading(false)
    }
  }

  if (loading && !workflow) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <LoadingSpinner size="lg" className="mx-auto mb-4" />
          <p className="text-gray-600">{t('common.loading')}</p>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-4xl mx-auto p-6">
        {/* Header */}
        <div className="mb-8">
          <button
            onClick={() => navigate('/dashboard')}
            className="inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4"
          >
            <ArrowLeft className="h-4 w-4 mr-1" />
            Back to Dashboard
          </button>
          <h1 className="text-3xl font-bold text-gray-900">{t('navigation.processing')}</h1>
          <p className="text-gray-600 mt-1">
            Workflow ID: {workflowId}
          </p>
        </div>

        {workflow && (
          <Card className="p-8">
            <div className="text-center">
              {workflow.status === 'completed' ? (
                <CheckCircle className="mx-auto h-16 w-16 text-green-500 mb-4" />
              ) : workflow.status === 'error' ? (
                <div className="mx-auto h-16 w-16 text-red-500 mb-4">❌</div>
              ) : (
                <LoadingSpinner size="lg" className="mx-auto mb-4" />
              )}

              <h2 className="text-xl font-semibold text-gray-900 mb-2">
                {workflow.status === 'completed' ? 'Processing Complete!' :
                 workflow.status === 'error' ? 'Processing Failed' :
                 'Processing in Progress...'}
              </h2>

              <p className="text-gray-600 mb-6">
                {workflow.message || 'Processing your documents...'}
              </p>

              <div className="bg-gray-200 rounded-full h-2 mb-4">
                <div 
                  className="bg-primary-600 h-2 rounded-full transition-all duration-300"
                  style={{ width: `${workflow.progress || 0}%` }}
                ></div>
              </div>

              <p className="text-sm text-gray-500">
                Current Stage: {workflow.current_stage || 'initializing'}
              </p>

              {workflow.progress && (
                <p className="text-sm text-gray-500 mt-1">
                  {Math.round(workflow.progress)}% Complete
                </p>
              )}
            </div>
          </Card>
        )}
      </div>
    </div>
  )
}
</file>

<file path="frontend/src/pages/Results.jsx">
import React, { useState, useEffect } from 'react'
import { useParams, useNavigate } from 'react-router-dom'
import { ArrowLeft, Download, Database } from 'lucide-react'
import { useTranslation } from '../hooks/useTranslation'
import { TranslationService } from '../services/translation'
import { Card } from '../components/UI'
import toast from 'react-hot-toast'

export default function Results() {
  const { workflowId } = useParams()
  const navigate = useNavigate()
  const { t, currentLanguage } = useTranslation()

  const [results, setResults] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  useEffect(() => {
    const fetchResults = async () => {
      try {
        setLoading(true)
        const response = await fetch(`/api/autonomous/workflow/${workflowId}/results`)
        if (!response.ok) {
          throw new Error('Failed to fetch results')
        }
        const data = await response.json()
        setResults(data)
      } catch (err) {
        console.error('Error fetching results:', err)
        setError(err.message)
      } finally {
        setLoading(false)
      }
    }

    if (workflowId) {
      fetchResults()
    }
  }, [workflowId])

  const handleExportResults = async () => {
    try {
      const dataToExport = {
        workflow_id: workflowId,
        results: results,
        export_date: new Date().toISOString(),
        language: currentLanguage
      }

      const blob = new Blob([JSON.stringify(dataToExport, null, 2)], { type: 'application/json' })
      const url = URL.createObjectURL(blob)
      const a = document.createElement('a')
      a.href = url
      a.download = `bom-results-${workflowId}-${currentLanguage}.json`
      document.body.appendChild(a)
      a.click()
      document.body.removeChild(a)
      URL.revokeObjectURL(url)

      toast.success(t('results.resultsExported'))
    } catch (error) {
      console.error('Export failed:', error)
      toast.error('Export failed')
    }
  }

  const formatNumber = (num) => {
    if (num === null || num === undefined || isNaN(num)) return '-'
    const locale = currentLanguage === 'ja' ? 'ja-JP' : 'en-US'
    return new Intl.NumberFormat(locale).format(num)
  }

  const formatPercentage = (value) => {
    if (value === null || value === undefined || isNaN(value)) return '-'
    const locale = currentLanguage === 'ja' ? 'ja-JP' : 'en-US'
    return new Intl.NumberFormat(locale, {
      style: 'percent',
      minimumFractionDigits: 1,
      maximumFractionDigits: 1
    }).format(value / 100)
  }

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-4"></div>
          <p className="text-gray-600">{t('common.loading')}</p>
        </div>
      </div>
    )
  }

  if (error || !results) {
    return (
      <div className="min-h-screen bg-gray-50 p-6">
        <div className="max-w-7xl mx-auto">
          <div className="mb-8">
            <button
              onClick={() => navigate('/dashboard')}
              className="inline-flex items-center text-sm text-gray-500 hover:text-gray-700"
            >
              <ArrowLeft className="h-4 w-4 mr-1" />
              {t('results.backToDashboard')}
            </button>
          </div>

          <div className="bg-white rounded-lg shadow p-6 text-center">
            <div className="text-red-600 mb-4">
              <div className="w-16 h-16 mx-auto mb-4 bg-red-100 rounded-full flex items-center justify-center">
                <span className="text-2xl">⚠️</span>
              </div>
            </div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">{t('common.error')}</h3>
            <p className="text-gray-600">{t('results.failedToLoadResults')}</p>
          </div>
        </div>
      </div>
    )
  }

  const matches = results.matches || []
  const summary = results.summary || {}
  const knowledgeBaseStats = results.knowledge_base_stats || {}

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto p-6">
        {/* Header */}
        <div className="mb-8">
          <div className="flex items-center justify-between">
            <div>
              <button
                onClick={() => navigate('/dashboard')}
                className="inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4"
              >
                <ArrowLeft className="h-4 w-4 mr-1" />
                {t('results.backToDashboard')}
              </button>
              <h1 className="text-3xl font-bold text-gray-900">{t('results.title')}</h1>
              <p className="text-gray-600 mt-1">
                {t('results.workflowId')}: {workflowId} • {t('results.withItemClassificationReasons')}
              </p>
            </div>
            <div className="flex items-center space-x-3">
              <button
                onClick={handleExportResults}
                className="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
              >
                <Download className="h-4 w-4 mr-2" />
                {t('results.exportResults')}
              </button>
            </div>
          </div>
        </div>

        {/* Statistics Cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <Card className="p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                  <span className="text-blue-600 font-semibold text-sm">📊</span>
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">{t('results.materialsProcessed')}</p>
                <p className="text-2xl font-semibold text-gray-900">
                  {formatNumber(summary.total_materials || 0)}
                </p>
              </div>
            </div>
          </Card>

          <Card className="p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                  <span className="text-green-600 font-semibold text-sm">✅</span>
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">{t('results.successfulMatches')}</p>
                <p className="text-2xl font-semibold text-gray-900">
                  {formatNumber(summary.successful_matches || 0)}
                </p>
              </div>
            </div>
          </Card>

          <Card className="p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center">
                  <span className="text-yellow-600 font-semibold text-sm">📈</span>
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">{t('results.averageConfidence')}</p>
                <p className="text-2xl font-semibold text-gray-900">
                  {formatPercentage(
                    matches.reduce((sum, m) => sum + (m.confidence_score || 0), 0) / matches.length || 0
                  )}
                </p>
              </div>
            </div>
          </Card>

          <Card className="p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                  <Database className="h-4 w-4 text-purple-600" />
                </div>
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-500">{t('results.knowledgeBaseMatches')}</p>
                <p className="text-2xl font-semibold text-gray-900">
                  {formatNumber(summary.knowledge_base_matches || 0)}
                </p>
              </div>
            </div>
          </Card>
        </div>

        {/* Results Table */}
        <Card className="overflow-hidden">
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    {t('results.columns.sno')}
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    {t('results.columns.materialName')}
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    {t('results.columns.qcProcess')}
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    {t('results.columns.partNumber')}
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    {t('results.columns.classification')}
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    {t('results.columns.confidence')}
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    {t('results.columns.supplierMatch')}
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    {t('results.columns.reason')}
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {matches.length > 0 ? (
                  matches.map((match, index) => {
                    const actionPath = TranslationService.translateActionPath(match.qa_classification_label || 5, currentLanguage)

                    return (
                      <tr key={index} className="hover:bg-gray-50">
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {index + 1}
                        </td>
                        <td className="px-6 py-4 text-sm text-gray-900">
                          <div className="font-medium">{match.qa_material_name}</div>
                          {match.qa_excerpt && (
                            <div className="text-xs text-gray-500 mt-1">"{match.qa_excerpt}"</div>
                          )}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {match.qc_process_step || '-'}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {match.part_number || '-'}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          <div className="flex items-center">
                            <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                              {t('results.columns.classification')} {match.qa_classification_label || 5}
                            </span>
                          </div>
                          <div className="text-xs text-gray-500 mt-1">
                            {TranslationService.translateClassificationLabel(match.qa_classification_label || 5, currentLanguage)}
                          </div>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {TranslationService.translateConfidenceLevel(match.qa_confidence_level, currentLanguage)}
                        </td>
                        <td className="px-6 py-4 text-sm text-gray-900">
                          {match.confidence_score > 0 ? (
                            <div>
                              <div className="font-medium">{match.supplier_description}</div>
                              <div className="text-xs text-gray-500">
                                {match.supplier_part_number} • {Math.round(match.confidence_score * 100)}%
                              </div>
                              <div className="text-xs text-blue-600 mt-1">
                                {TranslationService.translateMatchSource(match.match_source, currentLanguage)}
                              </div>
                            </div>
                          ) : (
                            <span className="text-gray-400">-</span>
                          )}
                        </td>
                        <td className="px-6 py-4 text-sm text-gray-600">
                          {match.reasoning || t('results.noReasonProvided')}
                        </td>
                      </tr>
                    )
                  })
                ) : (
                  <tr>
                    <td colSpan="8" className="px-6 py-8 text-center text-gray-500">
                      {t('results.noMaterialsMatch')}
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </Card>

        {/* Knowledge Base Stats */}
        {knowledgeBaseStats && Object.keys(knowledgeBaseStats).length > 0 && (
          <Card className="mt-8 p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">
              {t('knowledgeBase.title')} {t('dashboard.showing')}
            </h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div className="text-center">
                <div className="text-2xl font-bold text-gray-900">
                  {formatNumber(knowledgeBaseStats.total_items || 0)}
                </div>
                <div className="text-sm text-gray-500">{t('knowledgeBase.totalItems')}</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-gray-900">
                  {formatNumber(knowledgeBaseStats.total_workflows || 0)}
                </div>
                <div className="text-sm text-gray-500">{t('knowledgeBase.totalWorkflows')}</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-gray-900">
                  {formatNumber(knowledgeBaseStats.total_matches || 0)}
                </div>
                <div className="text-sm text-gray-500">{t('knowledgeBase.totalMatches')}</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-gray-900">
                  {formatPercentage(knowledgeBaseStats.match_rate || 0)}
                </div>
                <div className="text-sm text-gray-500">{t('knowledgeBase.matchRate')}</div>
              </div>
            </div>
          </Card>
        )}
      </div>
    </div>
  )
}
</file>

<file path="frontend/src/pages/Settings.jsx">
import React from 'react'
import { useNavigate } from 'react-router-dom'
import { ArrowLeft, Globe } from 'lucide-react'
import { useTranslation } from '../hooks/useTranslation'
import { Card } from '../components/UI'
import LanguageSwitcher from '../components/LanguageSwitcher'

export default function Settings() {
  const navigate = useNavigate()
  const { t } = useTranslation()

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-4xl mx-auto p-6">
        {/* Header */}
        <div className="mb-8">
          <button
            onClick={() => navigate('/dashboard')}
            className="inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4"
          >
            <ArrowLeft className="h-4 w-4 mr-1" />
            Back to Dashboard
          </button>
          <h1 className="text-3xl font-bold text-gray-900">{t('settings.title')}</h1>
        </div>

        {/* Language Settings */}
        <Card className="p-6">
          <div className="flex items-center mb-4">
            <Globe className="h-5 w-5 text-gray-400 mr-2" />
            <h2 className="text-lg font-medium text-gray-900">{t('settings.language')}</h2>
          </div>

          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                {t('settings.resultsLanguage')}
              </label>
              <p className="text-sm text-gray-500 mb-3">
                {t('settings.resultsLanguageDescription')}
              </p>
              <LanguageSwitcher />
            </div>
          </div>
        </Card>
      </div>
    </div>
  )
}
</file>

<file path="frontend/src/pages/Upload.jsx">
import React, { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { Upload as UploadIcon, File, ArrowLeft } from 'lucide-react'
import { useTranslation } from '../hooks/useTranslation'
import { Card, Button } from '../components/UI'
import toast from 'react-hot-toast'

export default function Upload() {
  const navigate = useNavigate()
  const { t } = useTranslation()
  const [wiDocument, setWiDocument] = useState(null)
  const [itemMaster, setItemMaster] = useState(null)
  const [uploading, setUploading] = useState(false)

  const handleFileChange = (event, type) => {
    const file = event.target.files[0]
    if (type === 'wi') {
      setWiDocument(file)
    } else {
      setItemMaster(file)
    }
  }

  const handleUpload = async () => {
    if (!wiDocument || !itemMaster) {
      toast.error('Please select both files')
      return
    }

    try {
      setUploading(true)

      const formData = new FormData()
      formData.append('wi_document', wiDocument)
      formData.append('item_master', itemMaster)

      const response = await fetch('/api/autonomous/upload', {
        method: 'POST',
        body: formData
      })

      if (!response.ok) {
        throw new Error('Upload failed')
      }

      const result = await response.json()

      if (result.success) {
        toast.success('Upload successful!')
        navigate(`/processing/${result.workflow_id}`)
      } else {
        throw new Error(result.message || 'Upload failed')
      }
    } catch (error) {
      console.error('Upload error:', error)
      toast.error('Upload failed: ' + error.message)
    } finally {
      setUploading(false)
    }
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-4xl mx-auto p-6">
        {/* Header */}
        <div className="mb-8">
          <button
            onClick={() => navigate('/dashboard')}
            className="inline-flex items-center text-sm text-gray-500 hover:text-gray-700 mb-4"
          >
            <ArrowLeft className="h-4 w-4 mr-1" />
            Back to Dashboard
          </button>
          <h1 className="text-3xl font-bold text-gray-900">{t('navigation.upload')}</h1>
          <p className="text-gray-600 mt-1">
            Upload your Japanese WI/QC document and Item Master to start autonomous processing
          </p>
        </div>

        {/* Upload Cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
          {/* WI Document Upload */}
          <Card className="p-6">
            <div className="text-center">
              <File className="mx-auto h-12 w-12 text-gray-400 mb-4" />
              <h3 className="text-lg font-medium text-gray-900 mb-2">
                WI/QC Document
              </h3>
              <p className="text-sm text-gray-500 mb-4">
                Supports PDF, DOCX, DOC, TXT formats
              </p>
              <input
                type="file"
                accept=".pdf,.docx,.doc,.txt"
                onChange={(e) => handleFileChange(e, 'wi')}
                className="hidden"
                id="wi-upload"
              />
              <label
                htmlFor="wi-upload"
                className="cursor-pointer inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
              >
                <UploadIcon className="h-4 w-4 mr-2" />
                Choose File
              </label>
              {wiDocument && (
                <p className="mt-2 text-sm text-green-600">
                  Selected: {wiDocument.name}
                </p>
              )}
            </div>
          </Card>

          {/* Item Master Upload */}
          <Card className="p-6">
            <div className="text-center">
              <File className="mx-auto h-12 w-12 text-gray-400 mb-4" />
              <h3 className="text-lg font-medium text-gray-900 mb-2">
                Item Master
              </h3>
              <p className="text-sm text-gray-500 mb-4">
                Supports Excel (XLSX, XLS) and CSV formats
              </p>
              <input
                type="file"
                accept=".xlsx,.xls,.csv"
                onChange={(e) => handleFileChange(e, 'item')}
                className="hidden"
                id="item-upload"
              />
              <label
                htmlFor="item-upload"
                className="cursor-pointer inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
              >
                <UploadIcon className="h-4 w-4 mr-2" />
                Choose File
              </label>
              {itemMaster && (
                <p className="mt-2 text-sm text-green-600">
                  Selected: {itemMaster.name}
                </p>
              )}
            </div>
          </Card>
        </div>

        {/* Upload Button */}
        <div className="text-center">
          <Button
            onClick={handleUpload}
            disabled={!wiDocument || !itemMaster || uploading}
            className="btn-primary"
          >
            {uploading ? 'Uploading...' : 'Start Processing'}
          </Button>
          <p className="text-sm text-gray-500 mt-4">
            Our autonomous agents will process your documents through translation, 
            extraction with WI/QC Item classification, and intelligent comparison stages. 
            You can monitor progress in real-time.
          </p>
        </div>
      </div>
    </div>
  )
}
</file>

<file path="frontend/src/services/translation.js">
// Translation utility functions for result data
export class TranslationService {

  // Translate classification labels
  static translateClassificationLabel(label, language = 'en') {
    const translations = {
      en: {
        1: 'Direct Material - Production',
        2: 'Indirect Material - Support', 
        3: 'Tools & Equipment',
        4: 'Consumable Items',
        5: 'Other/Miscellaneous'
      },
      ja: {
        1: '直接材料 - 製造',
        2: '間接材料 - サポート',
        3: '工具・設備', 
        4: '消耗品',
        5: 'その他・雑項目'
      }
    }

    return translations[language]?.[label] || translations.en[label] || `Label ${label}`
  }

  // Translate confidence levels
  static translateConfidenceLevel(level, language = 'en') {
    const translations = {
      en: {
        'high': 'High',
        'medium': 'Medium',
        'low': 'Low'
      },
      ja: {
        'high': '高',
        'medium': '中', 
        'low': '低'
      }
    }

    return translations[language]?.[level?.toLowerCase()] || level
  }

  // Translate match sources
  static translateMatchSource(source, language = 'en') {
    const translations = {
      en: {
        'knowledge_base': 'From Knowledge Base',
        'supplier_bom': 'From Supplier BOM',
        'hybrid': 'Verified Match',
        'no_match': 'No Match'
      },
      ja: {
        'knowledge_base': '知識ベースから',
        'supplier_bom': 'サプライヤーBOMから', 
        'hybrid': '検証済みマッチ',
        'no_match': 'マッチなし'
      }
    }

    return translations[language]?.[source] || source
  }

  // Translate action paths based on classification
  static translateActionPath(classificationLabel, language = 'en') {
    const paths = {
      en: {
        1: { icon: '🟢', text: 'Production Use' },
        2: { icon: '🟡', text: 'Support Review' },
        3: { icon: '🔧', text: 'Equipment Check' },
        4: { icon: '📦', text: 'Inventory Track' },
        5: { icon: '❓', text: 'Manual Review' }
      },
      ja: {
        1: { icon: '🟢', text: '生産使用' },
        2: { icon: '🟡', text: 'サポート確認' },
        3: { icon: '🔧', text: '設備チェック' },
        4: { icon: '📦', text: '在庫追跡' },
        5: { icon: '❓', text: '手動確認' }
      }
    }

    return paths[language]?.[classificationLabel] || paths.en[classificationLabel] || { icon: '❓', text: 'Review' }
  }

  // Translate boolean values
  static translateBoolean(value, language = 'en') {
    if (value === null || value === undefined) return '-'

    const translations = {
      en: {
        true: 'Yes',
        false: 'No'
      },
      ja: {
        true: 'はい',
        false: 'いいえ'
      }
    }

    return translations[language]?.[value.toString()] || value.toString()
  }

  // Translate entire result item for display
  static translateResultItem(item, language = 'en') {
    if (!item) return item

    return {
      ...item,
      classification_description: this.translateClassificationLabel(item.qa_classification_label, language),
      confidence_level_text: this.translateConfidenceLevel(item.qa_confidence_level, language),
      match_source_text: this.translateMatchSource(item.match_source, language),
      action_path: this.translateActionPath(item.qa_classification_label, language),
      consumable_text: this.translateBoolean(item.consumable_jigs_tools, language)
    }
  }
}
</file>

<file path="frontend/src/styles/globals.css">
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-family: 'Inter', system-ui, sans-serif;
  }
}

@layer components {
  .btn-primary {
    @apply bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2;
  }
}
</file>

<file path="frontend/src/App.jsx">
import React from 'react'
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'
import { Toaster } from 'react-hot-toast'
import { TranslationProvider } from './hooks/useTranslation'
import Layout from './components/Layout'
import Dashboard from './pages/Dashboard'
import Upload from './pages/Upload'
import Processing from './pages/Processing'
import Results from './pages/Results'
import KnowledgeBase from './pages/KnowledgeBase'
import Settings from './pages/Settings'

function App() {
  return (
    <TranslationProvider>
      <Router>
        <div className="App">
          <Layout>
            <Routes>
              <Route path="/" element={<Navigate to="/dashboard" replace />} />
              <Route path="/dashboard" element={<Dashboard />} />
              <Route path="/upload" element={<Upload />} />
              <Route path="/processing/:workflowId" element={<Processing />} />
              <Route path="/results/:workflowId" element={<Results />} />
              <Route path="/knowledge-base" element={<KnowledgeBase />} />
              <Route path="/settings" element={<Settings />} />
            </Routes>
          </Layout>
          <Toaster 
            position="top-right"
            toastOptions={{
              duration: 4000,
              style: {
                background: '#363636',
                color: '#fff',
              },
            }}
          />
        </div>
      </Router>
    </TranslationProvider>
  )
}

export default App
</file>

<file path="frontend/src/main.jsx">
import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'
import './styles/globals.css'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)
</file>

<file path="frontend/index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Enhanced BOM Platform</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>
</file>

<file path="frontend/package.json">
{
  "name": "autonomous-bom-platform-enhanced",
  "version": "2.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.8.1",
    "react-hot-toast": "^2.4.0",
    "framer-motion": "^10.0.1",
    "lucide-react": "^0.263.1",
    "axios": "^1.4.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.15",
    "@types/react-dom": "^18.2.7",
    "@vitejs/plugin-react": "^4.0.3",
    "eslint": "^8.45.0",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.3",
    "vite": "^4.4.5",
    "autoprefixer": "^10.4.14",
    "postcss": "^8.4.24",
    "tailwindcss": "^3.3.0"
  }
}
</file>

<file path="frontend/postcss.config.js">
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
</file>

<file path="frontend/tailwind.config.js">
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          50: '#eff6ff',
          100: '#dbeafe',
          200: '#bfdbfe',
          300: '#93c5fd',
          400: '#60a5fa',
          500: '#3b82f6',
          600: '#2563eb',
          700: '#1d4ed8',
          800: '#1e40af',
          900: '#1e3a8a',
        },
      },
    },
  },
  plugins: [],
}
</file>

<file path="frontend/vite.config.js">
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  server: {
    host: true,
    port: 5173,
    proxy: {
      '/api': {
        target: 'http://localhost:8000',
        changeOrigin: true
      }
    }
  }
})
</file>

</files>
